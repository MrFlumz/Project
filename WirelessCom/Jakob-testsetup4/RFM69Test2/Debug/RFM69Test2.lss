
RFM69Test2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000058  00800100  00001710  000017a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001710  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000138  00800158  00800158  000017fc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000017fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001858  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000200  00000000  00000000  00001898  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000256a  00000000  00000000  00001a98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e3d  00000000  00000000  00004002  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000130a  00000000  00000000  00004e3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000634  00000000  00000000  0000614c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000090f  00000000  00000000  00006780  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001815  00000000  00000000  0000708f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000210  00000000  00000000  000088a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 bf 05 	jmp	0xb7e	; 0xb7e <__vector_1>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 3b 02 	jmp	0x476	; 0x476 <__vector_5>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 14 02 	jmp	0x428	; 0x428 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 e1       	ldi	r30, 0x10	; 16
      7c:	f7 e1       	ldi	r31, 0x17	; 23
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a8 35       	cpi	r26, 0x58	; 88
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2
      8c:	a8 e5       	ldi	r26, 0x58	; 88
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a0 39       	cpi	r26, 0x90	; 144
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 ca 00 	call	0x194	; 0x194 <main>
      9e:	0c 94 86 0b 	jmp	0x170c	; 0x170c <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <millis_init>:
      a6:	e1 e8       	ldi	r30, 0x81	; 129
      a8:	f0 e0       	ldi	r31, 0x00	; 0
      aa:	80 81       	ld	r24, Z
      ac:	8a 60       	ori	r24, 0x0A	; 10
      ae:	80 83       	st	Z, r24
      b0:	83 e0       	ldi	r24, 0x03	; 3
      b2:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
      b6:	88 ee       	ldi	r24, 0xE8	; 232
      b8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
      bc:	78 94       	sei
      be:	ef e6       	ldi	r30, 0x6F	; 111
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	80 81       	ld	r24, Z
      c4:	82 60       	ori	r24, 0x02	; 2
      c6:	80 83       	st	Z, r24
      c8:	08 95       	ret

000000ca <millis>:
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
      ca:	f8 94       	cli
      cc:	60 91 5e 01 	lds	r22, 0x015E	; 0x80015e <timer1_millis>
      d0:	70 91 5f 01 	lds	r23, 0x015F	; 0x80015f <timer1_millis+0x1>
      d4:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <timer1_millis+0x2>
      d8:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <timer1_millis+0x3>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
      dc:	78 94       	sei
      de:	08 95       	ret

000000e0 <__vector_11>:
      e0:	1f 92       	push	r1
      e2:	0f 92       	push	r0
      e4:	0f b6       	in	r0, 0x3f	; 63
      e6:	0f 92       	push	r0
      e8:	11 24       	eor	r1, r1
      ea:	8f 93       	push	r24
      ec:	9f 93       	push	r25
      ee:	af 93       	push	r26
      f0:	bf 93       	push	r27
      f2:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <timer1_millis>
      f6:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <timer1_millis+0x1>
      fa:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <timer1_millis+0x2>
      fe:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <timer1_millis+0x3>
     102:	01 96       	adiw	r24, 0x01	; 1
     104:	a1 1d       	adc	r26, r1
     106:	b1 1d       	adc	r27, r1
     108:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <timer1_millis>
     10c:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <timer1_millis+0x1>
     110:	a0 93 60 01 	sts	0x0160, r26	; 0x800160 <timer1_millis+0x2>
     114:	b0 93 61 01 	sts	0x0161, r27	; 0x800161 <timer1_millis+0x3>
     118:	bf 91       	pop	r27
     11a:	af 91       	pop	r26
     11c:	9f 91       	pop	r25
     11e:	8f 91       	pop	r24
     120:	0f 90       	pop	r0
     122:	0f be       	out	0x3f, r0	; 63
     124:	0f 90       	pop	r0
     126:	1f 90       	pop	r1
     128:	18 95       	reti

0000012a <countChars>:
}

unsigned char serialAvailable()
{
	return available;
}
     12a:	cf 93       	push	r28
     12c:	df 93       	push	r29
     12e:	fc 01       	movw	r30, r24
     130:	d0 81       	ld	r29, Z
     132:	dd 23       	and	r29, r29
     134:	69 f0       	breq	.+26     	; 0x150 <countChars+0x26>
     136:	c6 2f       	mov	r28, r22
     138:	01 96       	adiw	r24, 0x01	; 1
     13a:	0e 94 95 00 	call	0x12a	; 0x12a <countChars>
     13e:	21 e0       	ldi	r18, 0x01	; 1
     140:	30 e0       	ldi	r19, 0x00	; 0
     142:	dc 17       	cp	r29, r28
     144:	11 f0       	breq	.+4      	; 0x14a <countChars+0x20>
     146:	20 e0       	ldi	r18, 0x00	; 0
     148:	30 e0       	ldi	r19, 0x00	; 0
     14a:	82 0f       	add	r24, r18
     14c:	93 1f       	adc	r25, r19
     14e:	02 c0       	rjmp	.+4      	; 0x154 <countChars+0x2a>
     150:	80 e0       	ldi	r24, 0x00	; 0
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	df 91       	pop	r29
     156:	cf 91       	pop	r28
     158:	08 95       	ret

0000015a <serialRead>:
     15a:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <available>
     15e:	99 23       	and	r25, r25
     160:	b9 f0       	breq	.+46     	; 0x190 <serialRead+0x36>
     162:	e0 91 5b 01 	lds	r30, 0x015B	; 0x80015b <rx_read_pos>
     166:	e9 17       	cp	r30, r25
     168:	38 f0       	brcs	.+14     	; 0x178 <serialRead+0x1e>
     16a:	f0 e0       	ldi	r31, 0x00	; 0
     16c:	e9 1b       	sub	r30, r25
     16e:	f1 09       	sbc	r31, r1
     170:	ed 5f       	subi	r30, 0xFD	; 253
     172:	fd 4f       	sbci	r31, 0xFD	; 253
     174:	80 81       	ld	r24, Z
     176:	08 c0       	rjmp	.+16     	; 0x188 <serialRead+0x2e>
     178:	f0 e0       	ldi	r31, 0x00	; 0
     17a:	e0 58       	subi	r30, 0x80	; 128
     17c:	ff 4f       	sbci	r31, 0xFF	; 255
     17e:	e9 1b       	sub	r30, r25
     180:	f1 09       	sbc	r31, r1
     182:	ed 5f       	subi	r30, 0xFD	; 253
     184:	fd 4f       	sbci	r31, 0xFD	; 253
     186:	80 81       	ld	r24, Z
     188:	91 50       	subi	r25, 0x01	; 1
     18a:	90 93 5a 01 	sts	0x015A, r25	; 0x80015a <available>
     18e:	08 95       	ret
     190:	80 e0       	ldi	r24, 0x00	; 0
     192:	08 95       	ret

00000194 <main>:
     194:	cf 93       	push	r28
     196:	df 93       	push	r29
     198:	cd b7       	in	r28, 0x3d	; 61
     19a:	de b7       	in	r29, 0x3e	; 62
     19c:	af 97       	sbiw	r28, 0x2f	; 47
     19e:	0f b6       	in	r0, 0x3f	; 63
     1a0:	f8 94       	cli
     1a2:	de bf       	out	0x3e, r29	; 62
     1a4:	0f be       	out	0x3f, r0	; 63
     1a6:	cd bf       	out	0x3d, r28	; 61
     1a8:	ec e7       	ldi	r30, 0x7C	; 124
     1aa:	f0 e0       	ldi	r31, 0x00	; 0
     1ac:	80 81       	ld	r24, Z
     1ae:	87 64       	ori	r24, 0x47	; 71
     1b0:	80 83       	st	Z, r24
     1b2:	ea e7       	ldi	r30, 0x7A	; 122
     1b4:	f0 e0       	ldi	r31, 0x00	; 0
     1b6:	80 81       	ld	r24, Z
     1b8:	87 68       	ori	r24, 0x87	; 135
     1ba:	80 83       	st	Z, r24
     1bc:	88 e1       	ldi	r24, 0x18	; 24
     1be:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
     1c2:	e8 e6       	ldi	r30, 0x68	; 104
     1c4:	f0 e0       	ldi	r31, 0x00	; 0
     1c6:	80 81       	ld	r24, Z
     1c8:	84 60       	ori	r24, 0x04	; 4
     1ca:	80 83       	st	Z, r24
     1cc:	8a b1       	in	r24, 0x0a	; 10
     1ce:	87 7e       	andi	r24, 0xE7	; 231
     1d0:	8a b9       	out	0x0a, r24	; 10
     1d2:	0e e4       	ldi	r16, 0x4E	; 78
     1d4:	28 e0       	ldi	r18, 0x08	; 8
     1d6:	40 e0       	ldi	r20, 0x00	; 0
     1d8:	51 ee       	ldi	r21, 0xE1	; 225
     1da:	60 e0       	ldi	r22, 0x00	; 0
     1dc:	70 e0       	ldi	r23, 0x00	; 0
     1de:	80 ec       	ldi	r24, 0xC0	; 192
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	0e 94 76 06 	call	0xcec	; 0xcec <InitUART>
     1e6:	41 e2       	ldi	r20, 0x21	; 33
     1e8:	64 e0       	ldi	r22, 0x04	; 4
     1ea:	81 eb       	ldi	r24, 0xB1	; 177
     1ec:	91 e0       	ldi	r25, 0x01	; 1
     1ee:	0e 94 15 04 	call	0x82a	; 0x82a <rfm69_init>
     1f2:	80 e0       	ldi	r24, 0x00	; 0
     1f4:	0e 94 56 03 	call	0x6ac	; 0x6ac <setHighPower>
     1f8:	8e e1       	ldi	r24, 0x1E	; 30
     1fa:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <setPowerLevel>
     1fe:	80 e0       	ldi	r24, 0x00	; 0
     200:	90 e0       	ldi	r25, 0x00	; 0
     202:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <encrypt>
     206:	78 94       	sei
     208:	1a 82       	std	Y+2, r1	; 0x02
     20a:	19 82       	std	Y+1, r1	; 0x01
     20c:	fe 01       	movw	r30, r28
     20e:	33 96       	adiw	r30, 0x03	; 3
     210:	82 e1       	ldi	r24, 0x12	; 18
     212:	df 01       	movw	r26, r30
     214:	1d 92       	st	X+, r1
     216:	8a 95       	dec	r24
     218:	e9 f7       	brne	.-6      	; 0x214 <main+0x80>
     21a:	00 e0       	ldi	r16, 0x00	; 0
     21c:	10 e0       	ldi	r17, 0x00	; 0
     21e:	6e 01       	movw	r12, r28
     220:	b5 e1       	ldi	r27, 0x15	; 21
     222:	cb 0e       	add	r12, r27
     224:	d1 1c       	adc	r13, r1
     226:	5e 01       	movw	r10, r28
     228:	e5 e2       	ldi	r30, 0x25	; 37
     22a:	ae 0e       	add	r10, r30
     22c:	b1 1c       	adc	r11, r1
     22e:	ce 01       	movw	r24, r28
     230:	01 96       	adiw	r24, 0x01	; 1
     232:	4c 01       	movw	r8, r24
     234:	0f 2e       	mov	r0, r31
     236:	f3 e0       	ldi	r31, 0x03	; 3
     238:	6f 2e       	mov	r6, r31
     23a:	f2 e0       	ldi	r31, 0x02	; 2
     23c:	7f 2e       	mov	r7, r31
     23e:	f0 2d       	mov	r31, r0
     240:	0f 2e       	mov	r0, r31
     242:	fa e7       	ldi	r31, 0x7A	; 122
     244:	4f 2e       	mov	r4, r31
     246:	51 2c       	mov	r5, r1
     248:	f0 2d       	mov	r31, r0
     24a:	0f 2e       	mov	r0, r31
     24c:	fa e0       	ldi	r31, 0x0A	; 10
     24e:	2f 2e       	mov	r2, r31
     250:	31 2c       	mov	r3, r1
     252:	f0 2d       	mov	r31, r0
     254:	0e 94 c9 03 	call	0x792	; 0x792 <receiveDone>
     258:	88 23       	and	r24, r24
     25a:	81 f0       	breq	.+32     	; 0x27c <main+0xe8>
     25c:	f6 01       	movw	r30, r12
     25e:	df 01       	movw	r26, r30
     260:	ac 19       	sub	r26, r12
     262:	bd 09       	sbc	r27, r13
     264:	ae 59       	subi	r26, 0x9E	; 158
     266:	be 4f       	sbci	r27, 0xFE	; 254
     268:	8c 91       	ld	r24, X
     26a:	81 93       	st	Z+, r24
     26c:	ea 15       	cp	r30, r10
     26e:	fb 05       	cpc	r31, r11
     270:	b1 f7       	brne	.-20     	; 0x25e <main+0xca>
     272:	b6 01       	movw	r22, r12
     274:	80 ec       	ldi	r24, 0xC0	; 192
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	0e 94 d0 06 	call	0xda0	; 0xda0 <SendString>
     27c:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <available>
     280:	88 23       	and	r24, r24
     282:	71 f0       	breq	.+28     	; 0x2a0 <main+0x10c>
     284:	74 01       	movw	r14, r8
     286:	e0 0e       	add	r14, r16
     288:	f1 1e       	adc	r15, r17
     28a:	0e 94 ad 00 	call	0x15a	; 0x15a <serialRead>
     28e:	d7 01       	movw	r26, r14
     290:	8d 93       	st	X+, r24
     292:	7d 01       	movw	r14, r26
     294:	0f 5f       	subi	r16, 0xFF	; 255
     296:	1f 4f       	sbci	r17, 0xFF	; 255
     298:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <available>
     29c:	81 11       	cpse	r24, r1
     29e:	f5 cf       	rjmp	.-22     	; 0x28a <main+0xf6>
     2a0:	f4 01       	movw	r30, r8
     2a2:	e0 0f       	add	r30, r16
     2a4:	f1 1f       	adc	r31, r17
     2a6:	10 82       	st	Z, r1
     2a8:	c8 01       	movw	r24, r16
     2aa:	01 97       	sbiw	r24, 0x01	; 1
     2ac:	43 97       	sbiw	r24, 0x13	; 19
     2ae:	08 f0       	brcs	.+2      	; 0x2b2 <main+0x11e>
     2b0:	a2 c0       	rjmp	.+324    	; 0x3f6 <main+0x262>
     2b2:	fe 01       	movw	r30, r28
     2b4:	e0 0f       	add	r30, r16
     2b6:	f1 1f       	adc	r31, r17
     2b8:	80 81       	ld	r24, Z
     2ba:	81 32       	cpi	r24, 0x21	; 33
     2bc:	59 f6       	brne	.-106    	; 0x254 <main+0xc0>
     2be:	6b e3       	ldi	r22, 0x3B	; 59
     2c0:	c4 01       	movw	r24, r8
     2c2:	0e 94 95 00 	call	0x12a	; 0x12a <countChars>
     2c6:	02 97       	sbiw	r24, 0x02	; 2
     2c8:	39 f0       	breq	.+14     	; 0x2d8 <main+0x144>
     2ca:	63 e0       	ldi	r22, 0x03	; 3
     2cc:	71 e0       	ldi	r23, 0x01	; 1
     2ce:	80 ec       	ldi	r24, 0xC0	; 192
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	0e 94 d0 06 	call	0xda0	; 0xda0 <SendString>
     2d6:	80 c0       	rjmp	.+256    	; 0x3d8 <main+0x244>
     2d8:	bf e7       	ldi	r27, 0x7F	; 127
     2da:	e8 e3       	ldi	r30, 0x38	; 56
     2dc:	f1 e0       	ldi	r31, 0x01	; 1
     2de:	b1 50       	subi	r27, 0x01	; 1
     2e0:	e0 40       	sbci	r30, 0x00	; 0
     2e2:	f0 40       	sbci	r31, 0x00	; 0
     2e4:	e1 f7       	brne	.-8      	; 0x2de <main+0x14a>
     2e6:	00 c0       	rjmp	.+0      	; 0x2e8 <main+0x154>
     2e8:	00 00       	nop
     2ea:	8b e3       	ldi	r24, 0x3B	; 59
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	9f a7       	std	Y+47, r25	; 0x2f
     2f0:	8e a7       	std	Y+46, r24	; 0x2e
     2f2:	be 01       	movw	r22, r28
     2f4:	62 5d       	subi	r22, 0xD2	; 210
     2f6:	7f 4f       	sbci	r23, 0xFF	; 255
     2f8:	c4 01       	movw	r24, r8
     2fa:	0e 94 56 08 	call	0x10ac	; 0x10ac <strtok>
     2fe:	00 97       	sbiw	r24, 0x00	; 0
     300:	91 f0       	breq	.+36     	; 0x326 <main+0x192>
     302:	8e 01       	movw	r16, r28
     304:	0b 5e       	subi	r16, 0xEB	; 235
     306:	1f 4f       	sbci	r17, 0xFF	; 255
     308:	bc 01       	movw	r22, r24
     30a:	c8 01       	movw	r24, r16
     30c:	0e 94 66 08 	call	0x10cc	; 0x10cc <strcpy>
     310:	be 01       	movw	r22, r28
     312:	62 5d       	subi	r22, 0xD2	; 210
     314:	7f 4f       	sbci	r23, 0xFF	; 255
     316:	80 e0       	ldi	r24, 0x00	; 0
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	0e 94 56 08 	call	0x10ac	; 0x10ac <strtok>
     31e:	0d 5f       	subi	r16, 0xFD	; 253
     320:	1f 4f       	sbci	r17, 0xFF	; 255
     322:	00 97       	sbiw	r24, 0x00	; 0
     324:	89 f7       	brne	.-30     	; 0x308 <main+0x174>
     326:	c6 01       	movw	r24, r12
     328:	0e 94 38 08 	call	0x1070	; 0x1070 <atoi>
     32c:	84 30       	cpi	r24, 0x04	; 4
     32e:	91 05       	cpc	r25, r1
     330:	09 f0       	breq	.+2      	; 0x334 <main+0x1a0>
     332:	4b c0       	rjmp	.+150    	; 0x3ca <main+0x236>
     334:	d2 01       	movw	r26, r4
     336:	8c 91       	ld	r24, X
     338:	80 64       	ori	r24, 0x40	; 64
     33a:	8c 93       	st	X, r24
     33c:	f2 01       	movw	r30, r4
     33e:	80 81       	ld	r24, Z
     340:	86 fd       	sbrc	r24, 6
     342:	fc cf       	rjmp	.-8      	; 0x33c <main+0x1a8>
     344:	a8 e7       	ldi	r26, 0x78	; 120
     346:	b0 e0       	ldi	r27, 0x00	; 0
     348:	6d 91       	ld	r22, X+
     34a:	7c 91       	ld	r23, X
     34c:	80 e0       	ldi	r24, 0x00	; 0
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	0e 94 1b 07 	call	0xe36	; 0xe36 <__floatunsisf>
     354:	23 e3       	ldi	r18, 0x33	; 51
     356:	33 e3       	ldi	r19, 0x33	; 51
     358:	43 e5       	ldi	r20, 0x53	; 83
     35a:	50 e4       	ldi	r21, 0x40	; 64
     35c:	0e 94 a9 07 	call	0xf52	; 0xf52 <__mulsf3>
     360:	20 e0       	ldi	r18, 0x00	; 0
     362:	30 e0       	ldi	r19, 0x00	; 0
     364:	40 e8       	ldi	r20, 0x80	; 128
     366:	5a e3       	ldi	r21, 0x3A	; 58
     368:	0e 94 a9 07 	call	0xf52	; 0xf52 <__mulsf3>
     36c:	20 e0       	ldi	r18, 0x00	; 0
     36e:	30 e0       	ldi	r19, 0x00	; 0
     370:	4a e7       	ldi	r20, 0x7A	; 122
     372:	54 e4       	ldi	r21, 0x44	; 68
     374:	0e 94 a9 07 	call	0xf52	; 0xf52 <__mulsf3>
     378:	0e 94 e5 06 	call	0xdca	; 0xdca <__fixsfsi>
     37c:	7f 93       	push	r23
     37e:	6f 93       	push	r22
     380:	e2 e3       	ldi	r30, 0x32	; 50
     382:	f1 e0       	ldi	r31, 0x01	; 1
     384:	ff 93       	push	r31
     386:	ef 93       	push	r30
     388:	bf 92       	push	r11
     38a:	af 92       	push	r10
     38c:	0e 94 9c 08 	call	0x1138	; 0x1138 <sprintf>
     390:	3b a6       	std	Y+43, r3	; 0x2b
     392:	2a a6       	std	Y+42, r2	; 0x2a
     394:	be 01       	movw	r22, r28
     396:	66 5d       	subi	r22, 0xD6	; 214
     398:	7f 4f       	sbci	r23, 0xFF	; 255
     39a:	8f e9       	ldi	r24, 0x9F	; 159
     39c:	91 e0       	ldi	r25, 0x01	; 1
     39e:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <strcat>
     3a2:	6f e9       	ldi	r22, 0x9F	; 159
     3a4:	71 e0       	ldi	r23, 0x01	; 1
     3a6:	80 ec       	ldi	r24, 0xC0	; 192
     3a8:	90 e0       	ldi	r25, 0x00	; 0
     3aa:	0e 94 d0 06 	call	0xda0	; 0xda0 <SendString>
     3ae:	84 e6       	ldi	r24, 0x64	; 100
     3b0:	ef e9       	ldi	r30, 0x9F	; 159
     3b2:	f1 e0       	ldi	r31, 0x01	; 1
     3b4:	df 01       	movw	r26, r30
     3b6:	1d 92       	st	X+, r1
     3b8:	8a 95       	dec	r24
     3ba:	e9 f7       	brne	.-6      	; 0x3b6 <main+0x222>
     3bc:	0f 90       	pop	r0
     3be:	0f 90       	pop	r0
     3c0:	0f 90       	pop	r0
     3c2:	0f 90       	pop	r0
     3c4:	0f 90       	pop	r0
     3c6:	0f 90       	pop	r0
     3c8:	07 c0       	rjmp	.+14     	; 0x3d8 <main+0x244>
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	43 e0       	ldi	r20, 0x03	; 3
     3ce:	be 01       	movw	r22, r28
     3d0:	68 5e       	subi	r22, 0xE8	; 232
     3d2:	7f 4f       	sbci	r23, 0xFF	; 255
     3d4:	0e 94 77 05 	call	0xaee	; 0xaee <send>
     3d8:	84 e1       	ldi	r24, 0x14	; 20
     3da:	f4 01       	movw	r30, r8
     3dc:	11 92       	st	Z+, r1
     3de:	8a 95       	dec	r24
     3e0:	e9 f7       	brne	.-6      	; 0x3dc <main+0x248>
     3e2:	80 e8       	ldi	r24, 0x80	; 128
     3e4:	d3 01       	movw	r26, r6
     3e6:	1d 92       	st	X+, r1
     3e8:	8a 95       	dec	r24
     3ea:	e9 f7       	brne	.-6      	; 0x3e6 <main+0x252>
     3ec:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <available>
     3f0:	00 e0       	ldi	r16, 0x00	; 0
     3f2:	10 e0       	ldi	r17, 0x00	; 0
     3f4:	2f cf       	rjmp	.-418    	; 0x254 <main+0xc0>
     3f6:	05 31       	cpi	r16, 0x15	; 21
     3f8:	11 05       	cpc	r17, r1
     3fa:	0c f4       	brge	.+2      	; 0x3fe <main+0x26a>
     3fc:	2b cf       	rjmp	.-426    	; 0x254 <main+0xc0>
     3fe:	66 e3       	ldi	r22, 0x36	; 54
     400:	71 e0       	ldi	r23, 0x01	; 1
     402:	80 ec       	ldi	r24, 0xC0	; 192
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	0e 94 d0 06 	call	0xda0	; 0xda0 <SendString>
     40a:	80 e8       	ldi	r24, 0x80	; 128
     40c:	f3 01       	movw	r30, r6
     40e:	11 92       	st	Z+, r1
     410:	8a 95       	dec	r24
     412:	e9 f7       	brne	.-6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     414:	84 e1       	ldi	r24, 0x14	; 20
     416:	d4 01       	movw	r26, r8
     418:	1d 92       	st	X+, r1
     41a:	8a 95       	dec	r24
     41c:	e9 f7       	brne	.-6      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     41e:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <available>
     422:	00 e0       	ldi	r16, 0x00	; 0
     424:	10 e0       	ldi	r17, 0x00	; 0
     426:	16 cf       	rjmp	.-468    	; 0x254 <main+0xc0>

00000428 <__vector_18>:



ISR(USART_RX_vect)
{
     428:	1f 92       	push	r1
     42a:	0f 92       	push	r0
     42c:	0f b6       	in	r0, 0x3f	; 63
     42e:	0f 92       	push	r0
     430:	11 24       	eor	r1, r1
     432:	8f 93       	push	r24
     434:	9f 93       	push	r25
     436:	ef 93       	push	r30
     438:	ff 93       	push	r31
	rx_buffer[rx_read_pos]=UDR0;
     43a:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <rx_read_pos>
     43e:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     442:	e8 2f       	mov	r30, r24
     444:	f0 e0       	ldi	r31, 0x00	; 0
     446:	ed 5f       	subi	r30, 0xFD	; 253
     448:	fd 4f       	sbci	r31, 0xFD	; 253
     44a:	90 83       	st	Z, r25
	rx_read_pos++;
     44c:	8f 5f       	subi	r24, 0xFF	; 255
	
	if(rx_read_pos>=rx_buffer_size)
     44e:	1a f0       	brmi	.+6      	; 0x456 <__vector_18+0x2e>


ISR(USART_RX_vect)
{
	rx_buffer[rx_read_pos]=UDR0;
	rx_read_pos++;
     450:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <rx_read_pos>
     454:	02 c0       	rjmp	.+4      	; 0x45a <__vector_18+0x32>
	
	if(rx_read_pos>=rx_buffer_size)
	{
		rx_read_pos=0;
     456:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <rx_read_pos>
	}
	
	available++;
     45a:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <available>
     45e:	8f 5f       	subi	r24, 0xFF	; 255
     460:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <available>
}
     464:	ff 91       	pop	r31
     466:	ef 91       	pop	r30
     468:	9f 91       	pop	r25
     46a:	8f 91       	pop	r24
     46c:	0f 90       	pop	r0
     46e:	0f be       	out	0x3f, r0	; 63
     470:	0f 90       	pop	r0
     472:	1f 90       	pop	r1
     474:	18 95       	reti

00000476 <__vector_5>:

int i1 = 0;
int i2 = 0;
ISR(PCINT2_vect){
     476:	1f 92       	push	r1
     478:	0f 92       	push	r0
     47a:	0f b6       	in	r0, 0x3f	; 63
     47c:	0f 92       	push	r0
     47e:	11 24       	eor	r1, r1
     480:	2f 93       	push	r18
     482:	3f 93       	push	r19
     484:	4f 93       	push	r20
     486:	5f 93       	push	r21
     488:	6f 93       	push	r22
     48a:	7f 93       	push	r23
     48c:	8f 93       	push	r24
     48e:	9f 93       	push	r25
     490:	af 93       	push	r26
     492:	bf 93       	push	r27
     494:	ef 93       	push	r30
     496:	ff 93       	push	r31
     498:	cf 93       	push	r28
     49a:	df 93       	push	r29
     49c:	cd b7       	in	r28, 0x3d	; 61
     49e:	de b7       	in	r29, 0x3e	; 62
     4a0:	25 97       	sbiw	r28, 0x05	; 5
     4a2:	de bf       	out	0x3e, r29	; 62
     4a4:	cd bf       	out	0x3d, r28	; 61
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4a6:	8f e9       	ldi	r24, 0x9F	; 159
     4a8:	9f e0       	ldi	r25, 0x0F	; 15
     4aa:	01 97       	sbiw	r24, 0x01	; 1
     4ac:	f1 f7       	brne	.-4      	; 0x4aa <__vector_5+0x34>
     4ae:	00 c0       	rjmp	.+0      	; 0x4b0 <__vector_5+0x3a>
     4b0:	00 00       	nop
	_delay_ms(2);
	if((PIND  & 0b00001000)){
     4b2:	4b 9b       	sbis	0x09, 3	; 9
     4b4:	11 c0       	rjmp	.+34     	; 0x4d8 <__vector_5+0x62>
		//SendString(myUART, "3 pressed ");
		//SendInteger(myUART, i1++);
		//SendString(myUART, "\n");
		char buf[5];
		sprintf(buf,"$3;-");
     4b6:	85 e0       	ldi	r24, 0x05	; 5
     4b8:	ee e4       	ldi	r30, 0x4E	; 78
     4ba:	f1 e0       	ldi	r31, 0x01	; 1
     4bc:	de 01       	movw	r26, r28
     4be:	11 96       	adiw	r26, 0x01	; 1
     4c0:	01 90       	ld	r0, Z+
     4c2:	0d 92       	st	X+, r0
     4c4:	8a 95       	dec	r24
     4c6:	e1 f7       	brne	.-8      	; 0x4c0 <__vector_5+0x4a>
		strcat(buttonBuffer,buf);}
     4c8:	be 01       	movw	r22, r28
     4ca:	6f 5f       	subi	r22, 0xFF	; 255
     4cc:	7f 4f       	sbci	r23, 0xFF	; 255
     4ce:	8f e9       	ldi	r24, 0x9F	; 159
     4d0:	91 e0       	ldi	r25, 0x01	; 1
     4d2:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <strcat>
     4d6:	12 c0       	rjmp	.+36     	; 0x4fc <__vector_5+0x86>
		
	else if((PIND  & 0b00010000)){
     4d8:	4c 9b       	sbis	0x09, 4	; 9
     4da:	10 c0       	rjmp	.+32     	; 0x4fc <__vector_5+0x86>
		//SendString(myUART, "4 pressed ");
		//SendInteger(myUART, i2++);
		//SendString(myUART, "\n");
		char buf[5];
		sprintf(buf,"$3;+");
     4dc:	85 e0       	ldi	r24, 0x05	; 5
     4de:	e3 e5       	ldi	r30, 0x53	; 83
     4e0:	f1 e0       	ldi	r31, 0x01	; 1
     4e2:	de 01       	movw	r26, r28
     4e4:	11 96       	adiw	r26, 0x01	; 1
     4e6:	01 90       	ld	r0, Z+
     4e8:	0d 92       	st	X+, r0
     4ea:	8a 95       	dec	r24
     4ec:	e1 f7       	brne	.-8      	; 0x4e6 <__vector_5+0x70>
		strcat(buttonBuffer,buf);
     4ee:	be 01       	movw	r22, r28
     4f0:	6f 5f       	subi	r22, 0xFF	; 255
     4f2:	7f 4f       	sbci	r23, 0xFF	; 255
     4f4:	8f e9       	ldi	r24, 0x9F	; 159
     4f6:	91 e0       	ldi	r25, 0x01	; 1
     4f8:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <strcat>
		}
		//SendString(myUART, "bugg pressed\n");
	PCIFR |= 1<<PCIF2;
     4fc:	da 9a       	sbi	0x1b, 2	; 27
     4fe:	0f 90       	pop	r0
     500:	0f 90       	pop	r0
     502:	0f 90       	pop	r0
     504:	0f 90       	pop	r0
     506:	0f 90       	pop	r0
     508:	df 91       	pop	r29
     50a:	cf 91       	pop	r28
     50c:	ff 91       	pop	r31
     50e:	ef 91       	pop	r30
     510:	bf 91       	pop	r27
     512:	af 91       	pop	r26
     514:	9f 91       	pop	r25
     516:	8f 91       	pop	r24
     518:	7f 91       	pop	r23
     51a:	6f 91       	pop	r22
     51c:	5f 91       	pop	r21
     51e:	4f 91       	pop	r20
     520:	3f 91       	pop	r19
     522:	2f 91       	pop	r18
     524:	0f 90       	pop	r0
     526:	0f be       	out	0x3f, r0	; 63
     528:	0f 90       	pop	r0
     52a:	1f 90       	pop	r1
     52c:	18 95       	reti

0000052e <maybeInterrupts>:
    millis_current = millis();
    while (!canSend() && millis() - millis_current < RF69_CSMA_LIMIT_MS) receiveDone();
    SENDERID = sender;    // TWS: Restore SenderID after it gets wiped out by receiveDone() n.b. actually now there is no receiveDone() :D
    sendFrame(sender, buffer, bufferSize, 0, 1);
    RSSI = _RSSI; // restore payload RSSI
}
     52e:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <inISR>
     532:	81 11       	cpse	r24, r1
     534:	01 c0       	rjmp	.+2      	; 0x538 <maybeInterrupts+0xa>
     536:	78 94       	sei
     538:	08 95       	ret

0000053a <select>:
     53a:	2a 98       	cbi	0x05, 2	; 5
     53c:	f8 94       	cli
     53e:	08 95       	ret

00000540 <unselect>:
     540:	2a 9a       	sbi	0x05, 2	; 5
     542:	0e 94 97 02 	call	0x52e	; 0x52e <maybeInterrupts>
     546:	08 95       	ret

00000548 <readReg>:
     548:	cf 93       	push	r28
     54a:	c8 2f       	mov	r28, r24
     54c:	0e 94 9d 02 	call	0x53a	; 0x53a <select>
     550:	8c 2f       	mov	r24, r28
     552:	8f 77       	andi	r24, 0x7F	; 127
     554:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     55e:	c8 2f       	mov	r28, r24
     560:	0e 94 a0 02 	call	0x540	; 0x540 <unselect>
     564:	8c 2f       	mov	r24, r28
     566:	cf 91       	pop	r28
     568:	08 95       	ret

0000056a <writeReg>:
     56a:	cf 93       	push	r28
     56c:	df 93       	push	r29
     56e:	d8 2f       	mov	r29, r24
     570:	c6 2f       	mov	r28, r22
     572:	0e 94 9d 02 	call	0x53a	; 0x53a <select>
     576:	8d 2f       	mov	r24, r29
     578:	80 68       	ori	r24, 0x80	; 128
     57a:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     57e:	8c 2f       	mov	r24, r28
     580:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     584:	0e 94 a0 02 	call	0x540	; 0x540 <unselect>
     588:	df 91       	pop	r29
     58a:	cf 91       	pop	r28
     58c:	08 95       	ret

0000058e <setAddress>:
     58e:	68 2f       	mov	r22, r24
     590:	89 e3       	ldi	r24, 0x39	; 57
     592:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     596:	08 95       	ret

00000598 <setNetwork>:
     598:	68 2f       	mov	r22, r24
     59a:	80 e3       	ldi	r24, 0x30	; 48
     59c:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     5a0:	08 95       	ret

000005a2 <setPowerLevel>:
     5a2:	cf 93       	push	r28
     5a4:	c8 2f       	mov	r28, r24
     5a6:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isRFM69HW>
     5aa:	81 30       	cpi	r24, 0x01	; 1
     5ac:	09 f4       	brne	.+2      	; 0x5b0 <setPowerLevel+0xe>
     5ae:	c6 95       	lsr	r28
     5b0:	81 e1       	ldi	r24, 0x11	; 17
     5b2:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     5b6:	80 7e       	andi	r24, 0xE0	; 224
     5b8:	68 2f       	mov	r22, r24
     5ba:	6c 2b       	or	r22, r28
     5bc:	81 e1       	ldi	r24, 0x11	; 17
     5be:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     5c2:	cf 91       	pop	r28
     5c4:	08 95       	ret

000005c6 <setHighPowerRegs>:
     5c6:	81 30       	cpi	r24, 0x01	; 1
     5c8:	49 f4       	brne	.+18     	; 0x5dc <setHighPowerRegs+0x16>
     5ca:	6d e5       	ldi	r22, 0x5D	; 93
     5cc:	8a e5       	ldi	r24, 0x5A	; 90
     5ce:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     5d2:	6c e7       	ldi	r22, 0x7C	; 124
     5d4:	8c e5       	ldi	r24, 0x5C	; 92
     5d6:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     5da:	08 95       	ret
     5dc:	65 e5       	ldi	r22, 0x55	; 85
     5de:	8a e5       	ldi	r24, 0x5A	; 90
     5e0:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     5e4:	60 e7       	ldi	r22, 0x70	; 112
     5e6:	8c e5       	ldi	r24, 0x5C	; 92
     5e8:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     5ec:	08 95       	ret

000005ee <setMode>:
     5ee:	cf 93       	push	r28
     5f0:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <mode>
     5f4:	98 17       	cp	r25, r24
     5f6:	09 f4       	brne	.+2      	; 0x5fa <setMode+0xc>
     5f8:	57 c0       	rjmp	.+174    	; 0x6a8 <setMode+0xba>
     5fa:	c8 2f       	mov	r28, r24
     5fc:	82 30       	cpi	r24, 0x02	; 2
     5fe:	69 f1       	breq	.+90     	; 0x65a <setMode+0x6c>
     600:	28 f4       	brcc	.+10     	; 0x60c <setMode+0x1e>
     602:	88 23       	and	r24, r24
     604:	f1 f1       	breq	.+124    	; 0x682 <setMode+0x94>
     606:	81 30       	cpi	r24, 0x01	; 1
     608:	91 f1       	breq	.+100    	; 0x66e <setMode+0x80>
     60a:	4e c0       	rjmp	.+156    	; 0x6a8 <setMode+0xba>
     60c:	83 30       	cpi	r24, 0x03	; 3
     60e:	a1 f0       	breq	.+40     	; 0x638 <setMode+0x4a>
     610:	84 30       	cpi	r24, 0x04	; 4
     612:	09 f0       	breq	.+2      	; 0x616 <setMode+0x28>
     614:	49 c0       	rjmp	.+146    	; 0x6a8 <setMode+0xba>
     616:	81 e0       	ldi	r24, 0x01	; 1
     618:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     61c:	83 7e       	andi	r24, 0xE3	; 227
     61e:	68 2f       	mov	r22, r24
     620:	6c 60       	ori	r22, 0x0C	; 12
     622:	81 e0       	ldi	r24, 0x01	; 1
     624:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     628:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isRFM69HW>
     62c:	88 23       	and	r24, r24
     62e:	89 f1       	breq	.+98     	; 0x692 <setMode+0xa4>
     630:	81 e0       	ldi	r24, 0x01	; 1
     632:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <setHighPowerRegs>
     636:	2d c0       	rjmp	.+90     	; 0x692 <setMode+0xa4>
     638:	81 e0       	ldi	r24, 0x01	; 1
     63a:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     63e:	83 7e       	andi	r24, 0xE3	; 227
     640:	68 2f       	mov	r22, r24
     642:	60 61       	ori	r22, 0x10	; 16
     644:	81 e0       	ldi	r24, 0x01	; 1
     646:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     64a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isRFM69HW>
     64e:	88 23       	and	r24, r24
     650:	01 f1       	breq	.+64     	; 0x692 <setMode+0xa4>
     652:	80 e0       	ldi	r24, 0x00	; 0
     654:	0e 94 e3 02 	call	0x5c6	; 0x5c6 <setHighPowerRegs>
     658:	1c c0       	rjmp	.+56     	; 0x692 <setMode+0xa4>
     65a:	81 e0       	ldi	r24, 0x01	; 1
     65c:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     660:	83 7e       	andi	r24, 0xE3	; 227
     662:	68 2f       	mov	r22, r24
     664:	68 60       	ori	r22, 0x08	; 8
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     66c:	12 c0       	rjmp	.+36     	; 0x692 <setMode+0xa4>
     66e:	81 e0       	ldi	r24, 0x01	; 1
     670:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     674:	83 7e       	andi	r24, 0xE3	; 227
     676:	68 2f       	mov	r22, r24
     678:	64 60       	ori	r22, 0x04	; 4
     67a:	81 e0       	ldi	r24, 0x01	; 1
     67c:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     680:	08 c0       	rjmp	.+16     	; 0x692 <setMode+0xa4>
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     688:	68 2f       	mov	r22, r24
     68a:	63 7e       	andi	r22, 0xE3	; 227
     68c:	81 e0       	ldi	r24, 0x01	; 1
     68e:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     692:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <mode>
     696:	91 11       	cpse	r25, r1
     698:	05 c0       	rjmp	.+10     	; 0x6a4 <setMode+0xb6>
     69a:	87 e2       	ldi	r24, 0x27	; 39
     69c:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     6a0:	88 23       	and	r24, r24
     6a2:	bc f7       	brge	.-18     	; 0x692 <setMode+0xa4>
     6a4:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <mode>
     6a8:	cf 91       	pop	r28
     6aa:	08 95       	ret

000006ac <setHighPower>:
     6ac:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <isRFM69HW>
     6b0:	81 11       	cpse	r24, r1
     6b2:	02 c0       	rjmp	.+4      	; 0x6b8 <setHighPower+0xc>
     6b4:	6a e1       	ldi	r22, 0x1A	; 26
     6b6:	01 c0       	rjmp	.+2      	; 0x6ba <setHighPower+0xe>
     6b8:	6f e0       	ldi	r22, 0x0F	; 15
     6ba:	83 e1       	ldi	r24, 0x13	; 19
     6bc:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     6c0:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isRFM69HW>
     6c4:	81 30       	cpi	r24, 0x01	; 1
     6c6:	51 f4       	brne	.+20     	; 0x6dc <setHighPower+0x30>
     6c8:	81 e1       	ldi	r24, 0x11	; 17
     6ca:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     6ce:	8f 71       	andi	r24, 0x1F	; 31
     6d0:	68 2f       	mov	r22, r24
     6d2:	60 66       	ori	r22, 0x60	; 96
     6d4:	81 e1       	ldi	r24, 0x11	; 17
     6d6:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     6da:	08 95       	ret
     6dc:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
     6e0:	60 68       	ori	r22, 0x80	; 128
     6e2:	81 e1       	ldi	r24, 0x11	; 17
     6e4:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     6e8:	08 95       	ret

000006ea <readRSSI>:
     6ea:	81 30       	cpi	r24, 0x01	; 1
     6ec:	49 f4       	brne	.+18     	; 0x700 <readRSSI+0x16>
     6ee:	61 e0       	ldi	r22, 0x01	; 1
     6f0:	83 e2       	ldi	r24, 0x23	; 35
     6f2:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     6f6:	83 e2       	ldi	r24, 0x23	; 35
     6f8:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     6fc:	81 ff       	sbrs	r24, 1
     6fe:	fb cf       	rjmp	.-10     	; 0x6f6 <readRSSI+0xc>
     700:	84 e2       	ldi	r24, 0x24	; 36
     702:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	91 95       	neg	r25
     70a:	81 95       	neg	r24
     70c:	91 09       	sbc	r25, r1
     70e:	95 95       	asr	r25
     710:	87 95       	ror	r24
     712:	08 95       	ret

00000714 <canSend>:
     714:	cf 93       	push	r28
     716:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <mode>
     71a:	83 30       	cpi	r24, 0x03	; 3
     71c:	79 f4       	brne	.+30     	; 0x73c <canSend+0x28>
     71e:	c0 91 8d 02 	lds	r28, 0x028D	; 0x80028d <PAYLOADLEN>
     722:	c1 11       	cpse	r28, r1
     724:	0d c0       	rjmp	.+26     	; 0x740 <canSend+0x2c>
     726:	80 e0       	ldi	r24, 0x00	; 0
     728:	0e 94 75 03 	call	0x6ea	; 0x6ea <readRSSI>
     72c:	86 3a       	cpi	r24, 0xA6	; 166
     72e:	9f 4f       	sbci	r25, 0xFF	; 255
     730:	44 f4       	brge	.+16     	; 0x742 <canSend+0x2e>
     732:	81 e0       	ldi	r24, 0x01	; 1
     734:	0e 94 f7 02 	call	0x5ee	; 0x5ee <setMode>
     738:	c1 e0       	ldi	r28, 0x01	; 1
     73a:	03 c0       	rjmp	.+6      	; 0x742 <canSend+0x2e>
     73c:	c0 e0       	ldi	r28, 0x00	; 0
     73e:	01 c0       	rjmp	.+2      	; 0x742 <canSend+0x2e>
     740:	c0 e0       	ldi	r28, 0x00	; 0
     742:	8c 2f       	mov	r24, r28
     744:	cf 91       	pop	r28
     746:	08 95       	ret

00000748 <receiveBegin>:
     748:	10 92 8c 02 	sts	0x028C, r1	; 0x80028c <DATALEN>
     74c:	10 92 8b 02 	sts	0x028B, r1	; 0x80028b <SENDERID>
     750:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <TARGETID>
     754:	10 92 8d 02 	sts	0x028D, r1	; 0x80028d <PAYLOADLEN>
     758:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <ACK_REQUESTED>
     75c:	10 92 88 02 	sts	0x0288, r1	; 0x800288 <ACK_RECEIVED>
     760:	10 92 8a 02 	sts	0x028A, r1	; 0x80028a <RSSI+0x1>
     764:	10 92 89 02 	sts	0x0289, r1	; 0x800289 <RSSI>
     768:	88 e2       	ldi	r24, 0x28	; 40
     76a:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     76e:	82 ff       	sbrs	r24, 2
     770:	08 c0       	rjmp	.+16     	; 0x782 <receiveBegin+0x3a>
     772:	8d e3       	ldi	r24, 0x3D	; 61
     774:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     778:	68 2f       	mov	r22, r24
     77a:	64 60       	ori	r22, 0x04	; 4
     77c:	8d e3       	ldi	r24, 0x3D	; 61
     77e:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     782:	60 e4       	ldi	r22, 0x40	; 64
     784:	85 e2       	ldi	r24, 0x25	; 37
     786:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     78a:	83 e0       	ldi	r24, 0x03	; 3
     78c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <setMode>
     790:	08 95       	ret

00000792 <receiveDone>:
     792:	f8 94       	cli
     794:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <mode>
     798:	83 30       	cpi	r24, 0x03	; 3
     79a:	49 f4       	brne	.+18     	; 0x7ae <receiveDone+0x1c>
     79c:	80 91 8d 02 	lds	r24, 0x028D	; 0x80028d <PAYLOADLEN>
     7a0:	88 23       	and	r24, r24
     7a2:	29 f0       	breq	.+10     	; 0x7ae <receiveDone+0x1c>
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	0e 94 f7 02 	call	0x5ee	; 0x5ee <setMode>
     7aa:	81 e0       	ldi	r24, 0x01	; 1
     7ac:	08 95       	ret
     7ae:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <mode>
     7b2:	83 30       	cpi	r24, 0x03	; 3
     7b4:	19 f4       	brne	.+6      	; 0x7bc <receiveDone+0x2a>
     7b6:	78 94       	sei
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	08 95       	ret
     7bc:	0e 94 a4 03 	call	0x748	; 0x748 <receiveBegin>
     7c0:	78 94       	sei
     7c2:	80 e0       	ldi	r24, 0x00	; 0
     7c4:	08 95       	ret

000007c6 <encrypt>:
     7c6:	ef 92       	push	r14
     7c8:	ff 92       	push	r15
     7ca:	0f 93       	push	r16
     7cc:	1f 93       	push	r17
     7ce:	cf 93       	push	r28
     7d0:	df 93       	push	r29
     7d2:	7c 01       	movw	r14, r24
     7d4:	81 e0       	ldi	r24, 0x01	; 1
     7d6:	0e 94 f7 02 	call	0x5ee	; 0x5ee <setMode>
     7da:	e1 14       	cp	r14, r1
     7dc:	f1 04       	cpc	r15, r1
     7de:	89 f0       	breq	.+34     	; 0x802 <encrypt+0x3c>
     7e0:	0e 94 9d 02 	call	0x53a	; 0x53a <select>
     7e4:	8e eb       	ldi	r24, 0xBE	; 190
     7e6:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     7ea:	e7 01       	movw	r28, r14
     7ec:	87 01       	movw	r16, r14
     7ee:	00 5f       	subi	r16, 0xF0	; 240
     7f0:	1f 4f       	sbci	r17, 0xFF	; 255
     7f2:	89 91       	ld	r24, Y+
     7f4:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     7f8:	c0 17       	cp	r28, r16
     7fa:	d1 07       	cpc	r29, r17
     7fc:	d1 f7       	brne	.-12     	; 0x7f2 <encrypt+0x2c>
     7fe:	0e 94 a0 02 	call	0x540	; 0x540 <unselect>
     802:	8d e3       	ldi	r24, 0x3D	; 61
     804:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     808:	8e 7f       	andi	r24, 0xFE	; 254
     80a:	91 e0       	ldi	r25, 0x01	; 1
     80c:	ef 28       	or	r14, r15
     80e:	09 f4       	brne	.+2      	; 0x812 <encrypt+0x4c>
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	68 2f       	mov	r22, r24
     814:	69 2b       	or	r22, r25
     816:	8d e3       	ldi	r24, 0x3D	; 61
     818:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     81c:	df 91       	pop	r29
     81e:	cf 91       	pop	r28
     820:	1f 91       	pop	r17
     822:	0f 91       	pop	r16
     824:	ff 90       	pop	r15
     826:	ef 90       	pop	r14
     828:	08 95       	ret

0000082a <rfm69_init>:
     82a:	ff 92       	push	r15
     82c:	0f 93       	push	r16
     82e:	1f 93       	push	r17
     830:	cf 93       	push	r28
     832:	df 93       	push	r29
     834:	cd b7       	in	r28, 0x3d	; 61
     836:	de b7       	in	r29, 0x3e	; 62
     838:	ae 97       	sbiw	r28, 0x2e	; 46
     83a:	0f b6       	in	r0, 0x3f	; 63
     83c:	f8 94       	cli
     83e:	de bf       	out	0x3e, r29	; 62
     840:	0f be       	out	0x3f, r0	; 63
     842:	cd bf       	out	0x3d, r28	; 61
     844:	06 2f       	mov	r16, r22
     846:	f4 2e       	mov	r15, r20
     848:	21 e0       	ldi	r18, 0x01	; 1
     84a:	29 83       	std	Y+1, r18	; 0x01
     84c:	34 e0       	ldi	r19, 0x04	; 4
     84e:	3a 83       	std	Y+2, r19	; 0x02
     850:	22 e0       	ldi	r18, 0x02	; 2
     852:	2b 83       	std	Y+3, r18	; 0x03
     854:	1c 82       	std	Y+4, r1	; 0x04
     856:	23 e0       	ldi	r18, 0x03	; 3
     858:	2d 83       	std	Y+5, r18	; 0x05
     85a:	4d e0       	ldi	r20, 0x0D	; 13
     85c:	4e 83       	std	Y+6, r20	; 0x06
     85e:	3f 83       	std	Y+7, r19	; 0x07
     860:	35 e0       	ldi	r19, 0x05	; 5
     862:	38 87       	std	Y+8, r19	; 0x08
     864:	39 87       	std	Y+9, r19	; 0x09
     866:	2a 87       	std	Y+10, r18	; 0x0a
     868:	26 e0       	ldi	r18, 0x06	; 6
     86a:	2b 87       	std	Y+11, r18	; 0x0b
     86c:	23 e3       	ldi	r18, 0x33	; 51
     86e:	2c 87       	std	Y+12, r18	; 0x0c
     870:	27 e0       	ldi	r18, 0x07	; 7
     872:	2d 87       	std	Y+13, r18	; 0x0d
     874:	8b 33       	cpi	r24, 0x3B	; 59
     876:	21 e0       	ldi	r18, 0x01	; 1
     878:	92 07       	cpc	r25, r18
     87a:	09 f4       	brne	.+2      	; 0x87e <rfm69_init+0x54>
     87c:	a5 c0       	rjmp	.+330    	; 0x9c8 <__stack+0xc9>
     87e:	81 3b       	cpi	r24, 0xB1	; 177
     880:	21 e0       	ldi	r18, 0x01	; 1
     882:	92 07       	cpc	r25, r18
     884:	09 f4       	brne	.+2      	; 0x888 <rfm69_init+0x5e>
     886:	9a c0       	rjmp	.+308    	; 0x9bc <__stack+0xbd>
     888:	84 36       	cpi	r24, 0x64	; 100
     88a:	93 40       	sbci	r25, 0x03	; 3
     88c:	09 f0       	breq	.+2      	; 0x890 <rfm69_init+0x66>
     88e:	a2 c0       	rjmp	.+324    	; 0x9d4 <__stack+0xd5>
     890:	a7 c0       	rjmp	.+334    	; 0x9e0 <__stack+0xe1>
     892:	88 8b       	std	Y+16, r24	; 0x10
     894:	89 e0       	ldi	r24, 0x09	; 9
     896:	89 8b       	std	Y+17, r24	; 0x11
     898:	1a 8a       	std	Y+18, r1	; 0x12
     89a:	89 e1       	ldi	r24, 0x19	; 25
     89c:	8b 8b       	std	Y+19, r24	; 0x13
     89e:	92 e4       	ldi	r25, 0x42	; 66
     8a0:	9c 8b       	std	Y+20, r25	; 0x14
     8a2:	85 e2       	ldi	r24, 0x25	; 37
     8a4:	8d 8b       	std	Y+21, r24	; 0x15
     8a6:	80 e4       	ldi	r24, 0x40	; 64
     8a8:	8e 8b       	std	Y+22, r24	; 0x16
     8aa:	86 e2       	ldi	r24, 0x26	; 38
     8ac:	8f 8b       	std	Y+23, r24	; 0x17
     8ae:	87 e0       	ldi	r24, 0x07	; 7
     8b0:	88 8f       	std	Y+24, r24	; 0x18
     8b2:	88 e2       	ldi	r24, 0x28	; 40
     8b4:	89 8f       	std	Y+25, r24	; 0x19
     8b6:	80 e1       	ldi	r24, 0x10	; 16
     8b8:	8a 8f       	std	Y+26, r24	; 0x1a
     8ba:	89 e2       	ldi	r24, 0x29	; 41
     8bc:	8b 8f       	std	Y+27, r24	; 0x1b
     8be:	8c ed       	ldi	r24, 0xDC	; 220
     8c0:	8c 8f       	std	Y+28, r24	; 0x1c
     8c2:	8e e2       	ldi	r24, 0x2E	; 46
     8c4:	8d 8f       	std	Y+29, r24	; 0x1d
     8c6:	88 e8       	ldi	r24, 0x88	; 136
     8c8:	8e 8f       	std	Y+30, r24	; 0x1e
     8ca:	8f e2       	ldi	r24, 0x2F	; 47
     8cc:	8f 8f       	std	Y+31, r24	; 0x1f
     8ce:	8d e2       	ldi	r24, 0x2D	; 45
     8d0:	88 a3       	std	Y+32, r24	; 0x20
     8d2:	80 e3       	ldi	r24, 0x30	; 48
     8d4:	89 a3       	std	Y+33, r24	; 0x21
     8d6:	fa a2       	std	Y+34, r15	; 0x22
     8d8:	27 e3       	ldi	r18, 0x37	; 55
     8da:	2b a3       	std	Y+35, r18	; 0x23
     8dc:	20 e9       	ldi	r18, 0x90	; 144
     8de:	2c a3       	std	Y+36, r18	; 0x24
     8e0:	28 e3       	ldi	r18, 0x38	; 56
     8e2:	2d a3       	std	Y+37, r18	; 0x25
     8e4:	9e a3       	std	Y+38, r25	; 0x26
     8e6:	9c e3       	ldi	r25, 0x3C	; 60
     8e8:	9f a3       	std	Y+39, r25	; 0x27
     8ea:	9f e8       	ldi	r25, 0x8F	; 143
     8ec:	98 a7       	std	Y+40, r25	; 0x28
     8ee:	9d e3       	ldi	r25, 0x3D	; 61
     8f0:	99 a7       	std	Y+41, r25	; 0x29
     8f2:	92 e1       	ldi	r25, 0x12	; 18
     8f4:	9a a7       	std	Y+42, r25	; 0x2a
     8f6:	9f e6       	ldi	r25, 0x6F	; 111
     8f8:	9b a7       	std	Y+43, r25	; 0x2b
     8fa:	8c a7       	std	Y+44, r24	; 0x2c
     8fc:	8f ef       	ldi	r24, 0xFF	; 255
     8fe:	8d a7       	std	Y+45, r24	; 0x2d
     900:	1e a6       	std	Y+46, r1	; 0x2e
     902:	0e 94 65 06 	call	0xcca	; 0xcca <spi_init>
     906:	22 9a       	sbi	0x04, 2	; 4
     908:	2a 9a       	sbi	0x05, 2	; 5
     90a:	52 98       	cbi	0x0a, 2	; 10
     90c:	5a 98       	cbi	0x0b, 2	; 11
     90e:	04 c0       	rjmp	.+8      	; 0x918 <__stack+0x19>
     910:	6a ea       	ldi	r22, 0xAA	; 170
     912:	8f e2       	ldi	r24, 0x2F	; 47
     914:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     918:	8f e2       	ldi	r24, 0x2F	; 47
     91a:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     91e:	8a 3a       	cpi	r24, 0xAA	; 170
     920:	b9 f7       	brne	.-18     	; 0x910 <__stack+0x11>
     922:	04 c0       	rjmp	.+8      	; 0x92c <__stack+0x2d>
     924:	65 e5       	ldi	r22, 0x55	; 85
     926:	8f e2       	ldi	r24, 0x2F	; 47
     928:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     92c:	8f e2       	ldi	r24, 0x2F	; 47
     92e:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     932:	85 35       	cpi	r24, 0x55	; 85
     934:	b9 f7       	brne	.-18     	; 0x924 <__stack+0x25>
     936:	89 81       	ldd	r24, Y+1	; 0x01
     938:	8f 3f       	cpi	r24, 0xFF	; 255
     93a:	e9 f0       	breq	.+58     	; 0x976 <__stack+0x77>
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	10 e0       	ldi	r17, 0x00	; 0
     942:	22 0f       	add	r18, r18
     944:	33 1f       	adc	r19, r19
     946:	e1 e0       	ldi	r30, 0x01	; 1
     948:	f0 e0       	ldi	r31, 0x00	; 0
     94a:	ec 0f       	add	r30, r28
     94c:	fd 1f       	adc	r31, r29
     94e:	e2 0f       	add	r30, r18
     950:	f3 1f       	adc	r31, r19
     952:	61 81       	ldd	r22, Z+1	; 0x01
     954:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     958:	1f 5f       	subi	r17, 0xFF	; 255
     95a:	21 2f       	mov	r18, r17
     95c:	30 e0       	ldi	r19, 0x00	; 0
     95e:	f9 01       	movw	r30, r18
     960:	ee 0f       	add	r30, r30
     962:	ff 1f       	adc	r31, r31
     964:	81 e0       	ldi	r24, 0x01	; 1
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	8c 0f       	add	r24, r28
     96a:	9d 1f       	adc	r25, r29
     96c:	e8 0f       	add	r30, r24
     96e:	f9 1f       	adc	r31, r25
     970:	80 81       	ld	r24, Z
     972:	8f 3f       	cpi	r24, 0xFF	; 255
     974:	31 f7       	brne	.-52     	; 0x942 <__stack+0x43>
     976:	80 e0       	ldi	r24, 0x00	; 0
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <encrypt>
     97e:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isRFM69HW>
     982:	0e 94 56 03 	call	0x6ac	; 0x6ac <setHighPower>
     986:	81 e0       	ldi	r24, 0x01	; 1
     988:	0e 94 f7 02 	call	0x5ee	; 0x5ee <setMode>
     98c:	87 e2       	ldi	r24, 0x27	; 39
     98e:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     992:	88 23       	and	r24, r24
     994:	dc f7       	brge	.-10     	; 0x98c <__stack+0x8d>
     996:	e9 e6       	ldi	r30, 0x69	; 105
     998:	f0 e0       	ldi	r31, 0x00	; 0
     99a:	80 81       	ld	r24, Z
     99c:	83 60       	ori	r24, 0x03	; 3
     99e:	80 83       	st	Z, r24
     9a0:	e8 9a       	sbi	0x1d, 0	; 29
     9a2:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <inISR>
     9a6:	0e 94 53 00 	call	0xa6	; 0xa6 <millis_init>
     9aa:	00 93 87 02 	sts	0x0287, r16	; 0x800287 <address>
     9ae:	80 2f       	mov	r24, r16
     9b0:	0e 94 c7 02 	call	0x58e	; 0x58e <setAddress>
     9b4:	8f 2d       	mov	r24, r15
     9b6:	0e 94 cc 02 	call	0x598	; 0x598 <setNetwork>
     9ba:	18 c0       	rjmp	.+48     	; 0x9ec <__stack+0xed>
     9bc:	8c e6       	ldi	r24, 0x6C	; 108
     9be:	8e 87       	std	Y+14, r24	; 0x0e
     9c0:	88 e0       	ldi	r24, 0x08	; 8
     9c2:	8f 87       	std	Y+15, r24	; 0x0f
     9c4:	80 e4       	ldi	r24, 0x40	; 64
     9c6:	65 cf       	rjmp	.-310    	; 0x892 <rfm69_init+0x68>
     9c8:	8e e4       	ldi	r24, 0x4E	; 78
     9ca:	8e 87       	std	Y+14, r24	; 0x0e
     9cc:	88 e0       	ldi	r24, 0x08	; 8
     9ce:	8f 87       	std	Y+15, r24	; 0x0f
     9d0:	80 ec       	ldi	r24, 0xC0	; 192
     9d2:	5f cf       	rjmp	.-322    	; 0x892 <rfm69_init+0x68>
     9d4:	84 ee       	ldi	r24, 0xE4	; 228
     9d6:	8e 87       	std	Y+14, r24	; 0x0e
     9d8:	88 e0       	ldi	r24, 0x08	; 8
     9da:	8f 87       	std	Y+15, r24	; 0x0f
     9dc:	80 ec       	ldi	r24, 0xC0	; 192
     9de:	59 cf       	rjmp	.-334    	; 0x892 <rfm69_init+0x68>
     9e0:	89 ed       	ldi	r24, 0xD9	; 217
     9e2:	8e 87       	std	Y+14, r24	; 0x0e
     9e4:	88 e0       	ldi	r24, 0x08	; 8
     9e6:	8f 87       	std	Y+15, r24	; 0x0f
     9e8:	80 e0       	ldi	r24, 0x00	; 0
     9ea:	53 cf       	rjmp	.-346    	; 0x892 <rfm69_init+0x68>
     9ec:	ae 96       	adiw	r28, 0x2e	; 46
     9ee:	0f b6       	in	r0, 0x3f	; 63
     9f0:	f8 94       	cli
     9f2:	de bf       	out	0x3e, r29	; 62
     9f4:	0f be       	out	0x3f, r0	; 63
     9f6:	cd bf       	out	0x3d, r28	; 61
     9f8:	df 91       	pop	r29
     9fa:	cf 91       	pop	r28
     9fc:	1f 91       	pop	r17
     9fe:	0f 91       	pop	r16
     a00:	ff 90       	pop	r15
     a02:	08 95       	ret

00000a04 <sendFrame>:
     a04:	ef 92       	push	r14
     a06:	ff 92       	push	r15
     a08:	0f 93       	push	r16
     a0a:	1f 93       	push	r17
     a0c:	cf 93       	push	r28
     a0e:	df 93       	push	r29
     a10:	c8 2f       	mov	r28, r24
     a12:	7b 01       	movw	r14, r22
     a14:	14 2f       	mov	r17, r20
     a16:	d2 2f       	mov	r29, r18
     a18:	81 e0       	ldi	r24, 0x01	; 1
     a1a:	0e 94 f7 02 	call	0x5ee	; 0x5ee <setMode>
     a1e:	87 e2       	ldi	r24, 0x27	; 39
     a20:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     a24:	88 23       	and	r24, r24
     a26:	dc f7       	brge	.-10     	; 0xa1e <sendFrame+0x1a>
     a28:	60 e0       	ldi	r22, 0x00	; 0
     a2a:	85 e2       	ldi	r24, 0x25	; 37
     a2c:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     a30:	1e 33       	cpi	r17, 0x3E	; 62
     a32:	08 f0       	brcs	.+2      	; 0xa36 <sendFrame+0x32>
     a34:	1d e3       	ldi	r17, 0x3D	; 61
     a36:	01 30       	cpi	r16, 0x01	; 1
     a38:	21 f0       	breq	.+8      	; 0xa42 <sendFrame+0x3e>
     a3a:	d1 30       	cpi	r29, 0x01	; 1
     a3c:	21 f4       	brne	.+8      	; 0xa46 <sendFrame+0x42>
     a3e:	d0 e4       	ldi	r29, 0x40	; 64
     a40:	03 c0       	rjmp	.+6      	; 0xa48 <sendFrame+0x44>
     a42:	d0 e8       	ldi	r29, 0x80	; 128
     a44:	01 c0       	rjmp	.+2      	; 0xa48 <sendFrame+0x44>
     a46:	d0 e0       	ldi	r29, 0x00	; 0
     a48:	0e 94 9d 02 	call	0x53a	; 0x53a <select>
     a4c:	80 e8       	ldi	r24, 0x80	; 128
     a4e:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     a52:	83 e0       	ldi	r24, 0x03	; 3
     a54:	81 0f       	add	r24, r17
     a56:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     a5a:	8c 2f       	mov	r24, r28
     a5c:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     a60:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <address>
     a64:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     a68:	8d 2f       	mov	r24, r29
     a6a:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     a6e:	11 23       	and	r17, r17
     a70:	71 f0       	breq	.+28     	; 0xa8e <sendFrame+0x8a>
     a72:	e7 01       	movw	r28, r14
     a74:	11 50       	subi	r17, 0x01	; 1
     a76:	01 2f       	mov	r16, r17
     a78:	10 e0       	ldi	r17, 0x00	; 0
     a7a:	0f 5f       	subi	r16, 0xFF	; 255
     a7c:	1f 4f       	sbci	r17, 0xFF	; 255
     a7e:	0e 0d       	add	r16, r14
     a80:	1f 1d       	adc	r17, r15
     a82:	89 91       	ld	r24, Y+
     a84:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     a88:	c0 17       	cp	r28, r16
     a8a:	d1 07       	cpc	r29, r17
     a8c:	d1 f7       	brne	.-12     	; 0xa82 <sendFrame+0x7e>
     a8e:	0e 94 a0 02 	call	0x540	; 0x540 <unselect>
     a92:	84 e0       	ldi	r24, 0x04	; 4
     a94:	0e 94 f7 02 	call	0x5ee	; 0x5ee <setMode>
     a98:	0e 94 65 00 	call	0xca	; 0xca <millis>
     a9c:	60 93 83 02 	sts	0x0283, r22	; 0x800283 <millis_current>
     aa0:	70 93 84 02 	sts	0x0284, r23	; 0x800284 <millis_current+0x1>
     aa4:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <millis_current+0x2>
     aa8:	90 93 86 02 	sts	0x0286, r25	; 0x800286 <millis_current+0x3>
     aac:	4a 99       	sbic	0x09, 2	; 9
     aae:	15 c0       	rjmp	.+42     	; 0xada <sendFrame+0xd6>
     ab0:	0e 94 65 00 	call	0xca	; 0xca <millis>
     ab4:	00 91 83 02 	lds	r16, 0x0283	; 0x800283 <millis_current>
     ab8:	10 91 84 02 	lds	r17, 0x0284	; 0x800284 <millis_current+0x1>
     abc:	20 91 85 02 	lds	r18, 0x0285	; 0x800285 <millis_current+0x2>
     ac0:	30 91 86 02 	lds	r19, 0x0286	; 0x800286 <millis_current+0x3>
     ac4:	dc 01       	movw	r26, r24
     ac6:	cb 01       	movw	r24, r22
     ac8:	80 1b       	sub	r24, r16
     aca:	91 0b       	sbc	r25, r17
     acc:	a2 0b       	sbc	r26, r18
     ace:	b3 0b       	sbc	r27, r19
     ad0:	88 3e       	cpi	r24, 0xE8	; 232
     ad2:	93 40       	sbci	r25, 0x03	; 3
     ad4:	a1 05       	cpc	r26, r1
     ad6:	b1 05       	cpc	r27, r1
     ad8:	48 f3       	brcs	.-46     	; 0xaac <sendFrame+0xa8>
     ada:	81 e0       	ldi	r24, 0x01	; 1
     adc:	0e 94 f7 02 	call	0x5ee	; 0x5ee <setMode>
     ae0:	df 91       	pop	r29
     ae2:	cf 91       	pop	r28
     ae4:	1f 91       	pop	r17
     ae6:	0f 91       	pop	r16
     ae8:	ff 90       	pop	r15
     aea:	ef 90       	pop	r14
     aec:	08 95       	ret

00000aee <send>:
     aee:	df 92       	push	r13
     af0:	ef 92       	push	r14
     af2:	ff 92       	push	r15
     af4:	0f 93       	push	r16
     af6:	1f 93       	push	r17
     af8:	cf 93       	push	r28
     afa:	df 93       	push	r29
     afc:	f8 2e       	mov	r15, r24
     afe:	eb 01       	movw	r28, r22
     b00:	e4 2e       	mov	r14, r20
     b02:	d2 2e       	mov	r13, r18
     b04:	8d e3       	ldi	r24, 0x3D	; 61
     b06:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     b0a:	68 2f       	mov	r22, r24
     b0c:	64 60       	ori	r22, 0x04	; 4
     b0e:	8d e3       	ldi	r24, 0x3D	; 61
     b10:	0e 94 b5 02 	call	0x56a	; 0x56a <writeReg>
     b14:	0e 94 65 00 	call	0xca	; 0xca <millis>
     b18:	60 93 83 02 	sts	0x0283, r22	; 0x800283 <millis_current>
     b1c:	70 93 84 02 	sts	0x0284, r23	; 0x800284 <millis_current+0x1>
     b20:	80 93 85 02 	sts	0x0285, r24	; 0x800285 <millis_current+0x2>
     b24:	90 93 86 02 	sts	0x0286, r25	; 0x800286 <millis_current+0x3>
     b28:	02 c0       	rjmp	.+4      	; 0xb2e <send+0x40>
     b2a:	0e 94 c9 03 	call	0x792	; 0x792 <receiveDone>
     b2e:	0e 94 8a 03 	call	0x714	; 0x714 <canSend>
     b32:	81 11       	cpse	r24, r1
     b34:	15 c0       	rjmp	.+42     	; 0xb60 <send+0x72>
     b36:	0e 94 65 00 	call	0xca	; 0xca <millis>
     b3a:	00 91 83 02 	lds	r16, 0x0283	; 0x800283 <millis_current>
     b3e:	10 91 84 02 	lds	r17, 0x0284	; 0x800284 <millis_current+0x1>
     b42:	20 91 85 02 	lds	r18, 0x0285	; 0x800285 <millis_current+0x2>
     b46:	30 91 86 02 	lds	r19, 0x0286	; 0x800286 <millis_current+0x3>
     b4a:	dc 01       	movw	r26, r24
     b4c:	cb 01       	movw	r24, r22
     b4e:	80 1b       	sub	r24, r16
     b50:	91 0b       	sbc	r25, r17
     b52:	a2 0b       	sbc	r26, r18
     b54:	b3 0b       	sbc	r27, r19
     b56:	88 3e       	cpi	r24, 0xE8	; 232
     b58:	93 40       	sbci	r25, 0x03	; 3
     b5a:	a1 05       	cpc	r26, r1
     b5c:	b1 05       	cpc	r27, r1
     b5e:	28 f3       	brcs	.-54     	; 0xb2a <send+0x3c>
     b60:	00 e0       	ldi	r16, 0x00	; 0
     b62:	2d 2d       	mov	r18, r13
     b64:	4e 2d       	mov	r20, r14
     b66:	be 01       	movw	r22, r28
     b68:	8f 2d       	mov	r24, r15
     b6a:	0e 94 02 05 	call	0xa04	; 0xa04 <sendFrame>
     b6e:	df 91       	pop	r29
     b70:	cf 91       	pop	r28
     b72:	1f 91       	pop	r17
     b74:	0f 91       	pop	r16
     b76:	ff 90       	pop	r15
     b78:	ef 90       	pop	r14
     b7a:	df 90       	pop	r13
     b7c:	08 95       	ret

00000b7e <__vector_1>:
    maybeInterrupts();
}

// Interrupt Service Routine
ISR(INT_VECT)
{
     b7e:	1f 92       	push	r1
     b80:	0f 92       	push	r0
     b82:	0f b6       	in	r0, 0x3f	; 63
     b84:	0f 92       	push	r0
     b86:	11 24       	eor	r1, r1
     b88:	0f 93       	push	r16
     b8a:	1f 93       	push	r17
     b8c:	2f 93       	push	r18
     b8e:	3f 93       	push	r19
     b90:	4f 93       	push	r20
     b92:	5f 93       	push	r21
     b94:	6f 93       	push	r22
     b96:	7f 93       	push	r23
     b98:	8f 93       	push	r24
     b9a:	9f 93       	push	r25
     b9c:	af 93       	push	r26
     b9e:	bf 93       	push	r27
     ba0:	cf 93       	push	r28
     ba2:	ef 93       	push	r30
     ba4:	ff 93       	push	r31
    inISR = 1;
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <inISR>
    if (mode == RF69_MODE_RX && (readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PAYLOADREADY))
     bac:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <mode>
     bb0:	83 30       	cpi	r24, 0x03	; 3
     bb2:	09 f0       	breq	.+2      	; 0xbb6 <__vector_1+0x38>
     bb4:	6d c0       	rjmp	.+218    	; 0xc90 <__vector_1+0x112>
     bb6:	88 e2       	ldi	r24, 0x28	; 40
     bb8:	0e 94 a4 02 	call	0x548	; 0x548 <readReg>
     bbc:	82 ff       	sbrs	r24, 2
     bbe:	68 c0       	rjmp	.+208    	; 0xc90 <__vector_1+0x112>
    {
        setMode(RF69_MODE_STANDBY);
     bc0:	81 e0       	ldi	r24, 0x01	; 1
     bc2:	0e 94 f7 02 	call	0x5ee	; 0x5ee <setMode>
        select();
     bc6:	0e 94 9d 02 	call	0x53a	; 0x53a <select>
        spi_fast_shift(REG_FIFO & 0x7F);
     bca:	80 e0       	ldi	r24, 0x00	; 0
     bcc:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
        PAYLOADLEN = spi_fast_shift(0);
     bd0:	80 e0       	ldi	r24, 0x00	; 0
     bd2:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     bd6:	80 93 8d 02 	sts	0x028D, r24	; 0x80028d <PAYLOADLEN>
        if(PAYLOADLEN>66) PAYLOADLEN=66;
     bda:	80 91 8d 02 	lds	r24, 0x028D	; 0x80028d <PAYLOADLEN>
     bde:	83 34       	cpi	r24, 0x43	; 67
     be0:	18 f0       	brcs	.+6      	; 0xbe8 <__vector_1+0x6a>
     be2:	82 e4       	ldi	r24, 0x42	; 66
     be4:	80 93 8d 02 	sts	0x028D, r24	; 0x80028d <PAYLOADLEN>
        TARGETID = spi_fast_shift(0);
     be8:	80 e0       	ldi	r24, 0x00	; 0
     bea:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     bee:	80 93 8f 02 	sts	0x028F, r24	; 0x80028f <TARGETID>
        if(!(promiscuousMode || TARGETID == address || TARGETID == RF69_BROADCAST_ADDR) // match this node's address, or broadcast address or anything in promiscuous mode
     bf2:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <promiscuousMode>
     bf6:	81 11       	cpse	r24, r1
     bf8:	0a c0       	rjmp	.+20     	; 0xc0e <__vector_1+0x90>
     bfa:	90 91 8f 02 	lds	r25, 0x028F	; 0x80028f <TARGETID>
     bfe:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <address>
     c02:	98 17       	cp	r25, r24
     c04:	21 f0       	breq	.+8      	; 0xc0e <__vector_1+0x90>
     c06:	80 91 8f 02 	lds	r24, 0x028F	; 0x80028f <TARGETID>
     c0a:	8f 3f       	cpi	r24, 0xFF	; 255
     c0c:	21 f4       	brne	.+8      	; 0xc16 <__vector_1+0x98>
        || PAYLOADLEN < 3) // address situation could receive packets that are malformed and don't fit this libraries extra fields
     c0e:	80 91 8d 02 	lds	r24, 0x028D	; 0x80028d <PAYLOADLEN>
     c12:	83 30       	cpi	r24, 0x03	; 3
     c14:	38 f4       	brcc	.+14     	; 0xc24 <__vector_1+0xa6>
        {
            PAYLOADLEN = 0;
     c16:	10 92 8d 02 	sts	0x028D, r1	; 0x80028d <PAYLOADLEN>
            unselect();
     c1a:	0e 94 a0 02 	call	0x540	; 0x540 <unselect>
            receiveBegin();
     c1e:	0e 94 a4 03 	call	0x748	; 0x748 <receiveBegin>
            return;
     c22:	3f c0       	rjmp	.+126    	; 0xca2 <__vector_1+0x124>
        }

        DATALEN = PAYLOADLEN - 3;
     c24:	80 91 8d 02 	lds	r24, 0x028D	; 0x80028d <PAYLOADLEN>
     c28:	83 50       	subi	r24, 0x03	; 3
     c2a:	80 93 8c 02 	sts	0x028C, r24	; 0x80028c <DATALEN>
        SENDERID = spi_fast_shift(0);
     c2e:	80 e0       	ldi	r24, 0x00	; 0
     c30:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     c34:	80 93 8b 02 	sts	0x028B, r24	; 0x80028b <SENDERID>
        uint8_t CTLbyte = spi_fast_shift(0);
     c38:	80 e0       	ldi	r24, 0x00	; 0
     c3a:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>

        ACK_RECEIVED = CTLbyte & RFM69_CTL_SENDACK; // extract ACK-received flag
     c3e:	98 2f       	mov	r25, r24
     c40:	90 78       	andi	r25, 0x80	; 128
     c42:	90 93 88 02 	sts	0x0288, r25	; 0x800288 <ACK_RECEIVED>
        ACK_REQUESTED = CTLbyte & RFM69_CTL_REQACK; // extract ACK-requested flag
     c46:	80 74       	andi	r24, 0x40	; 64
     c48:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <ACK_REQUESTED>
        
        //interruptHook(CTLbyte);                   // TWS: hook to derived class interrupt function

        for (uint8_t i = 0; i < DATALEN; i++)
     c4c:	80 91 8c 02 	lds	r24, 0x028C	; 0x80028c <DATALEN>
     c50:	88 23       	and	r24, r24
     c52:	79 f0       	breq	.+30     	; 0xc72 <__vector_1+0xf4>
     c54:	c0 e0       	ldi	r28, 0x00	; 0
        {
            DATA[i] = spi_fast_shift(0);
     c56:	0c 2f       	mov	r16, r28
     c58:	10 e0       	ldi	r17, 0x00	; 0
     c5a:	80 e0       	ldi	r24, 0x00	; 0
     c5c:	0e 94 70 06 	call	0xce0	; 0xce0 <spi_fast_shift>
     c60:	f8 01       	movw	r30, r16
     c62:	ee 59       	subi	r30, 0x9E	; 158
     c64:	fe 4f       	sbci	r31, 0xFE	; 254
     c66:	80 83       	st	Z, r24
        ACK_RECEIVED = CTLbyte & RFM69_CTL_SENDACK; // extract ACK-received flag
        ACK_REQUESTED = CTLbyte & RFM69_CTL_REQACK; // extract ACK-requested flag
        
        //interruptHook(CTLbyte);                   // TWS: hook to derived class interrupt function

        for (uint8_t i = 0; i < DATALEN; i++)
     c68:	cf 5f       	subi	r28, 0xFF	; 255
     c6a:	80 91 8c 02 	lds	r24, 0x028C	; 0x80028c <DATALEN>
     c6e:	c8 17       	cp	r28, r24
     c70:	90 f3       	brcs	.-28     	; 0xc56 <__vector_1+0xd8>
        {
            DATA[i] = spi_fast_shift(0);
        }
        if (DATALEN < RF69_MAX_DATA_LEN) DATA[DATALEN] = 0; // add null at end of string
     c72:	80 91 8c 02 	lds	r24, 0x028C	; 0x80028c <DATALEN>
     c76:	8d 33       	cpi	r24, 0x3D	; 61
     c78:	30 f4       	brcc	.+12     	; 0xc86 <__vector_1+0x108>
     c7a:	e0 91 8c 02 	lds	r30, 0x028C	; 0x80028c <DATALEN>
     c7e:	f0 e0       	ldi	r31, 0x00	; 0
     c80:	ee 59       	subi	r30, 0x9E	; 158
     c82:	fe 4f       	sbci	r31, 0xFE	; 254
     c84:	10 82       	st	Z, r1
        unselect();
     c86:	0e 94 a0 02 	call	0x540	; 0x540 <unselect>
        setMode(RF69_MODE_RX);
     c8a:	83 e0       	ldi	r24, 0x03	; 3
     c8c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <setMode>
    }
    RSSI = readRSSI(0);
     c90:	80 e0       	ldi	r24, 0x00	; 0
     c92:	0e 94 75 03 	call	0x6ea	; 0x6ea <readRSSI>
     c96:	90 93 8a 02 	sts	0x028A, r25	; 0x80028a <RSSI+0x1>
     c9a:	80 93 89 02 	sts	0x0289, r24	; 0x800289 <RSSI>
    inISR = 0;
     c9e:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <inISR>
}
     ca2:	ff 91       	pop	r31
     ca4:	ef 91       	pop	r30
     ca6:	cf 91       	pop	r28
     ca8:	bf 91       	pop	r27
     caa:	af 91       	pop	r26
     cac:	9f 91       	pop	r25
     cae:	8f 91       	pop	r24
     cb0:	7f 91       	pop	r23
     cb2:	6f 91       	pop	r22
     cb4:	5f 91       	pop	r21
     cb6:	4f 91       	pop	r20
     cb8:	3f 91       	pop	r19
     cba:	2f 91       	pop	r18
     cbc:	1f 91       	pop	r17
     cbe:	0f 91       	pop	r16
     cc0:	0f 90       	pop	r0
     cc2:	0f be       	out	0x3f, r0	; 63
     cc4:	0f 90       	pop	r0
     cc6:	1f 90       	pop	r1
     cc8:	18 95       	reti

00000cca <spi_init>:
     cca:	84 b1       	in	r24, 0x04	; 4
     ccc:	83 7c       	andi	r24, 0xC3	; 195
     cce:	84 b9       	out	0x04, r24	; 4
     cd0:	84 b1       	in	r24, 0x04	; 4
     cd2:	8c 62       	ori	r24, 0x2C	; 44
     cd4:	84 b9       	out	0x04, r24	; 4
     cd6:	80 e5       	ldi	r24, 0x50	; 80
     cd8:	8c bd       	out	0x2c, r24	; 44
     cda:	81 e0       	ldi	r24, 0x01	; 1
     cdc:	8d bd       	out	0x2d, r24	; 45
     cde:	08 95       	ret

00000ce0 <spi_fast_shift>:
     ce0:	8e bd       	out	0x2e, r24	; 46
     ce2:	0d b4       	in	r0, 0x2d	; 45
     ce4:	07 fe       	sbrs	r0, 7
     ce6:	fd cf       	rjmp	.-6      	; 0xce2 <spi_fast_shift+0x2>
     ce8:	8e b5       	in	r24, 0x2e	; 46
     cea:	08 95       	ret

00000cec <InitUART>:
  // Wait for new character received
  while ( (UCSRnA & (1<<7)) == 0 )
  {}                        
  // Then return it
  return UDRn;
}
     cec:	0f 93       	push	r16
     cee:	cf 93       	push	r28
     cf0:	df 93       	push	r29
     cf2:	ec 01       	movw	r28, r24
     cf4:	db 01       	movw	r26, r22
     cf6:	ca 01       	movw	r24, r20
     cf8:	8c 52       	subi	r24, 0x2C	; 44
     cfa:	91 40       	sbci	r25, 0x01	; 1
     cfc:	a1 09       	sbc	r26, r1
     cfe:	b1 09       	sbc	r27, r1
     d00:	85 3d       	cpi	r24, 0xD5	; 213
     d02:	90 4c       	sbci	r25, 0xC0	; 192
     d04:	a1 40       	sbci	r26, 0x01	; 1
     d06:	b1 05       	cpc	r27, r1
     d08:	08 f0       	brcs	.+2      	; 0xd0c <InitUART+0x20>
     d0a:	40 c0       	rjmp	.+128    	; 0xd8c <InitUART+0xa0>
     d0c:	25 50       	subi	r18, 0x05	; 5
     d0e:	24 30       	cpi	r18, 0x04	; 4
     d10:	e8 f5       	brcc	.+122    	; 0xd8c <InitUART+0xa0>
     d12:	80 e2       	ldi	r24, 0x20	; 32
     d14:	88 83       	st	Y, r24
     d16:	88 e9       	ldi	r24, 0x98	; 152
     d18:	89 83       	std	Y+1, r24	; 0x01
     d1a:	22 0f       	add	r18, r18
     d1c:	2a 83       	std	Y+2, r18	; 0x02
     d1e:	05 34       	cpi	r16, 0x45	; 69
     d20:	21 f4       	brne	.+8      	; 0xd2a <InitUART+0x3e>
     d22:	8a 81       	ldd	r24, Y+2	; 0x02
     d24:	80 62       	ori	r24, 0x20	; 32
     d26:	8a 83       	std	Y+2, r24	; 0x02
     d28:	05 c0       	rjmp	.+10     	; 0xd34 <InitUART+0x48>
     d2a:	0f 34       	cpi	r16, 0x4F	; 79
     d2c:	19 f4       	brne	.+6      	; 0xd34 <InitUART+0x48>
     d2e:	8a 81       	ldd	r24, Y+2	; 0x02
     d30:	80 63       	ori	r24, 0x30	; 48
     d32:	8a 83       	std	Y+2, r24	; 0x02
     d34:	db 01       	movw	r26, r22
     d36:	ca 01       	movw	r24, r20
     d38:	80 58       	subi	r24, 0x80	; 128
     d3a:	9b 47       	sbci	r25, 0x7B	; 123
     d3c:	a1 4e       	sbci	r26, 0xE1	; 225
     d3e:	bf 4f       	sbci	r27, 0xFF	; 255
     d40:	88 0f       	add	r24, r24
     d42:	99 1f       	adc	r25, r25
     d44:	aa 1f       	adc	r26, r26
     d46:	bb 1f       	adc	r27, r27
     d48:	88 0f       	add	r24, r24
     d4a:	99 1f       	adc	r25, r25
     d4c:	aa 1f       	adc	r26, r26
     d4e:	bb 1f       	adc	r27, r27
     d50:	88 0f       	add	r24, r24
     d52:	99 1f       	adc	r25, r25
     d54:	aa 1f       	adc	r26, r26
     d56:	bb 1f       	adc	r27, r27
     d58:	44 0f       	add	r20, r20
     d5a:	55 1f       	adc	r21, r21
     d5c:	66 1f       	adc	r22, r22
     d5e:	77 1f       	adc	r23, r23
     d60:	44 0f       	add	r20, r20
     d62:	55 1f       	adc	r21, r21
     d64:	66 1f       	adc	r22, r22
     d66:	77 1f       	adc	r23, r23
     d68:	9a 01       	movw	r18, r20
     d6a:	ab 01       	movw	r20, r22
     d6c:	22 0f       	add	r18, r18
     d6e:	33 1f       	adc	r19, r19
     d70:	44 1f       	adc	r20, r20
     d72:	55 1f       	adc	r21, r21
     d74:	22 0f       	add	r18, r18
     d76:	33 1f       	adc	r19, r19
     d78:	44 1f       	adc	r20, r20
     d7a:	55 1f       	adc	r21, r21
     d7c:	bc 01       	movw	r22, r24
     d7e:	cd 01       	movw	r24, r26
     d80:	0e 94 16 08 	call	0x102c	; 0x102c <__udivmodsi4>
     d84:	21 50       	subi	r18, 0x01	; 1
     d86:	31 09       	sbc	r19, r1
     d88:	3d 83       	std	Y+5, r19	; 0x05
     d8a:	2c 83       	std	Y+4, r18	; 0x04
     d8c:	df 91       	pop	r29
     d8e:	cf 91       	pop	r28
     d90:	0f 91       	pop	r16
     d92:	08 95       	ret

00000d94 <SendChar>:
Then send the character.
Parameter :
	Tegn : Character for sending. 
*************************************************************************/
void SendChar(unsigned int UART_adr, char Tegn)
{
     d94:	fc 01       	movw	r30, r24
  // Wait for transmitter register empty (ready for new character)
  while ( (UCSRnA & (1<<5)) == 0 )
     d96:	90 81       	ld	r25, Z
     d98:	95 ff       	sbrs	r25, 5
     d9a:	fd cf       	rjmp	.-6      	; 0xd96 <SendChar+0x2>
  {}
  // Then send the character
  UDRn = Tegn;
     d9c:	66 83       	std	Z+6, r22	; 0x06
     d9e:	08 95       	ret

00000da0 <SendString>:
Sends 0 terminated string.
Parameter:
   Streng: Pointer to the string. 
*************************************************************************/
void SendString(unsigned int UART_adr, char* Streng)
{
     da0:	0f 93       	push	r16
     da2:	1f 93       	push	r17
     da4:	cf 93       	push	r28
     da6:	df 93       	push	r29
     da8:	eb 01       	movw	r28, r22
  // Repeat until zero-termination
  while (*Streng != '\0')
     daa:	68 81       	ld	r22, Y
     dac:	66 23       	and	r22, r22
     dae:	41 f0       	breq	.+16     	; 0xdc0 <SendString+0x20>
     db0:	8c 01       	movw	r16, r24
     db2:	21 96       	adiw	r28, 0x01	; 1
  {
    // Send the character pointed to by "Streng"
    SendChar(UART_adr, *Streng);
     db4:	c8 01       	movw	r24, r16
     db6:	0e 94 ca 06 	call	0xd94	; 0xd94 <SendChar>
   Streng: Pointer to the string. 
*************************************************************************/
void SendString(unsigned int UART_adr, char* Streng)
{
  // Repeat until zero-termination
  while (*Streng != '\0')
     dba:	69 91       	ld	r22, Y+
     dbc:	61 11       	cpse	r22, r1
     dbe:	fa cf       	rjmp	.-12     	; 0xdb4 <SendString+0x14>
    // Send the character pointed to by "Streng"
    SendChar(UART_adr, *Streng);
    // Advance the pointer one step
    Streng++;
  }
}
     dc0:	df 91       	pop	r29
     dc2:	cf 91       	pop	r28
     dc4:	1f 91       	pop	r17
     dc6:	0f 91       	pop	r16
     dc8:	08 95       	ret

00000dca <__fixsfsi>:
     dca:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <__fixunssfsi>
     dce:	68 94       	set
     dd0:	b1 11       	cpse	r27, r1
     dd2:	0c 94 a3 07 	jmp	0xf46	; 0xf46 <__fp_szero>
     dd6:	08 95       	ret

00000dd8 <__fixunssfsi>:
     dd8:	0e 94 88 07 	call	0xf10	; 0xf10 <__fp_splitA>
     ddc:	88 f0       	brcs	.+34     	; 0xe00 <__fixunssfsi+0x28>
     dde:	9f 57       	subi	r25, 0x7F	; 127
     de0:	98 f0       	brcs	.+38     	; 0xe08 <__fixunssfsi+0x30>
     de2:	b9 2f       	mov	r27, r25
     de4:	99 27       	eor	r25, r25
     de6:	b7 51       	subi	r27, 0x17	; 23
     de8:	b0 f0       	brcs	.+44     	; 0xe16 <__fixunssfsi+0x3e>
     dea:	e1 f0       	breq	.+56     	; 0xe24 <__fixunssfsi+0x4c>
     dec:	66 0f       	add	r22, r22
     dee:	77 1f       	adc	r23, r23
     df0:	88 1f       	adc	r24, r24
     df2:	99 1f       	adc	r25, r25
     df4:	1a f0       	brmi	.+6      	; 0xdfc <__fixunssfsi+0x24>
     df6:	ba 95       	dec	r27
     df8:	c9 f7       	brne	.-14     	; 0xdec <__fixunssfsi+0x14>
     dfa:	14 c0       	rjmp	.+40     	; 0xe24 <__fixunssfsi+0x4c>
     dfc:	b1 30       	cpi	r27, 0x01	; 1
     dfe:	91 f0       	breq	.+36     	; 0xe24 <__fixunssfsi+0x4c>
     e00:	0e 94 a2 07 	call	0xf44	; 0xf44 <__fp_zero>
     e04:	b1 e0       	ldi	r27, 0x01	; 1
     e06:	08 95       	ret
     e08:	0c 94 a2 07 	jmp	0xf44	; 0xf44 <__fp_zero>
     e0c:	67 2f       	mov	r22, r23
     e0e:	78 2f       	mov	r23, r24
     e10:	88 27       	eor	r24, r24
     e12:	b8 5f       	subi	r27, 0xF8	; 248
     e14:	39 f0       	breq	.+14     	; 0xe24 <__fixunssfsi+0x4c>
     e16:	b9 3f       	cpi	r27, 0xF9	; 249
     e18:	cc f3       	brlt	.-14     	; 0xe0c <__fixunssfsi+0x34>
     e1a:	86 95       	lsr	r24
     e1c:	77 95       	ror	r23
     e1e:	67 95       	ror	r22
     e20:	b3 95       	inc	r27
     e22:	d9 f7       	brne	.-10     	; 0xe1a <__fixunssfsi+0x42>
     e24:	3e f4       	brtc	.+14     	; 0xe34 <__fixunssfsi+0x5c>
     e26:	90 95       	com	r25
     e28:	80 95       	com	r24
     e2a:	70 95       	com	r23
     e2c:	61 95       	neg	r22
     e2e:	7f 4f       	sbci	r23, 0xFF	; 255
     e30:	8f 4f       	sbci	r24, 0xFF	; 255
     e32:	9f 4f       	sbci	r25, 0xFF	; 255
     e34:	08 95       	ret

00000e36 <__floatunsisf>:
     e36:	e8 94       	clt
     e38:	09 c0       	rjmp	.+18     	; 0xe4c <__floatsisf+0x12>

00000e3a <__floatsisf>:
     e3a:	97 fb       	bst	r25, 7
     e3c:	3e f4       	brtc	.+14     	; 0xe4c <__floatsisf+0x12>
     e3e:	90 95       	com	r25
     e40:	80 95       	com	r24
     e42:	70 95       	com	r23
     e44:	61 95       	neg	r22
     e46:	7f 4f       	sbci	r23, 0xFF	; 255
     e48:	8f 4f       	sbci	r24, 0xFF	; 255
     e4a:	9f 4f       	sbci	r25, 0xFF	; 255
     e4c:	99 23       	and	r25, r25
     e4e:	a9 f0       	breq	.+42     	; 0xe7a <__floatsisf+0x40>
     e50:	f9 2f       	mov	r31, r25
     e52:	96 e9       	ldi	r25, 0x96	; 150
     e54:	bb 27       	eor	r27, r27
     e56:	93 95       	inc	r25
     e58:	f6 95       	lsr	r31
     e5a:	87 95       	ror	r24
     e5c:	77 95       	ror	r23
     e5e:	67 95       	ror	r22
     e60:	b7 95       	ror	r27
     e62:	f1 11       	cpse	r31, r1
     e64:	f8 cf       	rjmp	.-16     	; 0xe56 <__floatsisf+0x1c>
     e66:	fa f4       	brpl	.+62     	; 0xea6 <__floatsisf+0x6c>
     e68:	bb 0f       	add	r27, r27
     e6a:	11 f4       	brne	.+4      	; 0xe70 <__floatsisf+0x36>
     e6c:	60 ff       	sbrs	r22, 0
     e6e:	1b c0       	rjmp	.+54     	; 0xea6 <__floatsisf+0x6c>
     e70:	6f 5f       	subi	r22, 0xFF	; 255
     e72:	7f 4f       	sbci	r23, 0xFF	; 255
     e74:	8f 4f       	sbci	r24, 0xFF	; 255
     e76:	9f 4f       	sbci	r25, 0xFF	; 255
     e78:	16 c0       	rjmp	.+44     	; 0xea6 <__floatsisf+0x6c>
     e7a:	88 23       	and	r24, r24
     e7c:	11 f0       	breq	.+4      	; 0xe82 <__floatsisf+0x48>
     e7e:	96 e9       	ldi	r25, 0x96	; 150
     e80:	11 c0       	rjmp	.+34     	; 0xea4 <__floatsisf+0x6a>
     e82:	77 23       	and	r23, r23
     e84:	21 f0       	breq	.+8      	; 0xe8e <__floatsisf+0x54>
     e86:	9e e8       	ldi	r25, 0x8E	; 142
     e88:	87 2f       	mov	r24, r23
     e8a:	76 2f       	mov	r23, r22
     e8c:	05 c0       	rjmp	.+10     	; 0xe98 <__floatsisf+0x5e>
     e8e:	66 23       	and	r22, r22
     e90:	71 f0       	breq	.+28     	; 0xeae <__floatsisf+0x74>
     e92:	96 e8       	ldi	r25, 0x86	; 134
     e94:	86 2f       	mov	r24, r22
     e96:	70 e0       	ldi	r23, 0x00	; 0
     e98:	60 e0       	ldi	r22, 0x00	; 0
     e9a:	2a f0       	brmi	.+10     	; 0xea6 <__floatsisf+0x6c>
     e9c:	9a 95       	dec	r25
     e9e:	66 0f       	add	r22, r22
     ea0:	77 1f       	adc	r23, r23
     ea2:	88 1f       	adc	r24, r24
     ea4:	da f7       	brpl	.-10     	; 0xe9c <__floatsisf+0x62>
     ea6:	88 0f       	add	r24, r24
     ea8:	96 95       	lsr	r25
     eaa:	87 95       	ror	r24
     eac:	97 f9       	bld	r25, 7
     eae:	08 95       	ret

00000eb0 <__fp_inf>:
     eb0:	97 f9       	bld	r25, 7
     eb2:	9f 67       	ori	r25, 0x7F	; 127
     eb4:	80 e8       	ldi	r24, 0x80	; 128
     eb6:	70 e0       	ldi	r23, 0x00	; 0
     eb8:	60 e0       	ldi	r22, 0x00	; 0
     eba:	08 95       	ret

00000ebc <__fp_nan>:
     ebc:	9f ef       	ldi	r25, 0xFF	; 255
     ebe:	80 ec       	ldi	r24, 0xC0	; 192
     ec0:	08 95       	ret

00000ec2 <__fp_pscA>:
     ec2:	00 24       	eor	r0, r0
     ec4:	0a 94       	dec	r0
     ec6:	16 16       	cp	r1, r22
     ec8:	17 06       	cpc	r1, r23
     eca:	18 06       	cpc	r1, r24
     ecc:	09 06       	cpc	r0, r25
     ece:	08 95       	ret

00000ed0 <__fp_pscB>:
     ed0:	00 24       	eor	r0, r0
     ed2:	0a 94       	dec	r0
     ed4:	12 16       	cp	r1, r18
     ed6:	13 06       	cpc	r1, r19
     ed8:	14 06       	cpc	r1, r20
     eda:	05 06       	cpc	r0, r21
     edc:	08 95       	ret

00000ede <__fp_round>:
     ede:	09 2e       	mov	r0, r25
     ee0:	03 94       	inc	r0
     ee2:	00 0c       	add	r0, r0
     ee4:	11 f4       	brne	.+4      	; 0xeea <__fp_round+0xc>
     ee6:	88 23       	and	r24, r24
     ee8:	52 f0       	brmi	.+20     	; 0xefe <__fp_round+0x20>
     eea:	bb 0f       	add	r27, r27
     eec:	40 f4       	brcc	.+16     	; 0xefe <__fp_round+0x20>
     eee:	bf 2b       	or	r27, r31
     ef0:	11 f4       	brne	.+4      	; 0xef6 <__fp_round+0x18>
     ef2:	60 ff       	sbrs	r22, 0
     ef4:	04 c0       	rjmp	.+8      	; 0xefe <__fp_round+0x20>
     ef6:	6f 5f       	subi	r22, 0xFF	; 255
     ef8:	7f 4f       	sbci	r23, 0xFF	; 255
     efa:	8f 4f       	sbci	r24, 0xFF	; 255
     efc:	9f 4f       	sbci	r25, 0xFF	; 255
     efe:	08 95       	ret

00000f00 <__fp_split3>:
     f00:	57 fd       	sbrc	r21, 7
     f02:	90 58       	subi	r25, 0x80	; 128
     f04:	44 0f       	add	r20, r20
     f06:	55 1f       	adc	r21, r21
     f08:	59 f0       	breq	.+22     	; 0xf20 <__fp_splitA+0x10>
     f0a:	5f 3f       	cpi	r21, 0xFF	; 255
     f0c:	71 f0       	breq	.+28     	; 0xf2a <__fp_splitA+0x1a>
     f0e:	47 95       	ror	r20

00000f10 <__fp_splitA>:
     f10:	88 0f       	add	r24, r24
     f12:	97 fb       	bst	r25, 7
     f14:	99 1f       	adc	r25, r25
     f16:	61 f0       	breq	.+24     	; 0xf30 <__fp_splitA+0x20>
     f18:	9f 3f       	cpi	r25, 0xFF	; 255
     f1a:	79 f0       	breq	.+30     	; 0xf3a <__fp_splitA+0x2a>
     f1c:	87 95       	ror	r24
     f1e:	08 95       	ret
     f20:	12 16       	cp	r1, r18
     f22:	13 06       	cpc	r1, r19
     f24:	14 06       	cpc	r1, r20
     f26:	55 1f       	adc	r21, r21
     f28:	f2 cf       	rjmp	.-28     	; 0xf0e <__fp_split3+0xe>
     f2a:	46 95       	lsr	r20
     f2c:	f1 df       	rcall	.-30     	; 0xf10 <__fp_splitA>
     f2e:	08 c0       	rjmp	.+16     	; 0xf40 <__fp_splitA+0x30>
     f30:	16 16       	cp	r1, r22
     f32:	17 06       	cpc	r1, r23
     f34:	18 06       	cpc	r1, r24
     f36:	99 1f       	adc	r25, r25
     f38:	f1 cf       	rjmp	.-30     	; 0xf1c <__fp_splitA+0xc>
     f3a:	86 95       	lsr	r24
     f3c:	71 05       	cpc	r23, r1
     f3e:	61 05       	cpc	r22, r1
     f40:	08 94       	sec
     f42:	08 95       	ret

00000f44 <__fp_zero>:
     f44:	e8 94       	clt

00000f46 <__fp_szero>:
     f46:	bb 27       	eor	r27, r27
     f48:	66 27       	eor	r22, r22
     f4a:	77 27       	eor	r23, r23
     f4c:	cb 01       	movw	r24, r22
     f4e:	97 f9       	bld	r25, 7
     f50:	08 95       	ret

00000f52 <__mulsf3>:
     f52:	0e 94 bc 07 	call	0xf78	; 0xf78 <__mulsf3x>
     f56:	0c 94 6f 07 	jmp	0xede	; 0xede <__fp_round>
     f5a:	0e 94 61 07 	call	0xec2	; 0xec2 <__fp_pscA>
     f5e:	38 f0       	brcs	.+14     	; 0xf6e <__mulsf3+0x1c>
     f60:	0e 94 68 07 	call	0xed0	; 0xed0 <__fp_pscB>
     f64:	20 f0       	brcs	.+8      	; 0xf6e <__mulsf3+0x1c>
     f66:	95 23       	and	r25, r21
     f68:	11 f0       	breq	.+4      	; 0xf6e <__mulsf3+0x1c>
     f6a:	0c 94 58 07 	jmp	0xeb0	; 0xeb0 <__fp_inf>
     f6e:	0c 94 5e 07 	jmp	0xebc	; 0xebc <__fp_nan>
     f72:	11 24       	eor	r1, r1
     f74:	0c 94 a3 07 	jmp	0xf46	; 0xf46 <__fp_szero>

00000f78 <__mulsf3x>:
     f78:	0e 94 80 07 	call	0xf00	; 0xf00 <__fp_split3>
     f7c:	70 f3       	brcs	.-36     	; 0xf5a <__mulsf3+0x8>

00000f7e <__mulsf3_pse>:
     f7e:	95 9f       	mul	r25, r21
     f80:	c1 f3       	breq	.-16     	; 0xf72 <__mulsf3+0x20>
     f82:	95 0f       	add	r25, r21
     f84:	50 e0       	ldi	r21, 0x00	; 0
     f86:	55 1f       	adc	r21, r21
     f88:	62 9f       	mul	r22, r18
     f8a:	f0 01       	movw	r30, r0
     f8c:	72 9f       	mul	r23, r18
     f8e:	bb 27       	eor	r27, r27
     f90:	f0 0d       	add	r31, r0
     f92:	b1 1d       	adc	r27, r1
     f94:	63 9f       	mul	r22, r19
     f96:	aa 27       	eor	r26, r26
     f98:	f0 0d       	add	r31, r0
     f9a:	b1 1d       	adc	r27, r1
     f9c:	aa 1f       	adc	r26, r26
     f9e:	64 9f       	mul	r22, r20
     fa0:	66 27       	eor	r22, r22
     fa2:	b0 0d       	add	r27, r0
     fa4:	a1 1d       	adc	r26, r1
     fa6:	66 1f       	adc	r22, r22
     fa8:	82 9f       	mul	r24, r18
     faa:	22 27       	eor	r18, r18
     fac:	b0 0d       	add	r27, r0
     fae:	a1 1d       	adc	r26, r1
     fb0:	62 1f       	adc	r22, r18
     fb2:	73 9f       	mul	r23, r19
     fb4:	b0 0d       	add	r27, r0
     fb6:	a1 1d       	adc	r26, r1
     fb8:	62 1f       	adc	r22, r18
     fba:	83 9f       	mul	r24, r19
     fbc:	a0 0d       	add	r26, r0
     fbe:	61 1d       	adc	r22, r1
     fc0:	22 1f       	adc	r18, r18
     fc2:	74 9f       	mul	r23, r20
     fc4:	33 27       	eor	r19, r19
     fc6:	a0 0d       	add	r26, r0
     fc8:	61 1d       	adc	r22, r1
     fca:	23 1f       	adc	r18, r19
     fcc:	84 9f       	mul	r24, r20
     fce:	60 0d       	add	r22, r0
     fd0:	21 1d       	adc	r18, r1
     fd2:	82 2f       	mov	r24, r18
     fd4:	76 2f       	mov	r23, r22
     fd6:	6a 2f       	mov	r22, r26
     fd8:	11 24       	eor	r1, r1
     fda:	9f 57       	subi	r25, 0x7F	; 127
     fdc:	50 40       	sbci	r21, 0x00	; 0
     fde:	9a f0       	brmi	.+38     	; 0x1006 <__mulsf3_pse+0x88>
     fe0:	f1 f0       	breq	.+60     	; 0x101e <__mulsf3_pse+0xa0>
     fe2:	88 23       	and	r24, r24
     fe4:	4a f0       	brmi	.+18     	; 0xff8 <__mulsf3_pse+0x7a>
     fe6:	ee 0f       	add	r30, r30
     fe8:	ff 1f       	adc	r31, r31
     fea:	bb 1f       	adc	r27, r27
     fec:	66 1f       	adc	r22, r22
     fee:	77 1f       	adc	r23, r23
     ff0:	88 1f       	adc	r24, r24
     ff2:	91 50       	subi	r25, 0x01	; 1
     ff4:	50 40       	sbci	r21, 0x00	; 0
     ff6:	a9 f7       	brne	.-22     	; 0xfe2 <__mulsf3_pse+0x64>
     ff8:	9e 3f       	cpi	r25, 0xFE	; 254
     ffa:	51 05       	cpc	r21, r1
     ffc:	80 f0       	brcs	.+32     	; 0x101e <__mulsf3_pse+0xa0>
     ffe:	0c 94 58 07 	jmp	0xeb0	; 0xeb0 <__fp_inf>
    1002:	0c 94 a3 07 	jmp	0xf46	; 0xf46 <__fp_szero>
    1006:	5f 3f       	cpi	r21, 0xFF	; 255
    1008:	e4 f3       	brlt	.-8      	; 0x1002 <__mulsf3_pse+0x84>
    100a:	98 3e       	cpi	r25, 0xE8	; 232
    100c:	d4 f3       	brlt	.-12     	; 0x1002 <__mulsf3_pse+0x84>
    100e:	86 95       	lsr	r24
    1010:	77 95       	ror	r23
    1012:	67 95       	ror	r22
    1014:	b7 95       	ror	r27
    1016:	f7 95       	ror	r31
    1018:	e7 95       	ror	r30
    101a:	9f 5f       	subi	r25, 0xFF	; 255
    101c:	c1 f7       	brne	.-16     	; 0x100e <__mulsf3_pse+0x90>
    101e:	fe 2b       	or	r31, r30
    1020:	88 0f       	add	r24, r24
    1022:	91 1d       	adc	r25, r1
    1024:	96 95       	lsr	r25
    1026:	87 95       	ror	r24
    1028:	97 f9       	bld	r25, 7
    102a:	08 95       	ret

0000102c <__udivmodsi4>:
    102c:	a1 e2       	ldi	r26, 0x21	; 33
    102e:	1a 2e       	mov	r1, r26
    1030:	aa 1b       	sub	r26, r26
    1032:	bb 1b       	sub	r27, r27
    1034:	fd 01       	movw	r30, r26
    1036:	0d c0       	rjmp	.+26     	; 0x1052 <__udivmodsi4_ep>

00001038 <__udivmodsi4_loop>:
    1038:	aa 1f       	adc	r26, r26
    103a:	bb 1f       	adc	r27, r27
    103c:	ee 1f       	adc	r30, r30
    103e:	ff 1f       	adc	r31, r31
    1040:	a2 17       	cp	r26, r18
    1042:	b3 07       	cpc	r27, r19
    1044:	e4 07       	cpc	r30, r20
    1046:	f5 07       	cpc	r31, r21
    1048:	20 f0       	brcs	.+8      	; 0x1052 <__udivmodsi4_ep>
    104a:	a2 1b       	sub	r26, r18
    104c:	b3 0b       	sbc	r27, r19
    104e:	e4 0b       	sbc	r30, r20
    1050:	f5 0b       	sbc	r31, r21

00001052 <__udivmodsi4_ep>:
    1052:	66 1f       	adc	r22, r22
    1054:	77 1f       	adc	r23, r23
    1056:	88 1f       	adc	r24, r24
    1058:	99 1f       	adc	r25, r25
    105a:	1a 94       	dec	r1
    105c:	69 f7       	brne	.-38     	; 0x1038 <__udivmodsi4_loop>
    105e:	60 95       	com	r22
    1060:	70 95       	com	r23
    1062:	80 95       	com	r24
    1064:	90 95       	com	r25
    1066:	9b 01       	movw	r18, r22
    1068:	ac 01       	movw	r20, r24
    106a:	bd 01       	movw	r22, r26
    106c:	cf 01       	movw	r24, r30
    106e:	08 95       	ret

00001070 <atoi>:
    1070:	fc 01       	movw	r30, r24
    1072:	88 27       	eor	r24, r24
    1074:	99 27       	eor	r25, r25
    1076:	e8 94       	clt
    1078:	21 91       	ld	r18, Z+
    107a:	20 32       	cpi	r18, 0x20	; 32
    107c:	e9 f3       	breq	.-6      	; 0x1078 <atoi+0x8>
    107e:	29 30       	cpi	r18, 0x09	; 9
    1080:	10 f0       	brcs	.+4      	; 0x1086 <atoi+0x16>
    1082:	2e 30       	cpi	r18, 0x0E	; 14
    1084:	c8 f3       	brcs	.-14     	; 0x1078 <atoi+0x8>
    1086:	2b 32       	cpi	r18, 0x2B	; 43
    1088:	41 f0       	breq	.+16     	; 0x109a <atoi+0x2a>
    108a:	2d 32       	cpi	r18, 0x2D	; 45
    108c:	39 f4       	brne	.+14     	; 0x109c <atoi+0x2c>
    108e:	68 94       	set
    1090:	04 c0       	rjmp	.+8      	; 0x109a <atoi+0x2a>
    1092:	0e 94 94 08 	call	0x1128	; 0x1128 <__mulhi_const_10>
    1096:	82 0f       	add	r24, r18
    1098:	91 1d       	adc	r25, r1
    109a:	21 91       	ld	r18, Z+
    109c:	20 53       	subi	r18, 0x30	; 48
    109e:	2a 30       	cpi	r18, 0x0A	; 10
    10a0:	c0 f3       	brcs	.-16     	; 0x1092 <atoi+0x22>
    10a2:	1e f4       	brtc	.+6      	; 0x10aa <atoi+0x3a>
    10a4:	90 95       	com	r25
    10a6:	81 95       	neg	r24
    10a8:	9f 4f       	sbci	r25, 0xFF	; 255
    10aa:	08 95       	ret

000010ac <strtok>:
    10ac:	48 e5       	ldi	r20, 0x58	; 88
    10ae:	51 e0       	ldi	r21, 0x01	; 1
    10b0:	0e 94 6d 08 	call	0x10da	; 0x10da <strtok_r>
    10b4:	08 95       	ret

000010b6 <strcat>:
    10b6:	fb 01       	movw	r30, r22
    10b8:	dc 01       	movw	r26, r24
    10ba:	0d 90       	ld	r0, X+
    10bc:	00 20       	and	r0, r0
    10be:	e9 f7       	brne	.-6      	; 0x10ba <strcat+0x4>
    10c0:	11 97       	sbiw	r26, 0x01	; 1
    10c2:	01 90       	ld	r0, Z+
    10c4:	0d 92       	st	X+, r0
    10c6:	00 20       	and	r0, r0
    10c8:	e1 f7       	brne	.-8      	; 0x10c2 <strcat+0xc>
    10ca:	08 95       	ret

000010cc <strcpy>:
    10cc:	fb 01       	movw	r30, r22
    10ce:	dc 01       	movw	r26, r24
    10d0:	01 90       	ld	r0, Z+
    10d2:	0d 92       	st	X+, r0
    10d4:	00 20       	and	r0, r0
    10d6:	e1 f7       	brne	.-8      	; 0x10d0 <strcpy+0x4>
    10d8:	08 95       	ret

000010da <strtok_r>:
    10da:	fa 01       	movw	r30, r20
    10dc:	a1 91       	ld	r26, Z+
    10de:	b0 81       	ld	r27, Z
    10e0:	00 97       	sbiw	r24, 0x00	; 0
    10e2:	19 f4       	brne	.+6      	; 0x10ea <strtok_r+0x10>
    10e4:	10 97       	sbiw	r26, 0x00	; 0
    10e6:	e1 f0       	breq	.+56     	; 0x1120 <strtok_r+0x46>
    10e8:	cd 01       	movw	r24, r26
    10ea:	dc 01       	movw	r26, r24
    10ec:	cd 01       	movw	r24, r26
    10ee:	0d 90       	ld	r0, X+
    10f0:	00 20       	and	r0, r0
    10f2:	11 f4       	brne	.+4      	; 0x10f8 <strtok_r+0x1e>
    10f4:	c0 01       	movw	r24, r0
    10f6:	13 c0       	rjmp	.+38     	; 0x111e <strtok_r+0x44>
    10f8:	fb 01       	movw	r30, r22
    10fa:	21 91       	ld	r18, Z+
    10fc:	22 23       	and	r18, r18
    10fe:	19 f0       	breq	.+6      	; 0x1106 <strtok_r+0x2c>
    1100:	20 15       	cp	r18, r0
    1102:	d9 f7       	brne	.-10     	; 0x10fa <strtok_r+0x20>
    1104:	f3 cf       	rjmp	.-26     	; 0x10ec <strtok_r+0x12>
    1106:	fb 01       	movw	r30, r22
    1108:	21 91       	ld	r18, Z+
    110a:	20 15       	cp	r18, r0
    110c:	19 f4       	brne	.+6      	; 0x1114 <strtok_r+0x3a>
    110e:	1e 92       	st	-X, r1
    1110:	11 96       	adiw	r26, 0x01	; 1
    1112:	06 c0       	rjmp	.+12     	; 0x1120 <strtok_r+0x46>
    1114:	22 23       	and	r18, r18
    1116:	c1 f7       	brne	.-16     	; 0x1108 <strtok_r+0x2e>
    1118:	0d 90       	ld	r0, X+
    111a:	00 20       	and	r0, r0
    111c:	a1 f7       	brne	.-24     	; 0x1106 <strtok_r+0x2c>
    111e:	d0 01       	movw	r26, r0
    1120:	fa 01       	movw	r30, r20
    1122:	a1 93       	st	Z+, r26
    1124:	b0 83       	st	Z, r27
    1126:	08 95       	ret

00001128 <__mulhi_const_10>:
    1128:	7a e0       	ldi	r23, 0x0A	; 10
    112a:	97 9f       	mul	r25, r23
    112c:	90 2d       	mov	r25, r0
    112e:	87 9f       	mul	r24, r23
    1130:	80 2d       	mov	r24, r0
    1132:	91 0d       	add	r25, r1
    1134:	11 24       	eor	r1, r1
    1136:	08 95       	ret

00001138 <sprintf>:
    1138:	ae e0       	ldi	r26, 0x0E	; 14
    113a:	b0 e0       	ldi	r27, 0x00	; 0
    113c:	e2 ea       	ldi	r30, 0xA2	; 162
    113e:	f8 e0       	ldi	r31, 0x08	; 8
    1140:	0c 94 5d 0b 	jmp	0x16ba	; 0x16ba <__prologue_saves__+0x1c>
    1144:	0d 89       	ldd	r16, Y+21	; 0x15
    1146:	1e 89       	ldd	r17, Y+22	; 0x16
    1148:	86 e0       	ldi	r24, 0x06	; 6
    114a:	8c 83       	std	Y+4, r24	; 0x04
    114c:	1a 83       	std	Y+2, r17	; 0x02
    114e:	09 83       	std	Y+1, r16	; 0x01
    1150:	8f ef       	ldi	r24, 0xFF	; 255
    1152:	9f e7       	ldi	r25, 0x7F	; 127
    1154:	9e 83       	std	Y+6, r25	; 0x06
    1156:	8d 83       	std	Y+5, r24	; 0x05
    1158:	ae 01       	movw	r20, r28
    115a:	47 5e       	subi	r20, 0xE7	; 231
    115c:	5f 4f       	sbci	r21, 0xFF	; 255
    115e:	6f 89       	ldd	r22, Y+23	; 0x17
    1160:	78 8d       	ldd	r23, Y+24	; 0x18
    1162:	ce 01       	movw	r24, r28
    1164:	01 96       	adiw	r24, 0x01	; 1
    1166:	0e 94 be 08 	call	0x117c	; 0x117c <vfprintf>
    116a:	ef 81       	ldd	r30, Y+7	; 0x07
    116c:	f8 85       	ldd	r31, Y+8	; 0x08
    116e:	e0 0f       	add	r30, r16
    1170:	f1 1f       	adc	r31, r17
    1172:	10 82       	st	Z, r1
    1174:	2e 96       	adiw	r28, 0x0e	; 14
    1176:	e4 e0       	ldi	r30, 0x04	; 4
    1178:	0c 94 79 0b 	jmp	0x16f2	; 0x16f2 <__epilogue_restores__+0x1c>

0000117c <vfprintf>:
    117c:	ab e0       	ldi	r26, 0x0B	; 11
    117e:	b0 e0       	ldi	r27, 0x00	; 0
    1180:	e4 ec       	ldi	r30, 0xC4	; 196
    1182:	f8 e0       	ldi	r31, 0x08	; 8
    1184:	0c 94 4f 0b 	jmp	0x169e	; 0x169e <__prologue_saves__>
    1188:	6c 01       	movw	r12, r24
    118a:	7b 01       	movw	r14, r22
    118c:	8a 01       	movw	r16, r20
    118e:	fc 01       	movw	r30, r24
    1190:	17 82       	std	Z+7, r1	; 0x07
    1192:	16 82       	std	Z+6, r1	; 0x06
    1194:	83 81       	ldd	r24, Z+3	; 0x03
    1196:	81 ff       	sbrs	r24, 1
    1198:	cc c1       	rjmp	.+920    	; 0x1532 <vfprintf+0x3b6>
    119a:	ce 01       	movw	r24, r28
    119c:	01 96       	adiw	r24, 0x01	; 1
    119e:	3c 01       	movw	r6, r24
    11a0:	f6 01       	movw	r30, r12
    11a2:	93 81       	ldd	r25, Z+3	; 0x03
    11a4:	f7 01       	movw	r30, r14
    11a6:	93 fd       	sbrc	r25, 3
    11a8:	85 91       	lpm	r24, Z+
    11aa:	93 ff       	sbrs	r25, 3
    11ac:	81 91       	ld	r24, Z+
    11ae:	7f 01       	movw	r14, r30
    11b0:	88 23       	and	r24, r24
    11b2:	09 f4       	brne	.+2      	; 0x11b6 <vfprintf+0x3a>
    11b4:	ba c1       	rjmp	.+884    	; 0x152a <vfprintf+0x3ae>
    11b6:	85 32       	cpi	r24, 0x25	; 37
    11b8:	39 f4       	brne	.+14     	; 0x11c8 <vfprintf+0x4c>
    11ba:	93 fd       	sbrc	r25, 3
    11bc:	85 91       	lpm	r24, Z+
    11be:	93 ff       	sbrs	r25, 3
    11c0:	81 91       	ld	r24, Z+
    11c2:	7f 01       	movw	r14, r30
    11c4:	85 32       	cpi	r24, 0x25	; 37
    11c6:	29 f4       	brne	.+10     	; 0x11d2 <vfprintf+0x56>
    11c8:	b6 01       	movw	r22, r12
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	0e 94 b5 0a 	call	0x156a	; 0x156a <fputc>
    11d0:	e7 cf       	rjmp	.-50     	; 0x11a0 <vfprintf+0x24>
    11d2:	91 2c       	mov	r9, r1
    11d4:	21 2c       	mov	r2, r1
    11d6:	31 2c       	mov	r3, r1
    11d8:	ff e1       	ldi	r31, 0x1F	; 31
    11da:	f3 15       	cp	r31, r3
    11dc:	d8 f0       	brcs	.+54     	; 0x1214 <vfprintf+0x98>
    11de:	8b 32       	cpi	r24, 0x2B	; 43
    11e0:	79 f0       	breq	.+30     	; 0x1200 <vfprintf+0x84>
    11e2:	38 f4       	brcc	.+14     	; 0x11f2 <vfprintf+0x76>
    11e4:	80 32       	cpi	r24, 0x20	; 32
    11e6:	79 f0       	breq	.+30     	; 0x1206 <vfprintf+0x8a>
    11e8:	83 32       	cpi	r24, 0x23	; 35
    11ea:	a1 f4       	brne	.+40     	; 0x1214 <vfprintf+0x98>
    11ec:	23 2d       	mov	r18, r3
    11ee:	20 61       	ori	r18, 0x10	; 16
    11f0:	1d c0       	rjmp	.+58     	; 0x122c <vfprintf+0xb0>
    11f2:	8d 32       	cpi	r24, 0x2D	; 45
    11f4:	61 f0       	breq	.+24     	; 0x120e <vfprintf+0x92>
    11f6:	80 33       	cpi	r24, 0x30	; 48
    11f8:	69 f4       	brne	.+26     	; 0x1214 <vfprintf+0x98>
    11fa:	23 2d       	mov	r18, r3
    11fc:	21 60       	ori	r18, 0x01	; 1
    11fe:	16 c0       	rjmp	.+44     	; 0x122c <vfprintf+0xb0>
    1200:	83 2d       	mov	r24, r3
    1202:	82 60       	ori	r24, 0x02	; 2
    1204:	38 2e       	mov	r3, r24
    1206:	e3 2d       	mov	r30, r3
    1208:	e4 60       	ori	r30, 0x04	; 4
    120a:	3e 2e       	mov	r3, r30
    120c:	2a c0       	rjmp	.+84     	; 0x1262 <vfprintf+0xe6>
    120e:	f3 2d       	mov	r31, r3
    1210:	f8 60       	ori	r31, 0x08	; 8
    1212:	1d c0       	rjmp	.+58     	; 0x124e <vfprintf+0xd2>
    1214:	37 fc       	sbrc	r3, 7
    1216:	2d c0       	rjmp	.+90     	; 0x1272 <vfprintf+0xf6>
    1218:	20 ed       	ldi	r18, 0xD0	; 208
    121a:	28 0f       	add	r18, r24
    121c:	2a 30       	cpi	r18, 0x0A	; 10
    121e:	40 f0       	brcs	.+16     	; 0x1230 <vfprintf+0xb4>
    1220:	8e 32       	cpi	r24, 0x2E	; 46
    1222:	b9 f4       	brne	.+46     	; 0x1252 <vfprintf+0xd6>
    1224:	36 fc       	sbrc	r3, 6
    1226:	81 c1       	rjmp	.+770    	; 0x152a <vfprintf+0x3ae>
    1228:	23 2d       	mov	r18, r3
    122a:	20 64       	ori	r18, 0x40	; 64
    122c:	32 2e       	mov	r3, r18
    122e:	19 c0       	rjmp	.+50     	; 0x1262 <vfprintf+0xe6>
    1230:	36 fe       	sbrs	r3, 6
    1232:	06 c0       	rjmp	.+12     	; 0x1240 <vfprintf+0xc4>
    1234:	8a e0       	ldi	r24, 0x0A	; 10
    1236:	98 9e       	mul	r9, r24
    1238:	20 0d       	add	r18, r0
    123a:	11 24       	eor	r1, r1
    123c:	92 2e       	mov	r9, r18
    123e:	11 c0       	rjmp	.+34     	; 0x1262 <vfprintf+0xe6>
    1240:	ea e0       	ldi	r30, 0x0A	; 10
    1242:	2e 9e       	mul	r2, r30
    1244:	20 0d       	add	r18, r0
    1246:	11 24       	eor	r1, r1
    1248:	22 2e       	mov	r2, r18
    124a:	f3 2d       	mov	r31, r3
    124c:	f0 62       	ori	r31, 0x20	; 32
    124e:	3f 2e       	mov	r3, r31
    1250:	08 c0       	rjmp	.+16     	; 0x1262 <vfprintf+0xe6>
    1252:	8c 36       	cpi	r24, 0x6C	; 108
    1254:	21 f4       	brne	.+8      	; 0x125e <vfprintf+0xe2>
    1256:	83 2d       	mov	r24, r3
    1258:	80 68       	ori	r24, 0x80	; 128
    125a:	38 2e       	mov	r3, r24
    125c:	02 c0       	rjmp	.+4      	; 0x1262 <vfprintf+0xe6>
    125e:	88 36       	cpi	r24, 0x68	; 104
    1260:	41 f4       	brne	.+16     	; 0x1272 <vfprintf+0xf6>
    1262:	f7 01       	movw	r30, r14
    1264:	93 fd       	sbrc	r25, 3
    1266:	85 91       	lpm	r24, Z+
    1268:	93 ff       	sbrs	r25, 3
    126a:	81 91       	ld	r24, Z+
    126c:	7f 01       	movw	r14, r30
    126e:	81 11       	cpse	r24, r1
    1270:	b3 cf       	rjmp	.-154    	; 0x11d8 <vfprintf+0x5c>
    1272:	98 2f       	mov	r25, r24
    1274:	9f 7d       	andi	r25, 0xDF	; 223
    1276:	95 54       	subi	r25, 0x45	; 69
    1278:	93 30       	cpi	r25, 0x03	; 3
    127a:	28 f4       	brcc	.+10     	; 0x1286 <vfprintf+0x10a>
    127c:	0c 5f       	subi	r16, 0xFC	; 252
    127e:	1f 4f       	sbci	r17, 0xFF	; 255
    1280:	9f e3       	ldi	r25, 0x3F	; 63
    1282:	99 83       	std	Y+1, r25	; 0x01
    1284:	0d c0       	rjmp	.+26     	; 0x12a0 <vfprintf+0x124>
    1286:	83 36       	cpi	r24, 0x63	; 99
    1288:	31 f0       	breq	.+12     	; 0x1296 <vfprintf+0x11a>
    128a:	83 37       	cpi	r24, 0x73	; 115
    128c:	71 f0       	breq	.+28     	; 0x12aa <vfprintf+0x12e>
    128e:	83 35       	cpi	r24, 0x53	; 83
    1290:	09 f0       	breq	.+2      	; 0x1294 <vfprintf+0x118>
    1292:	59 c0       	rjmp	.+178    	; 0x1346 <vfprintf+0x1ca>
    1294:	21 c0       	rjmp	.+66     	; 0x12d8 <vfprintf+0x15c>
    1296:	f8 01       	movw	r30, r16
    1298:	80 81       	ld	r24, Z
    129a:	89 83       	std	Y+1, r24	; 0x01
    129c:	0e 5f       	subi	r16, 0xFE	; 254
    129e:	1f 4f       	sbci	r17, 0xFF	; 255
    12a0:	88 24       	eor	r8, r8
    12a2:	83 94       	inc	r8
    12a4:	91 2c       	mov	r9, r1
    12a6:	53 01       	movw	r10, r6
    12a8:	13 c0       	rjmp	.+38     	; 0x12d0 <vfprintf+0x154>
    12aa:	28 01       	movw	r4, r16
    12ac:	f2 e0       	ldi	r31, 0x02	; 2
    12ae:	4f 0e       	add	r4, r31
    12b0:	51 1c       	adc	r5, r1
    12b2:	f8 01       	movw	r30, r16
    12b4:	a0 80       	ld	r10, Z
    12b6:	b1 80       	ldd	r11, Z+1	; 0x01
    12b8:	36 fe       	sbrs	r3, 6
    12ba:	03 c0       	rjmp	.+6      	; 0x12c2 <vfprintf+0x146>
    12bc:	69 2d       	mov	r22, r9
    12be:	70 e0       	ldi	r23, 0x00	; 0
    12c0:	02 c0       	rjmp	.+4      	; 0x12c6 <vfprintf+0x14a>
    12c2:	6f ef       	ldi	r22, 0xFF	; 255
    12c4:	7f ef       	ldi	r23, 0xFF	; 255
    12c6:	c5 01       	movw	r24, r10
    12c8:	0e 94 aa 0a 	call	0x1554	; 0x1554 <strnlen>
    12cc:	4c 01       	movw	r8, r24
    12ce:	82 01       	movw	r16, r4
    12d0:	f3 2d       	mov	r31, r3
    12d2:	ff 77       	andi	r31, 0x7F	; 127
    12d4:	3f 2e       	mov	r3, r31
    12d6:	16 c0       	rjmp	.+44     	; 0x1304 <vfprintf+0x188>
    12d8:	28 01       	movw	r4, r16
    12da:	22 e0       	ldi	r18, 0x02	; 2
    12dc:	42 0e       	add	r4, r18
    12de:	51 1c       	adc	r5, r1
    12e0:	f8 01       	movw	r30, r16
    12e2:	a0 80       	ld	r10, Z
    12e4:	b1 80       	ldd	r11, Z+1	; 0x01
    12e6:	36 fe       	sbrs	r3, 6
    12e8:	03 c0       	rjmp	.+6      	; 0x12f0 <vfprintf+0x174>
    12ea:	69 2d       	mov	r22, r9
    12ec:	70 e0       	ldi	r23, 0x00	; 0
    12ee:	02 c0       	rjmp	.+4      	; 0x12f4 <vfprintf+0x178>
    12f0:	6f ef       	ldi	r22, 0xFF	; 255
    12f2:	7f ef       	ldi	r23, 0xFF	; 255
    12f4:	c5 01       	movw	r24, r10
    12f6:	0e 94 9f 0a 	call	0x153e	; 0x153e <strnlen_P>
    12fa:	4c 01       	movw	r8, r24
    12fc:	f3 2d       	mov	r31, r3
    12fe:	f0 68       	ori	r31, 0x80	; 128
    1300:	3f 2e       	mov	r3, r31
    1302:	82 01       	movw	r16, r4
    1304:	33 fc       	sbrc	r3, 3
    1306:	1b c0       	rjmp	.+54     	; 0x133e <vfprintf+0x1c2>
    1308:	82 2d       	mov	r24, r2
    130a:	90 e0       	ldi	r25, 0x00	; 0
    130c:	88 16       	cp	r8, r24
    130e:	99 06       	cpc	r9, r25
    1310:	b0 f4       	brcc	.+44     	; 0x133e <vfprintf+0x1c2>
    1312:	b6 01       	movw	r22, r12
    1314:	80 e2       	ldi	r24, 0x20	; 32
    1316:	90 e0       	ldi	r25, 0x00	; 0
    1318:	0e 94 b5 0a 	call	0x156a	; 0x156a <fputc>
    131c:	2a 94       	dec	r2
    131e:	f4 cf       	rjmp	.-24     	; 0x1308 <vfprintf+0x18c>
    1320:	f5 01       	movw	r30, r10
    1322:	37 fc       	sbrc	r3, 7
    1324:	85 91       	lpm	r24, Z+
    1326:	37 fe       	sbrs	r3, 7
    1328:	81 91       	ld	r24, Z+
    132a:	5f 01       	movw	r10, r30
    132c:	b6 01       	movw	r22, r12
    132e:	90 e0       	ldi	r25, 0x00	; 0
    1330:	0e 94 b5 0a 	call	0x156a	; 0x156a <fputc>
    1334:	21 10       	cpse	r2, r1
    1336:	2a 94       	dec	r2
    1338:	21 e0       	ldi	r18, 0x01	; 1
    133a:	82 1a       	sub	r8, r18
    133c:	91 08       	sbc	r9, r1
    133e:	81 14       	cp	r8, r1
    1340:	91 04       	cpc	r9, r1
    1342:	71 f7       	brne	.-36     	; 0x1320 <vfprintf+0x1a4>
    1344:	e8 c0       	rjmp	.+464    	; 0x1516 <vfprintf+0x39a>
    1346:	84 36       	cpi	r24, 0x64	; 100
    1348:	11 f0       	breq	.+4      	; 0x134e <vfprintf+0x1d2>
    134a:	89 36       	cpi	r24, 0x69	; 105
    134c:	41 f5       	brne	.+80     	; 0x139e <vfprintf+0x222>
    134e:	f8 01       	movw	r30, r16
    1350:	37 fe       	sbrs	r3, 7
    1352:	07 c0       	rjmp	.+14     	; 0x1362 <vfprintf+0x1e6>
    1354:	60 81       	ld	r22, Z
    1356:	71 81       	ldd	r23, Z+1	; 0x01
    1358:	82 81       	ldd	r24, Z+2	; 0x02
    135a:	93 81       	ldd	r25, Z+3	; 0x03
    135c:	0c 5f       	subi	r16, 0xFC	; 252
    135e:	1f 4f       	sbci	r17, 0xFF	; 255
    1360:	08 c0       	rjmp	.+16     	; 0x1372 <vfprintf+0x1f6>
    1362:	60 81       	ld	r22, Z
    1364:	71 81       	ldd	r23, Z+1	; 0x01
    1366:	07 2e       	mov	r0, r23
    1368:	00 0c       	add	r0, r0
    136a:	88 0b       	sbc	r24, r24
    136c:	99 0b       	sbc	r25, r25
    136e:	0e 5f       	subi	r16, 0xFE	; 254
    1370:	1f 4f       	sbci	r17, 0xFF	; 255
    1372:	f3 2d       	mov	r31, r3
    1374:	ff 76       	andi	r31, 0x6F	; 111
    1376:	3f 2e       	mov	r3, r31
    1378:	97 ff       	sbrs	r25, 7
    137a:	09 c0       	rjmp	.+18     	; 0x138e <vfprintf+0x212>
    137c:	90 95       	com	r25
    137e:	80 95       	com	r24
    1380:	70 95       	com	r23
    1382:	61 95       	neg	r22
    1384:	7f 4f       	sbci	r23, 0xFF	; 255
    1386:	8f 4f       	sbci	r24, 0xFF	; 255
    1388:	9f 4f       	sbci	r25, 0xFF	; 255
    138a:	f0 68       	ori	r31, 0x80	; 128
    138c:	3f 2e       	mov	r3, r31
    138e:	2a e0       	ldi	r18, 0x0A	; 10
    1390:	30 e0       	ldi	r19, 0x00	; 0
    1392:	a3 01       	movw	r20, r6
    1394:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__ultoa_invert>
    1398:	88 2e       	mov	r8, r24
    139a:	86 18       	sub	r8, r6
    139c:	45 c0       	rjmp	.+138    	; 0x1428 <vfprintf+0x2ac>
    139e:	85 37       	cpi	r24, 0x75	; 117
    13a0:	31 f4       	brne	.+12     	; 0x13ae <vfprintf+0x232>
    13a2:	23 2d       	mov	r18, r3
    13a4:	2f 7e       	andi	r18, 0xEF	; 239
    13a6:	b2 2e       	mov	r11, r18
    13a8:	2a e0       	ldi	r18, 0x0A	; 10
    13aa:	30 e0       	ldi	r19, 0x00	; 0
    13ac:	25 c0       	rjmp	.+74     	; 0x13f8 <vfprintf+0x27c>
    13ae:	93 2d       	mov	r25, r3
    13b0:	99 7f       	andi	r25, 0xF9	; 249
    13b2:	b9 2e       	mov	r11, r25
    13b4:	8f 36       	cpi	r24, 0x6F	; 111
    13b6:	c1 f0       	breq	.+48     	; 0x13e8 <vfprintf+0x26c>
    13b8:	18 f4       	brcc	.+6      	; 0x13c0 <vfprintf+0x244>
    13ba:	88 35       	cpi	r24, 0x58	; 88
    13bc:	79 f0       	breq	.+30     	; 0x13dc <vfprintf+0x260>
    13be:	b5 c0       	rjmp	.+362    	; 0x152a <vfprintf+0x3ae>
    13c0:	80 37       	cpi	r24, 0x70	; 112
    13c2:	19 f0       	breq	.+6      	; 0x13ca <vfprintf+0x24e>
    13c4:	88 37       	cpi	r24, 0x78	; 120
    13c6:	21 f0       	breq	.+8      	; 0x13d0 <vfprintf+0x254>
    13c8:	b0 c0       	rjmp	.+352    	; 0x152a <vfprintf+0x3ae>
    13ca:	e9 2f       	mov	r30, r25
    13cc:	e0 61       	ori	r30, 0x10	; 16
    13ce:	be 2e       	mov	r11, r30
    13d0:	b4 fe       	sbrs	r11, 4
    13d2:	0d c0       	rjmp	.+26     	; 0x13ee <vfprintf+0x272>
    13d4:	fb 2d       	mov	r31, r11
    13d6:	f4 60       	ori	r31, 0x04	; 4
    13d8:	bf 2e       	mov	r11, r31
    13da:	09 c0       	rjmp	.+18     	; 0x13ee <vfprintf+0x272>
    13dc:	34 fe       	sbrs	r3, 4
    13de:	0a c0       	rjmp	.+20     	; 0x13f4 <vfprintf+0x278>
    13e0:	29 2f       	mov	r18, r25
    13e2:	26 60       	ori	r18, 0x06	; 6
    13e4:	b2 2e       	mov	r11, r18
    13e6:	06 c0       	rjmp	.+12     	; 0x13f4 <vfprintf+0x278>
    13e8:	28 e0       	ldi	r18, 0x08	; 8
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	05 c0       	rjmp	.+10     	; 0x13f8 <vfprintf+0x27c>
    13ee:	20 e1       	ldi	r18, 0x10	; 16
    13f0:	30 e0       	ldi	r19, 0x00	; 0
    13f2:	02 c0       	rjmp	.+4      	; 0x13f8 <vfprintf+0x27c>
    13f4:	20 e1       	ldi	r18, 0x10	; 16
    13f6:	32 e0       	ldi	r19, 0x02	; 2
    13f8:	f8 01       	movw	r30, r16
    13fa:	b7 fe       	sbrs	r11, 7
    13fc:	07 c0       	rjmp	.+14     	; 0x140c <vfprintf+0x290>
    13fe:	60 81       	ld	r22, Z
    1400:	71 81       	ldd	r23, Z+1	; 0x01
    1402:	82 81       	ldd	r24, Z+2	; 0x02
    1404:	93 81       	ldd	r25, Z+3	; 0x03
    1406:	0c 5f       	subi	r16, 0xFC	; 252
    1408:	1f 4f       	sbci	r17, 0xFF	; 255
    140a:	06 c0       	rjmp	.+12     	; 0x1418 <vfprintf+0x29c>
    140c:	60 81       	ld	r22, Z
    140e:	71 81       	ldd	r23, Z+1	; 0x01
    1410:	80 e0       	ldi	r24, 0x00	; 0
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	0e 5f       	subi	r16, 0xFE	; 254
    1416:	1f 4f       	sbci	r17, 0xFF	; 255
    1418:	a3 01       	movw	r20, r6
    141a:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <__ultoa_invert>
    141e:	88 2e       	mov	r8, r24
    1420:	86 18       	sub	r8, r6
    1422:	fb 2d       	mov	r31, r11
    1424:	ff 77       	andi	r31, 0x7F	; 127
    1426:	3f 2e       	mov	r3, r31
    1428:	36 fe       	sbrs	r3, 6
    142a:	0d c0       	rjmp	.+26     	; 0x1446 <vfprintf+0x2ca>
    142c:	23 2d       	mov	r18, r3
    142e:	2e 7f       	andi	r18, 0xFE	; 254
    1430:	a2 2e       	mov	r10, r18
    1432:	89 14       	cp	r8, r9
    1434:	58 f4       	brcc	.+22     	; 0x144c <vfprintf+0x2d0>
    1436:	34 fe       	sbrs	r3, 4
    1438:	0b c0       	rjmp	.+22     	; 0x1450 <vfprintf+0x2d4>
    143a:	32 fc       	sbrc	r3, 2
    143c:	09 c0       	rjmp	.+18     	; 0x1450 <vfprintf+0x2d4>
    143e:	83 2d       	mov	r24, r3
    1440:	8e 7e       	andi	r24, 0xEE	; 238
    1442:	a8 2e       	mov	r10, r24
    1444:	05 c0       	rjmp	.+10     	; 0x1450 <vfprintf+0x2d4>
    1446:	b8 2c       	mov	r11, r8
    1448:	a3 2c       	mov	r10, r3
    144a:	03 c0       	rjmp	.+6      	; 0x1452 <vfprintf+0x2d6>
    144c:	b8 2c       	mov	r11, r8
    144e:	01 c0       	rjmp	.+2      	; 0x1452 <vfprintf+0x2d6>
    1450:	b9 2c       	mov	r11, r9
    1452:	a4 fe       	sbrs	r10, 4
    1454:	0f c0       	rjmp	.+30     	; 0x1474 <vfprintf+0x2f8>
    1456:	fe 01       	movw	r30, r28
    1458:	e8 0d       	add	r30, r8
    145a:	f1 1d       	adc	r31, r1
    145c:	80 81       	ld	r24, Z
    145e:	80 33       	cpi	r24, 0x30	; 48
    1460:	21 f4       	brne	.+8      	; 0x146a <vfprintf+0x2ee>
    1462:	9a 2d       	mov	r25, r10
    1464:	99 7e       	andi	r25, 0xE9	; 233
    1466:	a9 2e       	mov	r10, r25
    1468:	09 c0       	rjmp	.+18     	; 0x147c <vfprintf+0x300>
    146a:	a2 fe       	sbrs	r10, 2
    146c:	06 c0       	rjmp	.+12     	; 0x147a <vfprintf+0x2fe>
    146e:	b3 94       	inc	r11
    1470:	b3 94       	inc	r11
    1472:	04 c0       	rjmp	.+8      	; 0x147c <vfprintf+0x300>
    1474:	8a 2d       	mov	r24, r10
    1476:	86 78       	andi	r24, 0x86	; 134
    1478:	09 f0       	breq	.+2      	; 0x147c <vfprintf+0x300>
    147a:	b3 94       	inc	r11
    147c:	a3 fc       	sbrc	r10, 3
    147e:	11 c0       	rjmp	.+34     	; 0x14a2 <vfprintf+0x326>
    1480:	a0 fe       	sbrs	r10, 0
    1482:	06 c0       	rjmp	.+12     	; 0x1490 <vfprintf+0x314>
    1484:	b2 14       	cp	r11, r2
    1486:	88 f4       	brcc	.+34     	; 0x14aa <vfprintf+0x32e>
    1488:	28 0c       	add	r2, r8
    148a:	92 2c       	mov	r9, r2
    148c:	9b 18       	sub	r9, r11
    148e:	0e c0       	rjmp	.+28     	; 0x14ac <vfprintf+0x330>
    1490:	b2 14       	cp	r11, r2
    1492:	60 f4       	brcc	.+24     	; 0x14ac <vfprintf+0x330>
    1494:	b6 01       	movw	r22, r12
    1496:	80 e2       	ldi	r24, 0x20	; 32
    1498:	90 e0       	ldi	r25, 0x00	; 0
    149a:	0e 94 b5 0a 	call	0x156a	; 0x156a <fputc>
    149e:	b3 94       	inc	r11
    14a0:	f7 cf       	rjmp	.-18     	; 0x1490 <vfprintf+0x314>
    14a2:	b2 14       	cp	r11, r2
    14a4:	18 f4       	brcc	.+6      	; 0x14ac <vfprintf+0x330>
    14a6:	2b 18       	sub	r2, r11
    14a8:	02 c0       	rjmp	.+4      	; 0x14ae <vfprintf+0x332>
    14aa:	98 2c       	mov	r9, r8
    14ac:	21 2c       	mov	r2, r1
    14ae:	a4 fe       	sbrs	r10, 4
    14b0:	10 c0       	rjmp	.+32     	; 0x14d2 <vfprintf+0x356>
    14b2:	b6 01       	movw	r22, r12
    14b4:	80 e3       	ldi	r24, 0x30	; 48
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	0e 94 b5 0a 	call	0x156a	; 0x156a <fputc>
    14bc:	a2 fe       	sbrs	r10, 2
    14be:	17 c0       	rjmp	.+46     	; 0x14ee <vfprintf+0x372>
    14c0:	a1 fc       	sbrc	r10, 1
    14c2:	03 c0       	rjmp	.+6      	; 0x14ca <vfprintf+0x34e>
    14c4:	88 e7       	ldi	r24, 0x78	; 120
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	02 c0       	rjmp	.+4      	; 0x14ce <vfprintf+0x352>
    14ca:	88 e5       	ldi	r24, 0x58	; 88
    14cc:	90 e0       	ldi	r25, 0x00	; 0
    14ce:	b6 01       	movw	r22, r12
    14d0:	0c c0       	rjmp	.+24     	; 0x14ea <vfprintf+0x36e>
    14d2:	8a 2d       	mov	r24, r10
    14d4:	86 78       	andi	r24, 0x86	; 134
    14d6:	59 f0       	breq	.+22     	; 0x14ee <vfprintf+0x372>
    14d8:	a1 fe       	sbrs	r10, 1
    14da:	02 c0       	rjmp	.+4      	; 0x14e0 <vfprintf+0x364>
    14dc:	8b e2       	ldi	r24, 0x2B	; 43
    14de:	01 c0       	rjmp	.+2      	; 0x14e2 <vfprintf+0x366>
    14e0:	80 e2       	ldi	r24, 0x20	; 32
    14e2:	a7 fc       	sbrc	r10, 7
    14e4:	8d e2       	ldi	r24, 0x2D	; 45
    14e6:	b6 01       	movw	r22, r12
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	0e 94 b5 0a 	call	0x156a	; 0x156a <fputc>
    14ee:	89 14       	cp	r8, r9
    14f0:	38 f4       	brcc	.+14     	; 0x1500 <vfprintf+0x384>
    14f2:	b6 01       	movw	r22, r12
    14f4:	80 e3       	ldi	r24, 0x30	; 48
    14f6:	90 e0       	ldi	r25, 0x00	; 0
    14f8:	0e 94 b5 0a 	call	0x156a	; 0x156a <fputc>
    14fc:	9a 94       	dec	r9
    14fe:	f7 cf       	rjmp	.-18     	; 0x14ee <vfprintf+0x372>
    1500:	8a 94       	dec	r8
    1502:	f3 01       	movw	r30, r6
    1504:	e8 0d       	add	r30, r8
    1506:	f1 1d       	adc	r31, r1
    1508:	80 81       	ld	r24, Z
    150a:	b6 01       	movw	r22, r12
    150c:	90 e0       	ldi	r25, 0x00	; 0
    150e:	0e 94 b5 0a 	call	0x156a	; 0x156a <fputc>
    1512:	81 10       	cpse	r8, r1
    1514:	f5 cf       	rjmp	.-22     	; 0x1500 <vfprintf+0x384>
    1516:	22 20       	and	r2, r2
    1518:	09 f4       	brne	.+2      	; 0x151c <vfprintf+0x3a0>
    151a:	42 ce       	rjmp	.-892    	; 0x11a0 <vfprintf+0x24>
    151c:	b6 01       	movw	r22, r12
    151e:	80 e2       	ldi	r24, 0x20	; 32
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	0e 94 b5 0a 	call	0x156a	; 0x156a <fputc>
    1526:	2a 94       	dec	r2
    1528:	f6 cf       	rjmp	.-20     	; 0x1516 <vfprintf+0x39a>
    152a:	f6 01       	movw	r30, r12
    152c:	86 81       	ldd	r24, Z+6	; 0x06
    152e:	97 81       	ldd	r25, Z+7	; 0x07
    1530:	02 c0       	rjmp	.+4      	; 0x1536 <vfprintf+0x3ba>
    1532:	8f ef       	ldi	r24, 0xFF	; 255
    1534:	9f ef       	ldi	r25, 0xFF	; 255
    1536:	2b 96       	adiw	r28, 0x0b	; 11
    1538:	e2 e1       	ldi	r30, 0x12	; 18
    153a:	0c 94 6b 0b 	jmp	0x16d6	; 0x16d6 <__epilogue_restores__>

0000153e <strnlen_P>:
    153e:	fc 01       	movw	r30, r24
    1540:	05 90       	lpm	r0, Z+
    1542:	61 50       	subi	r22, 0x01	; 1
    1544:	70 40       	sbci	r23, 0x00	; 0
    1546:	01 10       	cpse	r0, r1
    1548:	d8 f7       	brcc	.-10     	; 0x1540 <strnlen_P+0x2>
    154a:	80 95       	com	r24
    154c:	90 95       	com	r25
    154e:	8e 0f       	add	r24, r30
    1550:	9f 1f       	adc	r25, r31
    1552:	08 95       	ret

00001554 <strnlen>:
    1554:	fc 01       	movw	r30, r24
    1556:	61 50       	subi	r22, 0x01	; 1
    1558:	70 40       	sbci	r23, 0x00	; 0
    155a:	01 90       	ld	r0, Z+
    155c:	01 10       	cpse	r0, r1
    155e:	d8 f7       	brcc	.-10     	; 0x1556 <strnlen+0x2>
    1560:	80 95       	com	r24
    1562:	90 95       	com	r25
    1564:	8e 0f       	add	r24, r30
    1566:	9f 1f       	adc	r25, r31
    1568:	08 95       	ret

0000156a <fputc>:
    156a:	0f 93       	push	r16
    156c:	1f 93       	push	r17
    156e:	cf 93       	push	r28
    1570:	df 93       	push	r29
    1572:	fb 01       	movw	r30, r22
    1574:	23 81       	ldd	r18, Z+3	; 0x03
    1576:	21 fd       	sbrc	r18, 1
    1578:	03 c0       	rjmp	.+6      	; 0x1580 <fputc+0x16>
    157a:	8f ef       	ldi	r24, 0xFF	; 255
    157c:	9f ef       	ldi	r25, 0xFF	; 255
    157e:	2c c0       	rjmp	.+88     	; 0x15d8 <fputc+0x6e>
    1580:	22 ff       	sbrs	r18, 2
    1582:	16 c0       	rjmp	.+44     	; 0x15b0 <fputc+0x46>
    1584:	46 81       	ldd	r20, Z+6	; 0x06
    1586:	57 81       	ldd	r21, Z+7	; 0x07
    1588:	24 81       	ldd	r18, Z+4	; 0x04
    158a:	35 81       	ldd	r19, Z+5	; 0x05
    158c:	42 17       	cp	r20, r18
    158e:	53 07       	cpc	r21, r19
    1590:	44 f4       	brge	.+16     	; 0x15a2 <fputc+0x38>
    1592:	a0 81       	ld	r26, Z
    1594:	b1 81       	ldd	r27, Z+1	; 0x01
    1596:	9d 01       	movw	r18, r26
    1598:	2f 5f       	subi	r18, 0xFF	; 255
    159a:	3f 4f       	sbci	r19, 0xFF	; 255
    159c:	31 83       	std	Z+1, r19	; 0x01
    159e:	20 83       	st	Z, r18
    15a0:	8c 93       	st	X, r24
    15a2:	26 81       	ldd	r18, Z+6	; 0x06
    15a4:	37 81       	ldd	r19, Z+7	; 0x07
    15a6:	2f 5f       	subi	r18, 0xFF	; 255
    15a8:	3f 4f       	sbci	r19, 0xFF	; 255
    15aa:	37 83       	std	Z+7, r19	; 0x07
    15ac:	26 83       	std	Z+6, r18	; 0x06
    15ae:	14 c0       	rjmp	.+40     	; 0x15d8 <fputc+0x6e>
    15b0:	8b 01       	movw	r16, r22
    15b2:	ec 01       	movw	r28, r24
    15b4:	fb 01       	movw	r30, r22
    15b6:	00 84       	ldd	r0, Z+8	; 0x08
    15b8:	f1 85       	ldd	r31, Z+9	; 0x09
    15ba:	e0 2d       	mov	r30, r0
    15bc:	09 95       	icall
    15be:	89 2b       	or	r24, r25
    15c0:	e1 f6       	brne	.-72     	; 0x157a <fputc+0x10>
    15c2:	d8 01       	movw	r26, r16
    15c4:	16 96       	adiw	r26, 0x06	; 6
    15c6:	8d 91       	ld	r24, X+
    15c8:	9c 91       	ld	r25, X
    15ca:	17 97       	sbiw	r26, 0x07	; 7
    15cc:	01 96       	adiw	r24, 0x01	; 1
    15ce:	17 96       	adiw	r26, 0x07	; 7
    15d0:	9c 93       	st	X, r25
    15d2:	8e 93       	st	-X, r24
    15d4:	16 97       	sbiw	r26, 0x06	; 6
    15d6:	ce 01       	movw	r24, r28
    15d8:	df 91       	pop	r29
    15da:	cf 91       	pop	r28
    15dc:	1f 91       	pop	r17
    15de:	0f 91       	pop	r16
    15e0:	08 95       	ret

000015e2 <__ultoa_invert>:
    15e2:	fa 01       	movw	r30, r20
    15e4:	aa 27       	eor	r26, r26
    15e6:	28 30       	cpi	r18, 0x08	; 8
    15e8:	51 f1       	breq	.+84     	; 0x163e <__ultoa_invert+0x5c>
    15ea:	20 31       	cpi	r18, 0x10	; 16
    15ec:	81 f1       	breq	.+96     	; 0x164e <__ultoa_invert+0x6c>
    15ee:	e8 94       	clt
    15f0:	6f 93       	push	r22
    15f2:	6e 7f       	andi	r22, 0xFE	; 254
    15f4:	6e 5f       	subi	r22, 0xFE	; 254
    15f6:	7f 4f       	sbci	r23, 0xFF	; 255
    15f8:	8f 4f       	sbci	r24, 0xFF	; 255
    15fa:	9f 4f       	sbci	r25, 0xFF	; 255
    15fc:	af 4f       	sbci	r26, 0xFF	; 255
    15fe:	b1 e0       	ldi	r27, 0x01	; 1
    1600:	3e d0       	rcall	.+124    	; 0x167e <__ultoa_invert+0x9c>
    1602:	b4 e0       	ldi	r27, 0x04	; 4
    1604:	3c d0       	rcall	.+120    	; 0x167e <__ultoa_invert+0x9c>
    1606:	67 0f       	add	r22, r23
    1608:	78 1f       	adc	r23, r24
    160a:	89 1f       	adc	r24, r25
    160c:	9a 1f       	adc	r25, r26
    160e:	a1 1d       	adc	r26, r1
    1610:	68 0f       	add	r22, r24
    1612:	79 1f       	adc	r23, r25
    1614:	8a 1f       	adc	r24, r26
    1616:	91 1d       	adc	r25, r1
    1618:	a1 1d       	adc	r26, r1
    161a:	6a 0f       	add	r22, r26
    161c:	71 1d       	adc	r23, r1
    161e:	81 1d       	adc	r24, r1
    1620:	91 1d       	adc	r25, r1
    1622:	a1 1d       	adc	r26, r1
    1624:	20 d0       	rcall	.+64     	; 0x1666 <__ultoa_invert+0x84>
    1626:	09 f4       	brne	.+2      	; 0x162a <__ultoa_invert+0x48>
    1628:	68 94       	set
    162a:	3f 91       	pop	r19
    162c:	2a e0       	ldi	r18, 0x0A	; 10
    162e:	26 9f       	mul	r18, r22
    1630:	11 24       	eor	r1, r1
    1632:	30 19       	sub	r19, r0
    1634:	30 5d       	subi	r19, 0xD0	; 208
    1636:	31 93       	st	Z+, r19
    1638:	de f6       	brtc	.-74     	; 0x15f0 <__ultoa_invert+0xe>
    163a:	cf 01       	movw	r24, r30
    163c:	08 95       	ret
    163e:	46 2f       	mov	r20, r22
    1640:	47 70       	andi	r20, 0x07	; 7
    1642:	40 5d       	subi	r20, 0xD0	; 208
    1644:	41 93       	st	Z+, r20
    1646:	b3 e0       	ldi	r27, 0x03	; 3
    1648:	0f d0       	rcall	.+30     	; 0x1668 <__ultoa_invert+0x86>
    164a:	c9 f7       	brne	.-14     	; 0x163e <__ultoa_invert+0x5c>
    164c:	f6 cf       	rjmp	.-20     	; 0x163a <__ultoa_invert+0x58>
    164e:	46 2f       	mov	r20, r22
    1650:	4f 70       	andi	r20, 0x0F	; 15
    1652:	40 5d       	subi	r20, 0xD0	; 208
    1654:	4a 33       	cpi	r20, 0x3A	; 58
    1656:	18 f0       	brcs	.+6      	; 0x165e <__ultoa_invert+0x7c>
    1658:	49 5d       	subi	r20, 0xD9	; 217
    165a:	31 fd       	sbrc	r19, 1
    165c:	40 52       	subi	r20, 0x20	; 32
    165e:	41 93       	st	Z+, r20
    1660:	02 d0       	rcall	.+4      	; 0x1666 <__ultoa_invert+0x84>
    1662:	a9 f7       	brne	.-22     	; 0x164e <__ultoa_invert+0x6c>
    1664:	ea cf       	rjmp	.-44     	; 0x163a <__ultoa_invert+0x58>
    1666:	b4 e0       	ldi	r27, 0x04	; 4
    1668:	a6 95       	lsr	r26
    166a:	97 95       	ror	r25
    166c:	87 95       	ror	r24
    166e:	77 95       	ror	r23
    1670:	67 95       	ror	r22
    1672:	ba 95       	dec	r27
    1674:	c9 f7       	brne	.-14     	; 0x1668 <__ultoa_invert+0x86>
    1676:	00 97       	sbiw	r24, 0x00	; 0
    1678:	61 05       	cpc	r22, r1
    167a:	71 05       	cpc	r23, r1
    167c:	08 95       	ret
    167e:	9b 01       	movw	r18, r22
    1680:	ac 01       	movw	r20, r24
    1682:	0a 2e       	mov	r0, r26
    1684:	06 94       	lsr	r0
    1686:	57 95       	ror	r21
    1688:	47 95       	ror	r20
    168a:	37 95       	ror	r19
    168c:	27 95       	ror	r18
    168e:	ba 95       	dec	r27
    1690:	c9 f7       	brne	.-14     	; 0x1684 <__ultoa_invert+0xa2>
    1692:	62 0f       	add	r22, r18
    1694:	73 1f       	adc	r23, r19
    1696:	84 1f       	adc	r24, r20
    1698:	95 1f       	adc	r25, r21
    169a:	a0 1d       	adc	r26, r0
    169c:	08 95       	ret

0000169e <__prologue_saves__>:
    169e:	2f 92       	push	r2
    16a0:	3f 92       	push	r3
    16a2:	4f 92       	push	r4
    16a4:	5f 92       	push	r5
    16a6:	6f 92       	push	r6
    16a8:	7f 92       	push	r7
    16aa:	8f 92       	push	r8
    16ac:	9f 92       	push	r9
    16ae:	af 92       	push	r10
    16b0:	bf 92       	push	r11
    16b2:	cf 92       	push	r12
    16b4:	df 92       	push	r13
    16b6:	ef 92       	push	r14
    16b8:	ff 92       	push	r15
    16ba:	0f 93       	push	r16
    16bc:	1f 93       	push	r17
    16be:	cf 93       	push	r28
    16c0:	df 93       	push	r29
    16c2:	cd b7       	in	r28, 0x3d	; 61
    16c4:	de b7       	in	r29, 0x3e	; 62
    16c6:	ca 1b       	sub	r28, r26
    16c8:	db 0b       	sbc	r29, r27
    16ca:	0f b6       	in	r0, 0x3f	; 63
    16cc:	f8 94       	cli
    16ce:	de bf       	out	0x3e, r29	; 62
    16d0:	0f be       	out	0x3f, r0	; 63
    16d2:	cd bf       	out	0x3d, r28	; 61
    16d4:	09 94       	ijmp

000016d6 <__epilogue_restores__>:
    16d6:	2a 88       	ldd	r2, Y+18	; 0x12
    16d8:	39 88       	ldd	r3, Y+17	; 0x11
    16da:	48 88       	ldd	r4, Y+16	; 0x10
    16dc:	5f 84       	ldd	r5, Y+15	; 0x0f
    16de:	6e 84       	ldd	r6, Y+14	; 0x0e
    16e0:	7d 84       	ldd	r7, Y+13	; 0x0d
    16e2:	8c 84       	ldd	r8, Y+12	; 0x0c
    16e4:	9b 84       	ldd	r9, Y+11	; 0x0b
    16e6:	aa 84       	ldd	r10, Y+10	; 0x0a
    16e8:	b9 84       	ldd	r11, Y+9	; 0x09
    16ea:	c8 84       	ldd	r12, Y+8	; 0x08
    16ec:	df 80       	ldd	r13, Y+7	; 0x07
    16ee:	ee 80       	ldd	r14, Y+6	; 0x06
    16f0:	fd 80       	ldd	r15, Y+5	; 0x05
    16f2:	0c 81       	ldd	r16, Y+4	; 0x04
    16f4:	1b 81       	ldd	r17, Y+3	; 0x03
    16f6:	aa 81       	ldd	r26, Y+2	; 0x02
    16f8:	b9 81       	ldd	r27, Y+1	; 0x01
    16fa:	ce 0f       	add	r28, r30
    16fc:	d1 1d       	adc	r29, r1
    16fe:	0f b6       	in	r0, 0x3f	; 63
    1700:	f8 94       	cli
    1702:	de bf       	out	0x3e, r29	; 62
    1704:	0f be       	out	0x3f, r0	; 63
    1706:	cd bf       	out	0x3d, r28	; 61
    1708:	ed 01       	movw	r28, r26
    170a:	08 95       	ret

0000170c <_exit>:
    170c:	f8 94       	cli

0000170e <__stop_program>:
    170e:	ff cf       	rjmp	.-2      	; 0x170e <__stop_program>
