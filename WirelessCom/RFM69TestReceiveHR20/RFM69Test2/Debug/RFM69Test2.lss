
RFM69Test2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  00000da4  00000e38  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000da4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000052  0080011a  0080011a  00000e52  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e52  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000eb0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  00000ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f24  00000000  00000000  00001080  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d62  00000000  00000000  00002fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f20  00000000  00000000  00003d06  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004ac  00000000  00000000  00004c28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007f0  00000000  00000000  000050d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000116b  00000000  00000000  000058c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000180  00000000  00000000  00006a2f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
   4:	0c 94 2c 03 	jmp	0x658	; 0x658 <__vector_1>
   8:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
   c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  10:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  14:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  1c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__vector_7>
  20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  24:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  28:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  2c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  30:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  34:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  38:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  3c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  40:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  44:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  48:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  4c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  50:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  54:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  58:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf ef       	ldi	r28, 0xFF	; 255
  62:	d4 e0       	ldi	r29, 0x04	; 4
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
  68:	11 e0       	ldi	r17, 0x01	; 1
  6a:	a0 e0       	ldi	r26, 0x00	; 0
  6c:	b1 e0       	ldi	r27, 0x01	; 1
  6e:	e4 ea       	ldi	r30, 0xA4	; 164
  70:	fd e0       	ldi	r31, 0x0D	; 13
  72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
  74:	05 90       	lpm	r0, Z+
  76:	0d 92       	st	X+, r0
  78:	aa 31       	cpi	r26, 0x1A	; 26
  7a:	b1 07       	cpc	r27, r17
  7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
  7e:	21 e0       	ldi	r18, 0x01	; 1
  80:	aa e1       	ldi	r26, 0x1A	; 26
  82:	b1 e0       	ldi	r27, 0x01	; 1
  84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
  86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
  88:	ac 36       	cpi	r26, 0x6C	; 108
  8a:	b2 07       	cpc	r27, r18
  8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
  8e:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  92:	0c 94 d0 06 	jmp	0xda0	; 0xda0 <_exit>

00000096 <__bad_interrupt>:
  96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <millis_init>:
    ATOMIC_BLOCK(ATOMIC_FORCEON)
    {
        millis_return = timer1_millis;
    }
    return millis_return;
}
  9a:	e1 e8       	ldi	r30, 0x81	; 129
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	80 81       	ld	r24, Z
  a0:	8a 60       	ori	r24, 0x0A	; 10
  a2:	80 83       	st	Z, r24
  a4:	83 e0       	ldi	r24, 0x03	; 3
  a6:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  aa:	88 ee       	ldi	r24, 0xE8	; 232
  ac:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  b0:	78 94       	sei
  b2:	08 95       	ret

000000b4 <__vector_7>:

ISR (TIMER1_COMPA_vect)
{
  b4:	1f 92       	push	r1
  b6:	0f 92       	push	r0
  b8:	0f b6       	in	r0, 0x3f	; 63
  ba:	0f 92       	push	r0
  bc:	11 24       	eor	r1, r1
  be:	8f 93       	push	r24
  c0:	9f 93       	push	r25
  c2:	af 93       	push	r26
  c4:	bf 93       	push	r27
    timer1_millis++;
  c6:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <timer1_millis>
  ca:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <timer1_millis+0x1>
  ce:	a0 91 20 01 	lds	r26, 0x0120	; 0x800120 <timer1_millis+0x2>
  d2:	b0 91 21 01 	lds	r27, 0x0121	; 0x800121 <timer1_millis+0x3>
  d6:	01 96       	adiw	r24, 0x01	; 1
  d8:	a1 1d       	adc	r26, r1
  da:	b1 1d       	adc	r27, r1
  dc:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <timer1_millis>
  e0:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <timer1_millis+0x1>
  e4:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <timer1_millis+0x2>
  e8:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <timer1_millis+0x3>
}
  ec:	bf 91       	pop	r27
  ee:	af 91       	pop	r26
  f0:	9f 91       	pop	r25
  f2:	8f 91       	pop	r24
  f4:	0f 90       	pop	r0
  f6:	0f be       	out	0x3f, r0	; 63
  f8:	0f 90       	pop	r0
  fa:	1f 90       	pop	r1
  fc:	18 95       	reti

000000fe <main>:
#define NODEID     4
#define myUART UART0


int main(void)
{
  fe:	cf 93       	push	r28
 100:	df 93       	push	r29
 102:	cd b7       	in	r28, 0x3d	; 61
 104:	de b7       	in	r29, 0x3e	; 62
 106:	60 97       	sbiw	r28, 0x10	; 16
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	f8 94       	cli
 10c:	de bf       	out	0x3e, r29	; 62
 10e:	0f be       	out	0x3f, r0	; 63
 110:	cd bf       	out	0x3d, r28	; 61
	//_delay_ms(1000);
	//PORTB &= ~(0b00000001);	// sæt resetpin lav
	
	//InitUART(myUART, 9600, 8, 'N');
	// initialize RFM69
	rfm69_init(433, NODEID,NETWORKID);
 112:	41 e2       	ldi	r20, 0x21	; 33
 114:	64 e0       	ldi	r22, 0x04	; 4
 116:	81 eb       	ldi	r24, 0xB1	; 177
 118:	91 e0       	ldi	r25, 0x01	; 1
 11a:	0e 94 40 02 	call	0x480	; 0x480 <rfm69_init>
	setHighPower(0);   // if model number rfm69hw
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	0e 94 9b 01 	call	0x336	; 0x336 <setHighPower>
	setPowerLevel(30); // 0-31; 5dBm to 20 dBm 
 124:	8e e1       	ldi	r24, 0x1E	; 30
 126:	0e 94 16 01 	call	0x22c	; 0x22c <setPowerLevel>
	encrypt(NULL);     // if set has to be 16 bytes. example: "1234567890123456"
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	0e 94 0e 02 	call	0x41c	; 0x41c <encrypt>
			{
				stringData[i]=DATA[i];
			}
			//SendString(myUART, stringData);
			char rssilevel[16];
			sprintf(rssilevel,"\n\nRssi level is : %d \n",readRSSI(0));
 132:	03 e0       	ldi	r16, 0x03	; 3
 134:	11 e0       	ldi	r17, 0x01	; 1
 136:	ce 01       	movw	r24, r28
 138:	01 96       	adiw	r24, 0x01	; 1
 13a:	7c 01       	movw	r14, r24
	
	  
    while (1) 
    {
		//SendString(myUART, "_");
		if(receiveDone())
 13c:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <receiveDone>
 140:	88 23       	and	r24, r24
 142:	e1 f3       	breq	.-8      	; 0x13c <main+0x3e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 144:	8f e1       	ldi	r24, 0x1F	; 31
 146:	9e e4       	ldi	r25, 0x4E	; 78
 148:	01 97       	sbiw	r24, 0x01	; 1
 14a:	f1 f7       	brne	.-4      	; 0x148 <main+0x4a>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <main+0x50>
 14e:	00 00       	nop
		{
			_delay_ms(10);
			if(ACKRequested())
 150:	0e 94 cf 00 	call	0x19e	; 0x19e <ACKRequested>
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	90 e0       	ldi	r25, 0x00	; 0
				;//sendACK();
			char stringData[16];
			for(uint8_t i=0;i<16;i++) // max 16 digit can be shown in this case
			{
				stringData[i]=DATA[i];
 158:	fc 01       	movw	r30, r24
 15a:	ee 5d       	subi	r30, 0xDE	; 222
 15c:	fe 4f       	sbci	r31, 0xFE	; 254
 15e:	20 81       	ld	r18, Z
 160:	01 96       	adiw	r24, 0x01	; 1
		{
			_delay_ms(10);
			if(ACKRequested())
				;//sendACK();
			char stringData[16];
			for(uint8_t i=0;i<16;i++) // max 16 digit can be shown in this case
 162:	80 31       	cpi	r24, 0x10	; 16
 164:	91 05       	cpc	r25, r1
 166:	c1 f7       	brne	.-16     	; 0x158 <main+0x5a>
			{
				stringData[i]=DATA[i];
			}
			//SendString(myUART, stringData);
			char rssilevel[16];
			sprintf(rssilevel,"\n\nRssi level is : %d \n",readRSSI(0));
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	0e 94 ba 01 	call	0x374	; 0x374 <readRSSI>
 16e:	9f 93       	push	r25
 170:	8f 93       	push	r24
 172:	1f 93       	push	r17
 174:	0f 93       	push	r16
 176:	ff 92       	push	r15
 178:	ef 92       	push	r14
 17a:	0e 94 e6 03 	call	0x7cc	; 0x7cc <sprintf>
			//SendString(myUART,	rssilevel);
			counter++;
 17e:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
 182:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
 186:	01 96       	adiw	r24, 0x01	; 1
 188:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
 18c:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
 190:	0f 90       	pop	r0
 192:	0f 90       	pop	r0
 194:	0f 90       	pop	r0
 196:	0f 90       	pop	r0
 198:	0f 90       	pop	r0
 19a:	0f 90       	pop	r0
 19c:	cf cf       	rjmp	.-98     	; 0x13c <main+0x3e>

0000019e <ACKRequested>:
    millis_current = millis();
    while (!canSend() && millis() - millis_current < RF69_CSMA_LIMIT_MS) receiveDone();
    SENDERID = sender;    // TWS: Restore SenderID after it gets wiped out by receiveDone() n.b. actually now there is no receiveDone() :D
    sendFrame(sender, buffer, bufferSize, 0, 1);
    RSSI = _RSSI; // restore payload RSSI
}
 19e:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <ACK_REQUESTED>
 1a2:	88 23       	and	r24, r24
 1a4:	39 f0       	breq	.+14     	; 0x1b4 <ACKRequested+0x16>
 1a6:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <TARGETID>
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	9f 3f       	cpi	r25, 0xFF	; 255
 1ae:	19 f4       	brne	.+6      	; 0x1b6 <ACKRequested+0x18>
 1b0:	80 e0       	ldi	r24, 0x00	; 0
 1b2:	08 95       	ret
 1b4:	80 e0       	ldi	r24, 0x00	; 0
 1b6:	08 95       	ret

000001b8 <maybeInterrupts>:
 1b8:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <inISR>
 1bc:	81 11       	cpse	r24, r1
 1be:	01 c0       	rjmp	.+2      	; 0x1c2 <maybeInterrupts+0xa>
 1c0:	78 94       	sei
 1c2:	08 95       	ret

000001c4 <select>:
 1c4:	5a 98       	cbi	0x0b, 2	; 11
 1c6:	f8 94       	cli
 1c8:	08 95       	ret

000001ca <unselect>:
 1ca:	5a 9a       	sbi	0x0b, 2	; 11
 1cc:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <maybeInterrupts>
 1d0:	08 95       	ret

000001d2 <readReg>:
 1d2:	cf 93       	push	r28
 1d4:	c8 2f       	mov	r28, r24
 1d6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <select>
 1da:	8c 2f       	mov	r24, r28
 1dc:	8f 77       	andi	r24, 0x7F	; 127
 1de:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <spi_fast_shift>
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <spi_fast_shift>
 1e8:	c8 2f       	mov	r28, r24
 1ea:	0e 94 e5 00 	call	0x1ca	; 0x1ca <unselect>
 1ee:	8c 2f       	mov	r24, r28
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <writeReg>:
 1f4:	cf 93       	push	r28
 1f6:	df 93       	push	r29
 1f8:	d8 2f       	mov	r29, r24
 1fa:	c6 2f       	mov	r28, r22
 1fc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <select>
 200:	8d 2f       	mov	r24, r29
 202:	80 68       	ori	r24, 0x80	; 128
 204:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <spi_fast_shift>
 208:	8c 2f       	mov	r24, r28
 20a:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <spi_fast_shift>
 20e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <unselect>
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	08 95       	ret

00000218 <setAddress>:
 218:	68 2f       	mov	r22, r24
 21a:	89 e3       	ldi	r24, 0x39	; 57
 21c:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 220:	08 95       	ret

00000222 <setNetwork>:
 222:	68 2f       	mov	r22, r24
 224:	80 e3       	ldi	r24, 0x30	; 48
 226:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 22a:	08 95       	ret

0000022c <setPowerLevel>:
 22c:	cf 93       	push	r28
 22e:	c8 2f       	mov	r28, r24
 230:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isRFM69HW>
 234:	81 30       	cpi	r24, 0x01	; 1
 236:	09 f4       	brne	.+2      	; 0x23a <setPowerLevel+0xe>
 238:	c6 95       	lsr	r28
 23a:	81 e1       	ldi	r24, 0x11	; 17
 23c:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 240:	80 7e       	andi	r24, 0xE0	; 224
 242:	68 2f       	mov	r22, r24
 244:	6c 2b       	or	r22, r28
 246:	81 e1       	ldi	r24, 0x11	; 17
 248:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 24c:	cf 91       	pop	r28
 24e:	08 95       	ret

00000250 <setHighPowerRegs>:
 250:	81 30       	cpi	r24, 0x01	; 1
 252:	49 f4       	brne	.+18     	; 0x266 <setHighPowerRegs+0x16>
 254:	6d e5       	ldi	r22, 0x5D	; 93
 256:	8a e5       	ldi	r24, 0x5A	; 90
 258:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 25c:	6c e7       	ldi	r22, 0x7C	; 124
 25e:	8c e5       	ldi	r24, 0x5C	; 92
 260:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 264:	08 95       	ret
 266:	65 e5       	ldi	r22, 0x55	; 85
 268:	8a e5       	ldi	r24, 0x5A	; 90
 26a:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 26e:	60 e7       	ldi	r22, 0x70	; 112
 270:	8c e5       	ldi	r24, 0x5C	; 92
 272:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 276:	08 95       	ret

00000278 <setMode>:
 278:	cf 93       	push	r28
 27a:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <mode>
 27e:	98 17       	cp	r25, r24
 280:	09 f4       	brne	.+2      	; 0x284 <setMode+0xc>
 282:	57 c0       	rjmp	.+174    	; 0x332 <setMode+0xba>
 284:	c8 2f       	mov	r28, r24
 286:	82 30       	cpi	r24, 0x02	; 2
 288:	69 f1       	breq	.+90     	; 0x2e4 <setMode+0x6c>
 28a:	28 f4       	brcc	.+10     	; 0x296 <setMode+0x1e>
 28c:	88 23       	and	r24, r24
 28e:	f1 f1       	breq	.+124    	; 0x30c <setMode+0x94>
 290:	81 30       	cpi	r24, 0x01	; 1
 292:	91 f1       	breq	.+100    	; 0x2f8 <setMode+0x80>
 294:	4e c0       	rjmp	.+156    	; 0x332 <setMode+0xba>
 296:	83 30       	cpi	r24, 0x03	; 3
 298:	a1 f0       	breq	.+40     	; 0x2c2 <setMode+0x4a>
 29a:	84 30       	cpi	r24, 0x04	; 4
 29c:	09 f0       	breq	.+2      	; 0x2a0 <setMode+0x28>
 29e:	49 c0       	rjmp	.+146    	; 0x332 <setMode+0xba>
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 2a6:	83 7e       	andi	r24, 0xE3	; 227
 2a8:	68 2f       	mov	r22, r24
 2aa:	6c 60       	ori	r22, 0x0C	; 12
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 2b2:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isRFM69HW>
 2b6:	88 23       	and	r24, r24
 2b8:	89 f1       	breq	.+98     	; 0x31c <setMode+0xa4>
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	0e 94 28 01 	call	0x250	; 0x250 <setHighPowerRegs>
 2c0:	2d c0       	rjmp	.+90     	; 0x31c <setMode+0xa4>
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 2c8:	83 7e       	andi	r24, 0xE3	; 227
 2ca:	68 2f       	mov	r22, r24
 2cc:	60 61       	ori	r22, 0x10	; 16
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 2d4:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isRFM69HW>
 2d8:	88 23       	and	r24, r24
 2da:	01 f1       	breq	.+64     	; 0x31c <setMode+0xa4>
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	0e 94 28 01 	call	0x250	; 0x250 <setHighPowerRegs>
 2e2:	1c c0       	rjmp	.+56     	; 0x31c <setMode+0xa4>
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 2ea:	83 7e       	andi	r24, 0xE3	; 227
 2ec:	68 2f       	mov	r22, r24
 2ee:	68 60       	ori	r22, 0x08	; 8
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 2f6:	12 c0       	rjmp	.+36     	; 0x31c <setMode+0xa4>
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 2fe:	83 7e       	andi	r24, 0xE3	; 227
 300:	68 2f       	mov	r22, r24
 302:	64 60       	ori	r22, 0x04	; 4
 304:	81 e0       	ldi	r24, 0x01	; 1
 306:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 30a:	08 c0       	rjmp	.+16     	; 0x31c <setMode+0xa4>
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 312:	68 2f       	mov	r22, r24
 314:	63 7e       	andi	r22, 0xE3	; 227
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 31c:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <mode>
 320:	91 11       	cpse	r25, r1
 322:	05 c0       	rjmp	.+10     	; 0x32e <setMode+0xb6>
 324:	87 e2       	ldi	r24, 0x27	; 39
 326:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 32a:	88 23       	and	r24, r24
 32c:	bc f7       	brge	.-18     	; 0x31c <setMode+0xa4>
 32e:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <mode>
 332:	cf 91       	pop	r28
 334:	08 95       	ret

00000336 <setHighPower>:
 336:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <isRFM69HW>
 33a:	81 11       	cpse	r24, r1
 33c:	02 c0       	rjmp	.+4      	; 0x342 <setHighPower+0xc>
 33e:	6a e1       	ldi	r22, 0x1A	; 26
 340:	01 c0       	rjmp	.+2      	; 0x344 <setHighPower+0xe>
 342:	6f e0       	ldi	r22, 0x0F	; 15
 344:	83 e1       	ldi	r24, 0x13	; 19
 346:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 34a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isRFM69HW>
 34e:	81 30       	cpi	r24, 0x01	; 1
 350:	51 f4       	brne	.+20     	; 0x366 <setHighPower+0x30>
 352:	81 e1       	ldi	r24, 0x11	; 17
 354:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 358:	8f 71       	andi	r24, 0x1F	; 31
 35a:	68 2f       	mov	r22, r24
 35c:	60 66       	ori	r22, 0x60	; 96
 35e:	81 e1       	ldi	r24, 0x11	; 17
 360:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 364:	08 95       	ret
 366:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
 36a:	60 68       	ori	r22, 0x80	; 128
 36c:	81 e1       	ldi	r24, 0x11	; 17
 36e:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 372:	08 95       	ret

00000374 <readRSSI>:
 374:	81 30       	cpi	r24, 0x01	; 1
 376:	49 f4       	brne	.+18     	; 0x38a <readRSSI+0x16>
 378:	61 e0       	ldi	r22, 0x01	; 1
 37a:	83 e2       	ldi	r24, 0x23	; 35
 37c:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 380:	83 e2       	ldi	r24, 0x23	; 35
 382:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 386:	81 ff       	sbrs	r24, 1
 388:	fb cf       	rjmp	.-10     	; 0x380 <readRSSI+0xc>
 38a:	84 e2       	ldi	r24, 0x24	; 36
 38c:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	91 95       	neg	r25
 394:	81 95       	neg	r24
 396:	91 09       	sbc	r25, r1
 398:	95 95       	asr	r25
 39a:	87 95       	ror	r24
 39c:	08 95       	ret

0000039e <receiveBegin>:
 39e:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <DATALEN>
 3a2:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <SENDERID>
 3a6:	10 92 6b 01 	sts	0x016B, r1	; 0x80016b <TARGETID>
 3aa:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <PAYLOADLEN>
 3ae:	10 92 6a 01 	sts	0x016A, r1	; 0x80016a <ACK_REQUESTED>
 3b2:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <ACK_RECEIVED>
 3b6:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <RSSI+0x1>
 3ba:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <RSSI>
 3be:	88 e2       	ldi	r24, 0x28	; 40
 3c0:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 3c4:	82 ff       	sbrs	r24, 2
 3c6:	08 c0       	rjmp	.+16     	; 0x3d8 <receiveBegin+0x3a>
 3c8:	8d e3       	ldi	r24, 0x3D	; 61
 3ca:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 3ce:	68 2f       	mov	r22, r24
 3d0:	64 60       	ori	r22, 0x04	; 4
 3d2:	8d e3       	ldi	r24, 0x3D	; 61
 3d4:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 3d8:	60 e4       	ldi	r22, 0x40	; 64
 3da:	85 e2       	ldi	r24, 0x25	; 37
 3dc:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 3e0:	83 e0       	ldi	r24, 0x03	; 3
 3e2:	0e 94 3c 01 	call	0x278	; 0x278 <setMode>
 3e6:	08 95       	ret

000003e8 <receiveDone>:
 3e8:	f8 94       	cli
 3ea:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <mode>
 3ee:	83 30       	cpi	r24, 0x03	; 3
 3f0:	49 f4       	brne	.+18     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f2:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <PAYLOADLEN>
 3f6:	88 23       	and	r24, r24
 3f8:	29 f0       	breq	.+10     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	0e 94 3c 01 	call	0x278	; 0x278 <setMode>
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	08 95       	ret
 404:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <mode>
 408:	83 30       	cpi	r24, 0x03	; 3
 40a:	19 f4       	brne	.+6      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40c:	78 94       	sei
 40e:	80 e0       	ldi	r24, 0x00	; 0
 410:	08 95       	ret
 412:	0e 94 cf 01 	call	0x39e	; 0x39e <receiveBegin>
 416:	78 94       	sei
 418:	80 e0       	ldi	r24, 0x00	; 0
 41a:	08 95       	ret

0000041c <encrypt>:
 41c:	ef 92       	push	r14
 41e:	ff 92       	push	r15
 420:	0f 93       	push	r16
 422:	1f 93       	push	r17
 424:	cf 93       	push	r28
 426:	df 93       	push	r29
 428:	7c 01       	movw	r14, r24
 42a:	81 e0       	ldi	r24, 0x01	; 1
 42c:	0e 94 3c 01 	call	0x278	; 0x278 <setMode>
 430:	e1 14       	cp	r14, r1
 432:	f1 04       	cpc	r15, r1
 434:	89 f0       	breq	.+34     	; 0x458 <encrypt+0x3c>
 436:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <select>
 43a:	8e eb       	ldi	r24, 0xBE	; 190
 43c:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <spi_fast_shift>
 440:	e7 01       	movw	r28, r14
 442:	87 01       	movw	r16, r14
 444:	00 5f       	subi	r16, 0xF0	; 240
 446:	1f 4f       	sbci	r17, 0xFF	; 255
 448:	89 91       	ld	r24, Y+
 44a:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <spi_fast_shift>
 44e:	c0 17       	cp	r28, r16
 450:	d1 07       	cpc	r29, r17
 452:	d1 f7       	brne	.-12     	; 0x448 <encrypt+0x2c>
 454:	0e 94 e5 00 	call	0x1ca	; 0x1ca <unselect>
 458:	8d e3       	ldi	r24, 0x3D	; 61
 45a:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 45e:	8e 7f       	andi	r24, 0xFE	; 254
 460:	91 e0       	ldi	r25, 0x01	; 1
 462:	ef 28       	or	r14, r15
 464:	09 f4       	brne	.+2      	; 0x468 <encrypt+0x4c>
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	68 2f       	mov	r22, r24
 46a:	69 2b       	or	r22, r25
 46c:	8d e3       	ldi	r24, 0x3D	; 61
 46e:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 472:	df 91       	pop	r29
 474:	cf 91       	pop	r28
 476:	1f 91       	pop	r17
 478:	0f 91       	pop	r16
 47a:	ff 90       	pop	r15
 47c:	ef 90       	pop	r14
 47e:	08 95       	ret

00000480 <rfm69_init>:
 480:	ff 92       	push	r15
 482:	0f 93       	push	r16
 484:	1f 93       	push	r17
 486:	cf 93       	push	r28
 488:	df 93       	push	r29
 48a:	cd b7       	in	r28, 0x3d	; 61
 48c:	de b7       	in	r29, 0x3e	; 62
 48e:	ae 97       	sbiw	r28, 0x2e	; 46
 490:	0f b6       	in	r0, 0x3f	; 63
 492:	f8 94       	cli
 494:	de bf       	out	0x3e, r29	; 62
 496:	0f be       	out	0x3f, r0	; 63
 498:	cd bf       	out	0x3d, r28	; 61
 49a:	06 2f       	mov	r16, r22
 49c:	f4 2e       	mov	r15, r20
 49e:	21 e0       	ldi	r18, 0x01	; 1
 4a0:	29 83       	std	Y+1, r18	; 0x01
 4a2:	34 e0       	ldi	r19, 0x04	; 4
 4a4:	3a 83       	std	Y+2, r19	; 0x02
 4a6:	22 e0       	ldi	r18, 0x02	; 2
 4a8:	2b 83       	std	Y+3, r18	; 0x03
 4aa:	1c 82       	std	Y+4, r1	; 0x04
 4ac:	23 e0       	ldi	r18, 0x03	; 3
 4ae:	2d 83       	std	Y+5, r18	; 0x05
 4b0:	4d e0       	ldi	r20, 0x0D	; 13
 4b2:	4e 83       	std	Y+6, r20	; 0x06
 4b4:	3f 83       	std	Y+7, r19	; 0x07
 4b6:	35 e0       	ldi	r19, 0x05	; 5
 4b8:	38 87       	std	Y+8, r19	; 0x08
 4ba:	39 87       	std	Y+9, r19	; 0x09
 4bc:	2a 87       	std	Y+10, r18	; 0x0a
 4be:	26 e0       	ldi	r18, 0x06	; 6
 4c0:	2b 87       	std	Y+11, r18	; 0x0b
 4c2:	23 e3       	ldi	r18, 0x33	; 51
 4c4:	2c 87       	std	Y+12, r18	; 0x0c
 4c6:	27 e0       	ldi	r18, 0x07	; 7
 4c8:	2d 87       	std	Y+13, r18	; 0x0d
 4ca:	8b 33       	cpi	r24, 0x3B	; 59
 4cc:	21 e0       	ldi	r18, 0x01	; 1
 4ce:	92 07       	cpc	r25, r18
 4d0:	09 f4       	brne	.+2      	; 0x4d4 <rfm69_init+0x54>
 4d2:	a4 c0       	rjmp	.+328    	; 0x61c <__stack+0x11d>
 4d4:	81 3b       	cpi	r24, 0xB1	; 177
 4d6:	21 e0       	ldi	r18, 0x01	; 1
 4d8:	92 07       	cpc	r25, r18
 4da:	09 f4       	brne	.+2      	; 0x4de <rfm69_init+0x5e>
 4dc:	99 c0       	rjmp	.+306    	; 0x610 <__stack+0x111>
 4de:	84 36       	cpi	r24, 0x64	; 100
 4e0:	93 40       	sbci	r25, 0x03	; 3
 4e2:	09 f0       	breq	.+2      	; 0x4e6 <rfm69_init+0x66>
 4e4:	a1 c0       	rjmp	.+322    	; 0x628 <__stack+0x129>
 4e6:	a6 c0       	rjmp	.+332    	; 0x634 <__stack+0x135>
 4e8:	88 8b       	std	Y+16, r24	; 0x10
 4ea:	89 e0       	ldi	r24, 0x09	; 9
 4ec:	89 8b       	std	Y+17, r24	; 0x11
 4ee:	1a 8a       	std	Y+18, r1	; 0x12
 4f0:	89 e1       	ldi	r24, 0x19	; 25
 4f2:	8b 8b       	std	Y+19, r24	; 0x13
 4f4:	92 e4       	ldi	r25, 0x42	; 66
 4f6:	9c 8b       	std	Y+20, r25	; 0x14
 4f8:	85 e2       	ldi	r24, 0x25	; 37
 4fa:	8d 8b       	std	Y+21, r24	; 0x15
 4fc:	80 e4       	ldi	r24, 0x40	; 64
 4fe:	8e 8b       	std	Y+22, r24	; 0x16
 500:	86 e2       	ldi	r24, 0x26	; 38
 502:	8f 8b       	std	Y+23, r24	; 0x17
 504:	87 e0       	ldi	r24, 0x07	; 7
 506:	88 8f       	std	Y+24, r24	; 0x18
 508:	88 e2       	ldi	r24, 0x28	; 40
 50a:	89 8f       	std	Y+25, r24	; 0x19
 50c:	80 e1       	ldi	r24, 0x10	; 16
 50e:	8a 8f       	std	Y+26, r24	; 0x1a
 510:	89 e2       	ldi	r24, 0x29	; 41
 512:	8b 8f       	std	Y+27, r24	; 0x1b
 514:	8c ed       	ldi	r24, 0xDC	; 220
 516:	8c 8f       	std	Y+28, r24	; 0x1c
 518:	8e e2       	ldi	r24, 0x2E	; 46
 51a:	8d 8f       	std	Y+29, r24	; 0x1d
 51c:	88 e8       	ldi	r24, 0x88	; 136
 51e:	8e 8f       	std	Y+30, r24	; 0x1e
 520:	8f e2       	ldi	r24, 0x2F	; 47
 522:	8f 8f       	std	Y+31, r24	; 0x1f
 524:	8d e2       	ldi	r24, 0x2D	; 45
 526:	88 a3       	std	Y+32, r24	; 0x20
 528:	80 e3       	ldi	r24, 0x30	; 48
 52a:	89 a3       	std	Y+33, r24	; 0x21
 52c:	fa a2       	std	Y+34, r15	; 0x22
 52e:	27 e3       	ldi	r18, 0x37	; 55
 530:	2b a3       	std	Y+35, r18	; 0x23
 532:	20 e9       	ldi	r18, 0x90	; 144
 534:	2c a3       	std	Y+36, r18	; 0x24
 536:	28 e3       	ldi	r18, 0x38	; 56
 538:	2d a3       	std	Y+37, r18	; 0x25
 53a:	9e a3       	std	Y+38, r25	; 0x26
 53c:	9c e3       	ldi	r25, 0x3C	; 60
 53e:	9f a3       	std	Y+39, r25	; 0x27
 540:	9f e8       	ldi	r25, 0x8F	; 143
 542:	98 a7       	std	Y+40, r25	; 0x28
 544:	9d e3       	ldi	r25, 0x3D	; 61
 546:	99 a7       	std	Y+41, r25	; 0x29
 548:	92 e1       	ldi	r25, 0x12	; 18
 54a:	9a a7       	std	Y+42, r25	; 0x2a
 54c:	9f e6       	ldi	r25, 0x6F	; 111
 54e:	9b a7       	std	Y+43, r25	; 0x2b
 550:	8c a7       	std	Y+44, r24	; 0x2c
 552:	8f ef       	ldi	r24, 0xFF	; 255
 554:	8d a7       	std	Y+45, r24	; 0x2d
 556:	1e a6       	std	Y+46, r1	; 0x2e
 558:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <spi_init>
 55c:	52 9a       	sbi	0x0a, 2	; 10
 55e:	5a 9a       	sbi	0x0b, 2	; 11
 560:	51 98       	cbi	0x0a, 1	; 10
 562:	04 c0       	rjmp	.+8      	; 0x56c <__stack+0x6d>
 564:	6a ea       	ldi	r22, 0xAA	; 170
 566:	8f e2       	ldi	r24, 0x2F	; 47
 568:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 56c:	8f e2       	ldi	r24, 0x2F	; 47
 56e:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 572:	8a 3a       	cpi	r24, 0xAA	; 170
 574:	b9 f7       	brne	.-18     	; 0x564 <__stack+0x65>
 576:	04 c0       	rjmp	.+8      	; 0x580 <__stack+0x81>
 578:	65 e5       	ldi	r22, 0x55	; 85
 57a:	8f e2       	ldi	r24, 0x2F	; 47
 57c:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 580:	8f e2       	ldi	r24, 0x2F	; 47
 582:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 586:	85 35       	cpi	r24, 0x55	; 85
 588:	b9 f7       	brne	.-18     	; 0x578 <__stack+0x79>
 58a:	89 81       	ldd	r24, Y+1	; 0x01
 58c:	8f 3f       	cpi	r24, 0xFF	; 255
 58e:	e9 f0       	breq	.+58     	; 0x5ca <__stack+0xcb>
 590:	20 e0       	ldi	r18, 0x00	; 0
 592:	30 e0       	ldi	r19, 0x00	; 0
 594:	10 e0       	ldi	r17, 0x00	; 0
 596:	22 0f       	add	r18, r18
 598:	33 1f       	adc	r19, r19
 59a:	e1 e0       	ldi	r30, 0x01	; 1
 59c:	f0 e0       	ldi	r31, 0x00	; 0
 59e:	ec 0f       	add	r30, r28
 5a0:	fd 1f       	adc	r31, r29
 5a2:	e2 0f       	add	r30, r18
 5a4:	f3 1f       	adc	r31, r19
 5a6:	61 81       	ldd	r22, Z+1	; 0x01
 5a8:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <writeReg>
 5ac:	1f 5f       	subi	r17, 0xFF	; 255
 5ae:	21 2f       	mov	r18, r17
 5b0:	30 e0       	ldi	r19, 0x00	; 0
 5b2:	f9 01       	movw	r30, r18
 5b4:	ee 0f       	add	r30, r30
 5b6:	ff 1f       	adc	r31, r31
 5b8:	81 e0       	ldi	r24, 0x01	; 1
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	8c 0f       	add	r24, r28
 5be:	9d 1f       	adc	r25, r29
 5c0:	e8 0f       	add	r30, r24
 5c2:	f9 1f       	adc	r31, r25
 5c4:	80 81       	ld	r24, Z
 5c6:	8f 3f       	cpi	r24, 0xFF	; 255
 5c8:	31 f7       	brne	.-52     	; 0x596 <__stack+0x97>
 5ca:	80 e0       	ldi	r24, 0x00	; 0
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	0e 94 0e 02 	call	0x41c	; 0x41c <encrypt>
 5d2:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <isRFM69HW>
 5d6:	0e 94 9b 01 	call	0x336	; 0x336 <setHighPower>
 5da:	81 e0       	ldi	r24, 0x01	; 1
 5dc:	0e 94 3c 01 	call	0x278	; 0x278 <setMode>
 5e0:	87 e2       	ldi	r24, 0x27	; 39
 5e2:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 5e6:	88 23       	and	r24, r24
 5e8:	dc f7       	brge	.-10     	; 0x5e0 <__stack+0xe1>
 5ea:	e9 e6       	ldi	r30, 0x69	; 105
 5ec:	f0 e0       	ldi	r31, 0x00	; 0
 5ee:	80 81       	ld	r24, Z
 5f0:	83 60       	ori	r24, 0x03	; 3
 5f2:	80 83       	st	Z, r24
 5f4:	e8 9a       	sbi	0x1d, 0	; 29
 5f6:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <inISR>
 5fa:	0e 94 4d 00 	call	0x9a	; 0x9a <millis_init>
 5fe:	00 93 63 01 	sts	0x0163, r16	; 0x800163 <address>
 602:	80 2f       	mov	r24, r16
 604:	0e 94 0c 01 	call	0x218	; 0x218 <setAddress>
 608:	8f 2d       	mov	r24, r15
 60a:	0e 94 11 01 	call	0x222	; 0x222 <setNetwork>
 60e:	18 c0       	rjmp	.+48     	; 0x640 <__stack+0x141>
 610:	8c e6       	ldi	r24, 0x6C	; 108
 612:	8e 87       	std	Y+14, r24	; 0x0e
 614:	88 e0       	ldi	r24, 0x08	; 8
 616:	8f 87       	std	Y+15, r24	; 0x0f
 618:	80 e4       	ldi	r24, 0x40	; 64
 61a:	66 cf       	rjmp	.-308    	; 0x4e8 <rfm69_init+0x68>
 61c:	8e e4       	ldi	r24, 0x4E	; 78
 61e:	8e 87       	std	Y+14, r24	; 0x0e
 620:	88 e0       	ldi	r24, 0x08	; 8
 622:	8f 87       	std	Y+15, r24	; 0x0f
 624:	80 ec       	ldi	r24, 0xC0	; 192
 626:	60 cf       	rjmp	.-320    	; 0x4e8 <rfm69_init+0x68>
 628:	84 ee       	ldi	r24, 0xE4	; 228
 62a:	8e 87       	std	Y+14, r24	; 0x0e
 62c:	88 e0       	ldi	r24, 0x08	; 8
 62e:	8f 87       	std	Y+15, r24	; 0x0f
 630:	80 ec       	ldi	r24, 0xC0	; 192
 632:	5a cf       	rjmp	.-332    	; 0x4e8 <rfm69_init+0x68>
 634:	89 ed       	ldi	r24, 0xD9	; 217
 636:	8e 87       	std	Y+14, r24	; 0x0e
 638:	88 e0       	ldi	r24, 0x08	; 8
 63a:	8f 87       	std	Y+15, r24	; 0x0f
 63c:	80 e0       	ldi	r24, 0x00	; 0
 63e:	54 cf       	rjmp	.-344    	; 0x4e8 <rfm69_init+0x68>
 640:	ae 96       	adiw	r28, 0x2e	; 46
 642:	0f b6       	in	r0, 0x3f	; 63
 644:	f8 94       	cli
 646:	de bf       	out	0x3e, r29	; 62
 648:	0f be       	out	0x3f, r0	; 63
 64a:	cd bf       	out	0x3d, r28	; 61
 64c:	df 91       	pop	r29
 64e:	cf 91       	pop	r28
 650:	1f 91       	pop	r17
 652:	0f 91       	pop	r16
 654:	ff 90       	pop	r15
 656:	08 95       	ret

00000658 <__vector_1>:
    maybeInterrupts();
}

// Interrupt Service Routine
ISR(INT_VECT)
{
 658:	1f 92       	push	r1
 65a:	0f 92       	push	r0
 65c:	0f b6       	in	r0, 0x3f	; 63
 65e:	0f 92       	push	r0
 660:	11 24       	eor	r1, r1
 662:	0f 93       	push	r16
 664:	1f 93       	push	r17
 666:	2f 93       	push	r18
 668:	3f 93       	push	r19
 66a:	4f 93       	push	r20
 66c:	5f 93       	push	r21
 66e:	6f 93       	push	r22
 670:	7f 93       	push	r23
 672:	8f 93       	push	r24
 674:	9f 93       	push	r25
 676:	af 93       	push	r26
 678:	bf 93       	push	r27
 67a:	cf 93       	push	r28
 67c:	ef 93       	push	r30
 67e:	ff 93       	push	r31
    inISR = 1;
 680:	81 e0       	ldi	r24, 0x01	; 1
 682:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <inISR>
    if (mode == RF69_MODE_RX && (readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PAYLOADREADY))
 686:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <mode>
 68a:	83 30       	cpi	r24, 0x03	; 3
 68c:	09 f0       	breq	.+2      	; 0x690 <__vector_1+0x38>
 68e:	6d c0       	rjmp	.+218    	; 0x76a <__vector_1+0x112>
 690:	88 e2       	ldi	r24, 0x28	; 40
 692:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <readReg>
 696:	82 ff       	sbrs	r24, 2
 698:	68 c0       	rjmp	.+208    	; 0x76a <__vector_1+0x112>
    {
        setMode(RF69_MODE_STANDBY);
 69a:	81 e0       	ldi	r24, 0x01	; 1
 69c:	0e 94 3c 01 	call	0x278	; 0x278 <setMode>
        select();
 6a0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <select>
        spi_fast_shift(REG_FIFO & 0x7F);
 6a4:	80 e0       	ldi	r24, 0x00	; 0
 6a6:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <spi_fast_shift>
        PAYLOADLEN = spi_fast_shift(0);
 6aa:	80 e0       	ldi	r24, 0x00	; 0
 6ac:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <spi_fast_shift>
 6b0:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <PAYLOADLEN>
        if(PAYLOADLEN>66) PAYLOADLEN=66;
 6b4:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <PAYLOADLEN>
 6b8:	83 34       	cpi	r24, 0x43	; 67
 6ba:	18 f0       	brcs	.+6      	; 0x6c2 <__vector_1+0x6a>
 6bc:	82 e4       	ldi	r24, 0x42	; 66
 6be:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <PAYLOADLEN>
        TARGETID = spi_fast_shift(0);
 6c2:	80 e0       	ldi	r24, 0x00	; 0
 6c4:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <spi_fast_shift>
 6c8:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <TARGETID>
        if(!(promiscuousMode || TARGETID == address || TARGETID == RF69_BROADCAST_ADDR) // match this node's address, or broadcast address or anything in promiscuous mode
 6cc:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <promiscuousMode>
 6d0:	81 11       	cpse	r24, r1
 6d2:	0a c0       	rjmp	.+20     	; 0x6e8 <__vector_1+0x90>
 6d4:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <TARGETID>
 6d8:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <address>
 6dc:	98 17       	cp	r25, r24
 6de:	21 f0       	breq	.+8      	; 0x6e8 <__vector_1+0x90>
 6e0:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <TARGETID>
 6e4:	8f 3f       	cpi	r24, 0xFF	; 255
 6e6:	21 f4       	brne	.+8      	; 0x6f0 <__vector_1+0x98>
        || PAYLOADLEN < 3) // address situation could receive packets that are malformed and don't fit this libraries extra fields
 6e8:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <PAYLOADLEN>
 6ec:	83 30       	cpi	r24, 0x03	; 3
 6ee:	38 f4       	brcc	.+14     	; 0x6fe <__vector_1+0xa6>
        {
            PAYLOADLEN = 0;
 6f0:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <PAYLOADLEN>
            unselect();
 6f4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <unselect>
            receiveBegin();
 6f8:	0e 94 cf 01 	call	0x39e	; 0x39e <receiveBegin>
            return;
 6fc:	3f c0       	rjmp	.+126    	; 0x77c <__vector_1+0x124>
        }

        DATALEN = PAYLOADLEN - 3;
 6fe:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <PAYLOADLEN>
 702:	83 50       	subi	r24, 0x03	; 3
 704:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <DATALEN>
        SENDERID = spi_fast_shift(0);
 708:	80 e0       	ldi	r24, 0x00	; 0
 70a:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <spi_fast_shift>
 70e:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <SENDERID>
        uint8_t CTLbyte = spi_fast_shift(0);
 712:	80 e0       	ldi	r24, 0x00	; 0
 714:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <spi_fast_shift>

        ACK_RECEIVED = CTLbyte & RFM69_CTL_SENDACK; // extract ACK-received flag
 718:	98 2f       	mov	r25, r24
 71a:	90 78       	andi	r25, 0x80	; 128
 71c:	90 93 64 01 	sts	0x0164, r25	; 0x800164 <ACK_RECEIVED>
        ACK_REQUESTED = CTLbyte & RFM69_CTL_REQACK; // extract ACK-requested flag
 720:	80 74       	andi	r24, 0x40	; 64
 722:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <ACK_REQUESTED>
        
        //interruptHook(CTLbyte);                   // TWS: hook to derived class interrupt function

        for (uint8_t i = 0; i < DATALEN; i++)
 726:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <DATALEN>
 72a:	88 23       	and	r24, r24
 72c:	79 f0       	breq	.+30     	; 0x74c <__vector_1+0xf4>
 72e:	c0 e0       	ldi	r28, 0x00	; 0
        {
            DATA[i] = spi_fast_shift(0);
 730:	0c 2f       	mov	r16, r28
 732:	10 e0       	ldi	r17, 0x00	; 0
 734:	80 e0       	ldi	r24, 0x00	; 0
 736:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <spi_fast_shift>
 73a:	f8 01       	movw	r30, r16
 73c:	ee 5d       	subi	r30, 0xDE	; 222
 73e:	fe 4f       	sbci	r31, 0xFE	; 254
 740:	80 83       	st	Z, r24
        ACK_RECEIVED = CTLbyte & RFM69_CTL_SENDACK; // extract ACK-received flag
        ACK_REQUESTED = CTLbyte & RFM69_CTL_REQACK; // extract ACK-requested flag
        
        //interruptHook(CTLbyte);                   // TWS: hook to derived class interrupt function

        for (uint8_t i = 0; i < DATALEN; i++)
 742:	cf 5f       	subi	r28, 0xFF	; 255
 744:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <DATALEN>
 748:	c8 17       	cp	r28, r24
 74a:	90 f3       	brcs	.-28     	; 0x730 <__vector_1+0xd8>
        {
            DATA[i] = spi_fast_shift(0);
        }
        if (DATALEN < RF69_MAX_DATA_LEN) DATA[DATALEN] = 0; // add null at end of string
 74c:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <DATALEN>
 750:	8d 33       	cpi	r24, 0x3D	; 61
 752:	30 f4       	brcc	.+12     	; 0x760 <__vector_1+0x108>
 754:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <DATALEN>
 758:	f0 e0       	ldi	r31, 0x00	; 0
 75a:	ee 5d       	subi	r30, 0xDE	; 222
 75c:	fe 4f       	sbci	r31, 0xFE	; 254
 75e:	10 82       	st	Z, r1
        unselect();
 760:	0e 94 e5 00 	call	0x1ca	; 0x1ca <unselect>
        setMode(RF69_MODE_RX);
 764:	83 e0       	ldi	r24, 0x03	; 3
 766:	0e 94 3c 01 	call	0x278	; 0x278 <setMode>
    }
    RSSI = readRSSI(0);
 76a:	80 e0       	ldi	r24, 0x00	; 0
 76c:	0e 94 ba 01 	call	0x374	; 0x374 <readRSSI>
 770:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <RSSI+0x1>
 774:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <RSSI>
    inISR = 0;
 778:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <inISR>
}
 77c:	ff 91       	pop	r31
 77e:	ef 91       	pop	r30
 780:	cf 91       	pop	r28
 782:	bf 91       	pop	r27
 784:	af 91       	pop	r26
 786:	9f 91       	pop	r25
 788:	8f 91       	pop	r24
 78a:	7f 91       	pop	r23
 78c:	6f 91       	pop	r22
 78e:	5f 91       	pop	r21
 790:	4f 91       	pop	r20
 792:	3f 91       	pop	r19
 794:	2f 91       	pop	r18
 796:	1f 91       	pop	r17
 798:	0f 91       	pop	r16
 79a:	0f 90       	pop	r0
 79c:	0f be       	out	0x3f, r0	; 63
 79e:	0f 90       	pop	r0
 7a0:	1f 90       	pop	r1
 7a2:	18 95       	reti

000007a4 <spi_init>:
    uint8_t i;
    for (i = 0; i < len; i++) {
        SPDR = dataout[i];
        while((SPSR & (1<<SPIF))==0);
    }
	PORTD |= 1<<2; // SS høj
 7a4:	52 9a       	sbi	0x0a, 2	; 10
 7a6:	84 b1       	in	r24, 0x04	; 4
 7a8:	80 7f       	andi	r24, 0xF0	; 240
 7aa:	84 b9       	out	0x04, r24	; 4
 7ac:	5b 9a       	sbi	0x0b, 3	; 11
 7ae:	84 b1       	in	r24, 0x04	; 4
 7b0:	87 60       	ori	r24, 0x07	; 7
 7b2:	84 b9       	out	0x04, r24	; 4
 7b4:	5a 9a       	sbi	0x0b, 2	; 11
 7b6:	80 e5       	ldi	r24, 0x50	; 80
 7b8:	8c bd       	out	0x2c, r24	; 44
 7ba:	81 e0       	ldi	r24, 0x01	; 1
 7bc:	8d bd       	out	0x2d, r24	; 45
 7be:	08 95       	ret

000007c0 <spi_fast_shift>:

uint8_t spi_fast_shift (uint8_t data)
// Clocks only one byte to target device and returns the received one
{
	
    SPDR = data;
 7c0:	8e bd       	out	0x2e, r24	; 46
    while((SPSR & (1<<SPIF))==0);
 7c2:	0d b4       	in	r0, 0x2d	; 45
 7c4:	07 fe       	sbrs	r0, 7
 7c6:	fd cf       	rjmp	.-6      	; 0x7c2 <spi_fast_shift+0x2>
    return SPDR;
 7c8:	8e b5       	in	r24, 0x2e	; 46
}
 7ca:	08 95       	ret

000007cc <sprintf>:
 7cc:	ae e0       	ldi	r26, 0x0E	; 14
 7ce:	b0 e0       	ldi	r27, 0x00	; 0
 7d0:	ec ee       	ldi	r30, 0xEC	; 236
 7d2:	f3 e0       	ldi	r31, 0x03	; 3
 7d4:	0c 94 a7 06 	jmp	0xd4e	; 0xd4e <__prologue_saves__+0x1c>
 7d8:	0d 89       	ldd	r16, Y+21	; 0x15
 7da:	1e 89       	ldd	r17, Y+22	; 0x16
 7dc:	86 e0       	ldi	r24, 0x06	; 6
 7de:	8c 83       	std	Y+4, r24	; 0x04
 7e0:	1a 83       	std	Y+2, r17	; 0x02
 7e2:	09 83       	std	Y+1, r16	; 0x01
 7e4:	8f ef       	ldi	r24, 0xFF	; 255
 7e6:	9f e7       	ldi	r25, 0x7F	; 127
 7e8:	9e 83       	std	Y+6, r25	; 0x06
 7ea:	8d 83       	std	Y+5, r24	; 0x05
 7ec:	ae 01       	movw	r20, r28
 7ee:	47 5e       	subi	r20, 0xE7	; 231
 7f0:	5f 4f       	sbci	r21, 0xFF	; 255
 7f2:	6f 89       	ldd	r22, Y+23	; 0x17
 7f4:	78 8d       	ldd	r23, Y+24	; 0x18
 7f6:	ce 01       	movw	r24, r28
 7f8:	01 96       	adiw	r24, 0x01	; 1
 7fa:	0e 94 08 04 	call	0x810	; 0x810 <vfprintf>
 7fe:	ef 81       	ldd	r30, Y+7	; 0x07
 800:	f8 85       	ldd	r31, Y+8	; 0x08
 802:	e0 0f       	add	r30, r16
 804:	f1 1f       	adc	r31, r17
 806:	10 82       	st	Z, r1
 808:	2e 96       	adiw	r28, 0x0e	; 14
 80a:	e4 e0       	ldi	r30, 0x04	; 4
 80c:	0c 94 c3 06 	jmp	0xd86	; 0xd86 <__epilogue_restores__+0x1c>

00000810 <vfprintf>:
 810:	ab e0       	ldi	r26, 0x0B	; 11
 812:	b0 e0       	ldi	r27, 0x00	; 0
 814:	ee e0       	ldi	r30, 0x0E	; 14
 816:	f4 e0       	ldi	r31, 0x04	; 4
 818:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__prologue_saves__>
 81c:	6c 01       	movw	r12, r24
 81e:	7b 01       	movw	r14, r22
 820:	8a 01       	movw	r16, r20
 822:	fc 01       	movw	r30, r24
 824:	17 82       	std	Z+7, r1	; 0x07
 826:	16 82       	std	Z+6, r1	; 0x06
 828:	83 81       	ldd	r24, Z+3	; 0x03
 82a:	81 ff       	sbrs	r24, 1
 82c:	cc c1       	rjmp	.+920    	; 0xbc6 <vfprintf+0x3b6>
 82e:	ce 01       	movw	r24, r28
 830:	01 96       	adiw	r24, 0x01	; 1
 832:	3c 01       	movw	r6, r24
 834:	f6 01       	movw	r30, r12
 836:	93 81       	ldd	r25, Z+3	; 0x03
 838:	f7 01       	movw	r30, r14
 83a:	93 fd       	sbrc	r25, 3
 83c:	85 91       	lpm	r24, Z+
 83e:	93 ff       	sbrs	r25, 3
 840:	81 91       	ld	r24, Z+
 842:	7f 01       	movw	r14, r30
 844:	88 23       	and	r24, r24
 846:	09 f4       	brne	.+2      	; 0x84a <vfprintf+0x3a>
 848:	ba c1       	rjmp	.+884    	; 0xbbe <vfprintf+0x3ae>
 84a:	85 32       	cpi	r24, 0x25	; 37
 84c:	39 f4       	brne	.+14     	; 0x85c <vfprintf+0x4c>
 84e:	93 fd       	sbrc	r25, 3
 850:	85 91       	lpm	r24, Z+
 852:	93 ff       	sbrs	r25, 3
 854:	81 91       	ld	r24, Z+
 856:	7f 01       	movw	r14, r30
 858:	85 32       	cpi	r24, 0x25	; 37
 85a:	29 f4       	brne	.+10     	; 0x866 <vfprintf+0x56>
 85c:	b6 01       	movw	r22, r12
 85e:	90 e0       	ldi	r25, 0x00	; 0
 860:	0e 94 ff 05 	call	0xbfe	; 0xbfe <fputc>
 864:	e7 cf       	rjmp	.-50     	; 0x834 <vfprintf+0x24>
 866:	91 2c       	mov	r9, r1
 868:	21 2c       	mov	r2, r1
 86a:	31 2c       	mov	r3, r1
 86c:	ff e1       	ldi	r31, 0x1F	; 31
 86e:	f3 15       	cp	r31, r3
 870:	d8 f0       	brcs	.+54     	; 0x8a8 <vfprintf+0x98>
 872:	8b 32       	cpi	r24, 0x2B	; 43
 874:	79 f0       	breq	.+30     	; 0x894 <vfprintf+0x84>
 876:	38 f4       	brcc	.+14     	; 0x886 <vfprintf+0x76>
 878:	80 32       	cpi	r24, 0x20	; 32
 87a:	79 f0       	breq	.+30     	; 0x89a <vfprintf+0x8a>
 87c:	83 32       	cpi	r24, 0x23	; 35
 87e:	a1 f4       	brne	.+40     	; 0x8a8 <vfprintf+0x98>
 880:	23 2d       	mov	r18, r3
 882:	20 61       	ori	r18, 0x10	; 16
 884:	1d c0       	rjmp	.+58     	; 0x8c0 <vfprintf+0xb0>
 886:	8d 32       	cpi	r24, 0x2D	; 45
 888:	61 f0       	breq	.+24     	; 0x8a2 <vfprintf+0x92>
 88a:	80 33       	cpi	r24, 0x30	; 48
 88c:	69 f4       	brne	.+26     	; 0x8a8 <vfprintf+0x98>
 88e:	23 2d       	mov	r18, r3
 890:	21 60       	ori	r18, 0x01	; 1
 892:	16 c0       	rjmp	.+44     	; 0x8c0 <vfprintf+0xb0>
 894:	83 2d       	mov	r24, r3
 896:	82 60       	ori	r24, 0x02	; 2
 898:	38 2e       	mov	r3, r24
 89a:	e3 2d       	mov	r30, r3
 89c:	e4 60       	ori	r30, 0x04	; 4
 89e:	3e 2e       	mov	r3, r30
 8a0:	2a c0       	rjmp	.+84     	; 0x8f6 <vfprintf+0xe6>
 8a2:	f3 2d       	mov	r31, r3
 8a4:	f8 60       	ori	r31, 0x08	; 8
 8a6:	1d c0       	rjmp	.+58     	; 0x8e2 <vfprintf+0xd2>
 8a8:	37 fc       	sbrc	r3, 7
 8aa:	2d c0       	rjmp	.+90     	; 0x906 <vfprintf+0xf6>
 8ac:	20 ed       	ldi	r18, 0xD0	; 208
 8ae:	28 0f       	add	r18, r24
 8b0:	2a 30       	cpi	r18, 0x0A	; 10
 8b2:	40 f0       	brcs	.+16     	; 0x8c4 <vfprintf+0xb4>
 8b4:	8e 32       	cpi	r24, 0x2E	; 46
 8b6:	b9 f4       	brne	.+46     	; 0x8e6 <vfprintf+0xd6>
 8b8:	36 fc       	sbrc	r3, 6
 8ba:	81 c1       	rjmp	.+770    	; 0xbbe <vfprintf+0x3ae>
 8bc:	23 2d       	mov	r18, r3
 8be:	20 64       	ori	r18, 0x40	; 64
 8c0:	32 2e       	mov	r3, r18
 8c2:	19 c0       	rjmp	.+50     	; 0x8f6 <vfprintf+0xe6>
 8c4:	36 fe       	sbrs	r3, 6
 8c6:	06 c0       	rjmp	.+12     	; 0x8d4 <vfprintf+0xc4>
 8c8:	8a e0       	ldi	r24, 0x0A	; 10
 8ca:	98 9e       	mul	r9, r24
 8cc:	20 0d       	add	r18, r0
 8ce:	11 24       	eor	r1, r1
 8d0:	92 2e       	mov	r9, r18
 8d2:	11 c0       	rjmp	.+34     	; 0x8f6 <vfprintf+0xe6>
 8d4:	ea e0       	ldi	r30, 0x0A	; 10
 8d6:	2e 9e       	mul	r2, r30
 8d8:	20 0d       	add	r18, r0
 8da:	11 24       	eor	r1, r1
 8dc:	22 2e       	mov	r2, r18
 8de:	f3 2d       	mov	r31, r3
 8e0:	f0 62       	ori	r31, 0x20	; 32
 8e2:	3f 2e       	mov	r3, r31
 8e4:	08 c0       	rjmp	.+16     	; 0x8f6 <vfprintf+0xe6>
 8e6:	8c 36       	cpi	r24, 0x6C	; 108
 8e8:	21 f4       	brne	.+8      	; 0x8f2 <vfprintf+0xe2>
 8ea:	83 2d       	mov	r24, r3
 8ec:	80 68       	ori	r24, 0x80	; 128
 8ee:	38 2e       	mov	r3, r24
 8f0:	02 c0       	rjmp	.+4      	; 0x8f6 <vfprintf+0xe6>
 8f2:	88 36       	cpi	r24, 0x68	; 104
 8f4:	41 f4       	brne	.+16     	; 0x906 <vfprintf+0xf6>
 8f6:	f7 01       	movw	r30, r14
 8f8:	93 fd       	sbrc	r25, 3
 8fa:	85 91       	lpm	r24, Z+
 8fc:	93 ff       	sbrs	r25, 3
 8fe:	81 91       	ld	r24, Z+
 900:	7f 01       	movw	r14, r30
 902:	81 11       	cpse	r24, r1
 904:	b3 cf       	rjmp	.-154    	; 0x86c <vfprintf+0x5c>
 906:	98 2f       	mov	r25, r24
 908:	9f 7d       	andi	r25, 0xDF	; 223
 90a:	95 54       	subi	r25, 0x45	; 69
 90c:	93 30       	cpi	r25, 0x03	; 3
 90e:	28 f4       	brcc	.+10     	; 0x91a <vfprintf+0x10a>
 910:	0c 5f       	subi	r16, 0xFC	; 252
 912:	1f 4f       	sbci	r17, 0xFF	; 255
 914:	9f e3       	ldi	r25, 0x3F	; 63
 916:	99 83       	std	Y+1, r25	; 0x01
 918:	0d c0       	rjmp	.+26     	; 0x934 <vfprintf+0x124>
 91a:	83 36       	cpi	r24, 0x63	; 99
 91c:	31 f0       	breq	.+12     	; 0x92a <vfprintf+0x11a>
 91e:	83 37       	cpi	r24, 0x73	; 115
 920:	71 f0       	breq	.+28     	; 0x93e <vfprintf+0x12e>
 922:	83 35       	cpi	r24, 0x53	; 83
 924:	09 f0       	breq	.+2      	; 0x928 <vfprintf+0x118>
 926:	59 c0       	rjmp	.+178    	; 0x9da <vfprintf+0x1ca>
 928:	21 c0       	rjmp	.+66     	; 0x96c <vfprintf+0x15c>
 92a:	f8 01       	movw	r30, r16
 92c:	80 81       	ld	r24, Z
 92e:	89 83       	std	Y+1, r24	; 0x01
 930:	0e 5f       	subi	r16, 0xFE	; 254
 932:	1f 4f       	sbci	r17, 0xFF	; 255
 934:	88 24       	eor	r8, r8
 936:	83 94       	inc	r8
 938:	91 2c       	mov	r9, r1
 93a:	53 01       	movw	r10, r6
 93c:	13 c0       	rjmp	.+38     	; 0x964 <vfprintf+0x154>
 93e:	28 01       	movw	r4, r16
 940:	f2 e0       	ldi	r31, 0x02	; 2
 942:	4f 0e       	add	r4, r31
 944:	51 1c       	adc	r5, r1
 946:	f8 01       	movw	r30, r16
 948:	a0 80       	ld	r10, Z
 94a:	b1 80       	ldd	r11, Z+1	; 0x01
 94c:	36 fe       	sbrs	r3, 6
 94e:	03 c0       	rjmp	.+6      	; 0x956 <vfprintf+0x146>
 950:	69 2d       	mov	r22, r9
 952:	70 e0       	ldi	r23, 0x00	; 0
 954:	02 c0       	rjmp	.+4      	; 0x95a <vfprintf+0x14a>
 956:	6f ef       	ldi	r22, 0xFF	; 255
 958:	7f ef       	ldi	r23, 0xFF	; 255
 95a:	c5 01       	movw	r24, r10
 95c:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <strnlen>
 960:	4c 01       	movw	r8, r24
 962:	82 01       	movw	r16, r4
 964:	f3 2d       	mov	r31, r3
 966:	ff 77       	andi	r31, 0x7F	; 127
 968:	3f 2e       	mov	r3, r31
 96a:	16 c0       	rjmp	.+44     	; 0x998 <vfprintf+0x188>
 96c:	28 01       	movw	r4, r16
 96e:	22 e0       	ldi	r18, 0x02	; 2
 970:	42 0e       	add	r4, r18
 972:	51 1c       	adc	r5, r1
 974:	f8 01       	movw	r30, r16
 976:	a0 80       	ld	r10, Z
 978:	b1 80       	ldd	r11, Z+1	; 0x01
 97a:	36 fe       	sbrs	r3, 6
 97c:	03 c0       	rjmp	.+6      	; 0x984 <vfprintf+0x174>
 97e:	69 2d       	mov	r22, r9
 980:	70 e0       	ldi	r23, 0x00	; 0
 982:	02 c0       	rjmp	.+4      	; 0x988 <vfprintf+0x178>
 984:	6f ef       	ldi	r22, 0xFF	; 255
 986:	7f ef       	ldi	r23, 0xFF	; 255
 988:	c5 01       	movw	r24, r10
 98a:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <strnlen_P>
 98e:	4c 01       	movw	r8, r24
 990:	f3 2d       	mov	r31, r3
 992:	f0 68       	ori	r31, 0x80	; 128
 994:	3f 2e       	mov	r3, r31
 996:	82 01       	movw	r16, r4
 998:	33 fc       	sbrc	r3, 3
 99a:	1b c0       	rjmp	.+54     	; 0x9d2 <vfprintf+0x1c2>
 99c:	82 2d       	mov	r24, r2
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	88 16       	cp	r8, r24
 9a2:	99 06       	cpc	r9, r25
 9a4:	b0 f4       	brcc	.+44     	; 0x9d2 <vfprintf+0x1c2>
 9a6:	b6 01       	movw	r22, r12
 9a8:	80 e2       	ldi	r24, 0x20	; 32
 9aa:	90 e0       	ldi	r25, 0x00	; 0
 9ac:	0e 94 ff 05 	call	0xbfe	; 0xbfe <fputc>
 9b0:	2a 94       	dec	r2
 9b2:	f4 cf       	rjmp	.-24     	; 0x99c <vfprintf+0x18c>
 9b4:	f5 01       	movw	r30, r10
 9b6:	37 fc       	sbrc	r3, 7
 9b8:	85 91       	lpm	r24, Z+
 9ba:	37 fe       	sbrs	r3, 7
 9bc:	81 91       	ld	r24, Z+
 9be:	5f 01       	movw	r10, r30
 9c0:	b6 01       	movw	r22, r12
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	0e 94 ff 05 	call	0xbfe	; 0xbfe <fputc>
 9c8:	21 10       	cpse	r2, r1
 9ca:	2a 94       	dec	r2
 9cc:	21 e0       	ldi	r18, 0x01	; 1
 9ce:	82 1a       	sub	r8, r18
 9d0:	91 08       	sbc	r9, r1
 9d2:	81 14       	cp	r8, r1
 9d4:	91 04       	cpc	r9, r1
 9d6:	71 f7       	brne	.-36     	; 0x9b4 <vfprintf+0x1a4>
 9d8:	e8 c0       	rjmp	.+464    	; 0xbaa <vfprintf+0x39a>
 9da:	84 36       	cpi	r24, 0x64	; 100
 9dc:	11 f0       	breq	.+4      	; 0x9e2 <vfprintf+0x1d2>
 9de:	89 36       	cpi	r24, 0x69	; 105
 9e0:	41 f5       	brne	.+80     	; 0xa32 <vfprintf+0x222>
 9e2:	f8 01       	movw	r30, r16
 9e4:	37 fe       	sbrs	r3, 7
 9e6:	07 c0       	rjmp	.+14     	; 0x9f6 <vfprintf+0x1e6>
 9e8:	60 81       	ld	r22, Z
 9ea:	71 81       	ldd	r23, Z+1	; 0x01
 9ec:	82 81       	ldd	r24, Z+2	; 0x02
 9ee:	93 81       	ldd	r25, Z+3	; 0x03
 9f0:	0c 5f       	subi	r16, 0xFC	; 252
 9f2:	1f 4f       	sbci	r17, 0xFF	; 255
 9f4:	08 c0       	rjmp	.+16     	; 0xa06 <vfprintf+0x1f6>
 9f6:	60 81       	ld	r22, Z
 9f8:	71 81       	ldd	r23, Z+1	; 0x01
 9fa:	07 2e       	mov	r0, r23
 9fc:	00 0c       	add	r0, r0
 9fe:	88 0b       	sbc	r24, r24
 a00:	99 0b       	sbc	r25, r25
 a02:	0e 5f       	subi	r16, 0xFE	; 254
 a04:	1f 4f       	sbci	r17, 0xFF	; 255
 a06:	f3 2d       	mov	r31, r3
 a08:	ff 76       	andi	r31, 0x6F	; 111
 a0a:	3f 2e       	mov	r3, r31
 a0c:	97 ff       	sbrs	r25, 7
 a0e:	09 c0       	rjmp	.+18     	; 0xa22 <vfprintf+0x212>
 a10:	90 95       	com	r25
 a12:	80 95       	com	r24
 a14:	70 95       	com	r23
 a16:	61 95       	neg	r22
 a18:	7f 4f       	sbci	r23, 0xFF	; 255
 a1a:	8f 4f       	sbci	r24, 0xFF	; 255
 a1c:	9f 4f       	sbci	r25, 0xFF	; 255
 a1e:	f0 68       	ori	r31, 0x80	; 128
 a20:	3f 2e       	mov	r3, r31
 a22:	2a e0       	ldi	r18, 0x0A	; 10
 a24:	30 e0       	ldi	r19, 0x00	; 0
 a26:	a3 01       	movw	r20, r6
 a28:	0e 94 3b 06 	call	0xc76	; 0xc76 <__ultoa_invert>
 a2c:	88 2e       	mov	r8, r24
 a2e:	86 18       	sub	r8, r6
 a30:	45 c0       	rjmp	.+138    	; 0xabc <vfprintf+0x2ac>
 a32:	85 37       	cpi	r24, 0x75	; 117
 a34:	31 f4       	brne	.+12     	; 0xa42 <vfprintf+0x232>
 a36:	23 2d       	mov	r18, r3
 a38:	2f 7e       	andi	r18, 0xEF	; 239
 a3a:	b2 2e       	mov	r11, r18
 a3c:	2a e0       	ldi	r18, 0x0A	; 10
 a3e:	30 e0       	ldi	r19, 0x00	; 0
 a40:	25 c0       	rjmp	.+74     	; 0xa8c <vfprintf+0x27c>
 a42:	93 2d       	mov	r25, r3
 a44:	99 7f       	andi	r25, 0xF9	; 249
 a46:	b9 2e       	mov	r11, r25
 a48:	8f 36       	cpi	r24, 0x6F	; 111
 a4a:	c1 f0       	breq	.+48     	; 0xa7c <vfprintf+0x26c>
 a4c:	18 f4       	brcc	.+6      	; 0xa54 <vfprintf+0x244>
 a4e:	88 35       	cpi	r24, 0x58	; 88
 a50:	79 f0       	breq	.+30     	; 0xa70 <vfprintf+0x260>
 a52:	b5 c0       	rjmp	.+362    	; 0xbbe <vfprintf+0x3ae>
 a54:	80 37       	cpi	r24, 0x70	; 112
 a56:	19 f0       	breq	.+6      	; 0xa5e <vfprintf+0x24e>
 a58:	88 37       	cpi	r24, 0x78	; 120
 a5a:	21 f0       	breq	.+8      	; 0xa64 <vfprintf+0x254>
 a5c:	b0 c0       	rjmp	.+352    	; 0xbbe <vfprintf+0x3ae>
 a5e:	e9 2f       	mov	r30, r25
 a60:	e0 61       	ori	r30, 0x10	; 16
 a62:	be 2e       	mov	r11, r30
 a64:	b4 fe       	sbrs	r11, 4
 a66:	0d c0       	rjmp	.+26     	; 0xa82 <vfprintf+0x272>
 a68:	fb 2d       	mov	r31, r11
 a6a:	f4 60       	ori	r31, 0x04	; 4
 a6c:	bf 2e       	mov	r11, r31
 a6e:	09 c0       	rjmp	.+18     	; 0xa82 <vfprintf+0x272>
 a70:	34 fe       	sbrs	r3, 4
 a72:	0a c0       	rjmp	.+20     	; 0xa88 <vfprintf+0x278>
 a74:	29 2f       	mov	r18, r25
 a76:	26 60       	ori	r18, 0x06	; 6
 a78:	b2 2e       	mov	r11, r18
 a7a:	06 c0       	rjmp	.+12     	; 0xa88 <vfprintf+0x278>
 a7c:	28 e0       	ldi	r18, 0x08	; 8
 a7e:	30 e0       	ldi	r19, 0x00	; 0
 a80:	05 c0       	rjmp	.+10     	; 0xa8c <vfprintf+0x27c>
 a82:	20 e1       	ldi	r18, 0x10	; 16
 a84:	30 e0       	ldi	r19, 0x00	; 0
 a86:	02 c0       	rjmp	.+4      	; 0xa8c <vfprintf+0x27c>
 a88:	20 e1       	ldi	r18, 0x10	; 16
 a8a:	32 e0       	ldi	r19, 0x02	; 2
 a8c:	f8 01       	movw	r30, r16
 a8e:	b7 fe       	sbrs	r11, 7
 a90:	07 c0       	rjmp	.+14     	; 0xaa0 <vfprintf+0x290>
 a92:	60 81       	ld	r22, Z
 a94:	71 81       	ldd	r23, Z+1	; 0x01
 a96:	82 81       	ldd	r24, Z+2	; 0x02
 a98:	93 81       	ldd	r25, Z+3	; 0x03
 a9a:	0c 5f       	subi	r16, 0xFC	; 252
 a9c:	1f 4f       	sbci	r17, 0xFF	; 255
 a9e:	06 c0       	rjmp	.+12     	; 0xaac <vfprintf+0x29c>
 aa0:	60 81       	ld	r22, Z
 aa2:	71 81       	ldd	r23, Z+1	; 0x01
 aa4:	80 e0       	ldi	r24, 0x00	; 0
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	0e 5f       	subi	r16, 0xFE	; 254
 aaa:	1f 4f       	sbci	r17, 0xFF	; 255
 aac:	a3 01       	movw	r20, r6
 aae:	0e 94 3b 06 	call	0xc76	; 0xc76 <__ultoa_invert>
 ab2:	88 2e       	mov	r8, r24
 ab4:	86 18       	sub	r8, r6
 ab6:	fb 2d       	mov	r31, r11
 ab8:	ff 77       	andi	r31, 0x7F	; 127
 aba:	3f 2e       	mov	r3, r31
 abc:	36 fe       	sbrs	r3, 6
 abe:	0d c0       	rjmp	.+26     	; 0xada <vfprintf+0x2ca>
 ac0:	23 2d       	mov	r18, r3
 ac2:	2e 7f       	andi	r18, 0xFE	; 254
 ac4:	a2 2e       	mov	r10, r18
 ac6:	89 14       	cp	r8, r9
 ac8:	58 f4       	brcc	.+22     	; 0xae0 <vfprintf+0x2d0>
 aca:	34 fe       	sbrs	r3, 4
 acc:	0b c0       	rjmp	.+22     	; 0xae4 <vfprintf+0x2d4>
 ace:	32 fc       	sbrc	r3, 2
 ad0:	09 c0       	rjmp	.+18     	; 0xae4 <vfprintf+0x2d4>
 ad2:	83 2d       	mov	r24, r3
 ad4:	8e 7e       	andi	r24, 0xEE	; 238
 ad6:	a8 2e       	mov	r10, r24
 ad8:	05 c0       	rjmp	.+10     	; 0xae4 <vfprintf+0x2d4>
 ada:	b8 2c       	mov	r11, r8
 adc:	a3 2c       	mov	r10, r3
 ade:	03 c0       	rjmp	.+6      	; 0xae6 <vfprintf+0x2d6>
 ae0:	b8 2c       	mov	r11, r8
 ae2:	01 c0       	rjmp	.+2      	; 0xae6 <vfprintf+0x2d6>
 ae4:	b9 2c       	mov	r11, r9
 ae6:	a4 fe       	sbrs	r10, 4
 ae8:	0f c0       	rjmp	.+30     	; 0xb08 <vfprintf+0x2f8>
 aea:	fe 01       	movw	r30, r28
 aec:	e8 0d       	add	r30, r8
 aee:	f1 1d       	adc	r31, r1
 af0:	80 81       	ld	r24, Z
 af2:	80 33       	cpi	r24, 0x30	; 48
 af4:	21 f4       	brne	.+8      	; 0xafe <vfprintf+0x2ee>
 af6:	9a 2d       	mov	r25, r10
 af8:	99 7e       	andi	r25, 0xE9	; 233
 afa:	a9 2e       	mov	r10, r25
 afc:	09 c0       	rjmp	.+18     	; 0xb10 <vfprintf+0x300>
 afe:	a2 fe       	sbrs	r10, 2
 b00:	06 c0       	rjmp	.+12     	; 0xb0e <vfprintf+0x2fe>
 b02:	b3 94       	inc	r11
 b04:	b3 94       	inc	r11
 b06:	04 c0       	rjmp	.+8      	; 0xb10 <vfprintf+0x300>
 b08:	8a 2d       	mov	r24, r10
 b0a:	86 78       	andi	r24, 0x86	; 134
 b0c:	09 f0       	breq	.+2      	; 0xb10 <vfprintf+0x300>
 b0e:	b3 94       	inc	r11
 b10:	a3 fc       	sbrc	r10, 3
 b12:	11 c0       	rjmp	.+34     	; 0xb36 <vfprintf+0x326>
 b14:	a0 fe       	sbrs	r10, 0
 b16:	06 c0       	rjmp	.+12     	; 0xb24 <vfprintf+0x314>
 b18:	b2 14       	cp	r11, r2
 b1a:	88 f4       	brcc	.+34     	; 0xb3e <vfprintf+0x32e>
 b1c:	28 0c       	add	r2, r8
 b1e:	92 2c       	mov	r9, r2
 b20:	9b 18       	sub	r9, r11
 b22:	0e c0       	rjmp	.+28     	; 0xb40 <vfprintf+0x330>
 b24:	b2 14       	cp	r11, r2
 b26:	60 f4       	brcc	.+24     	; 0xb40 <vfprintf+0x330>
 b28:	b6 01       	movw	r22, r12
 b2a:	80 e2       	ldi	r24, 0x20	; 32
 b2c:	90 e0       	ldi	r25, 0x00	; 0
 b2e:	0e 94 ff 05 	call	0xbfe	; 0xbfe <fputc>
 b32:	b3 94       	inc	r11
 b34:	f7 cf       	rjmp	.-18     	; 0xb24 <vfprintf+0x314>
 b36:	b2 14       	cp	r11, r2
 b38:	18 f4       	brcc	.+6      	; 0xb40 <vfprintf+0x330>
 b3a:	2b 18       	sub	r2, r11
 b3c:	02 c0       	rjmp	.+4      	; 0xb42 <vfprintf+0x332>
 b3e:	98 2c       	mov	r9, r8
 b40:	21 2c       	mov	r2, r1
 b42:	a4 fe       	sbrs	r10, 4
 b44:	10 c0       	rjmp	.+32     	; 0xb66 <vfprintf+0x356>
 b46:	b6 01       	movw	r22, r12
 b48:	80 e3       	ldi	r24, 0x30	; 48
 b4a:	90 e0       	ldi	r25, 0x00	; 0
 b4c:	0e 94 ff 05 	call	0xbfe	; 0xbfe <fputc>
 b50:	a2 fe       	sbrs	r10, 2
 b52:	17 c0       	rjmp	.+46     	; 0xb82 <vfprintf+0x372>
 b54:	a1 fc       	sbrc	r10, 1
 b56:	03 c0       	rjmp	.+6      	; 0xb5e <vfprintf+0x34e>
 b58:	88 e7       	ldi	r24, 0x78	; 120
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	02 c0       	rjmp	.+4      	; 0xb62 <vfprintf+0x352>
 b5e:	88 e5       	ldi	r24, 0x58	; 88
 b60:	90 e0       	ldi	r25, 0x00	; 0
 b62:	b6 01       	movw	r22, r12
 b64:	0c c0       	rjmp	.+24     	; 0xb7e <vfprintf+0x36e>
 b66:	8a 2d       	mov	r24, r10
 b68:	86 78       	andi	r24, 0x86	; 134
 b6a:	59 f0       	breq	.+22     	; 0xb82 <vfprintf+0x372>
 b6c:	a1 fe       	sbrs	r10, 1
 b6e:	02 c0       	rjmp	.+4      	; 0xb74 <vfprintf+0x364>
 b70:	8b e2       	ldi	r24, 0x2B	; 43
 b72:	01 c0       	rjmp	.+2      	; 0xb76 <vfprintf+0x366>
 b74:	80 e2       	ldi	r24, 0x20	; 32
 b76:	a7 fc       	sbrc	r10, 7
 b78:	8d e2       	ldi	r24, 0x2D	; 45
 b7a:	b6 01       	movw	r22, r12
 b7c:	90 e0       	ldi	r25, 0x00	; 0
 b7e:	0e 94 ff 05 	call	0xbfe	; 0xbfe <fputc>
 b82:	89 14       	cp	r8, r9
 b84:	38 f4       	brcc	.+14     	; 0xb94 <vfprintf+0x384>
 b86:	b6 01       	movw	r22, r12
 b88:	80 e3       	ldi	r24, 0x30	; 48
 b8a:	90 e0       	ldi	r25, 0x00	; 0
 b8c:	0e 94 ff 05 	call	0xbfe	; 0xbfe <fputc>
 b90:	9a 94       	dec	r9
 b92:	f7 cf       	rjmp	.-18     	; 0xb82 <vfprintf+0x372>
 b94:	8a 94       	dec	r8
 b96:	f3 01       	movw	r30, r6
 b98:	e8 0d       	add	r30, r8
 b9a:	f1 1d       	adc	r31, r1
 b9c:	80 81       	ld	r24, Z
 b9e:	b6 01       	movw	r22, r12
 ba0:	90 e0       	ldi	r25, 0x00	; 0
 ba2:	0e 94 ff 05 	call	0xbfe	; 0xbfe <fputc>
 ba6:	81 10       	cpse	r8, r1
 ba8:	f5 cf       	rjmp	.-22     	; 0xb94 <vfprintf+0x384>
 baa:	22 20       	and	r2, r2
 bac:	09 f4       	brne	.+2      	; 0xbb0 <vfprintf+0x3a0>
 bae:	42 ce       	rjmp	.-892    	; 0x834 <vfprintf+0x24>
 bb0:	b6 01       	movw	r22, r12
 bb2:	80 e2       	ldi	r24, 0x20	; 32
 bb4:	90 e0       	ldi	r25, 0x00	; 0
 bb6:	0e 94 ff 05 	call	0xbfe	; 0xbfe <fputc>
 bba:	2a 94       	dec	r2
 bbc:	f6 cf       	rjmp	.-20     	; 0xbaa <vfprintf+0x39a>
 bbe:	f6 01       	movw	r30, r12
 bc0:	86 81       	ldd	r24, Z+6	; 0x06
 bc2:	97 81       	ldd	r25, Z+7	; 0x07
 bc4:	02 c0       	rjmp	.+4      	; 0xbca <vfprintf+0x3ba>
 bc6:	8f ef       	ldi	r24, 0xFF	; 255
 bc8:	9f ef       	ldi	r25, 0xFF	; 255
 bca:	2b 96       	adiw	r28, 0x0b	; 11
 bcc:	e2 e1       	ldi	r30, 0x12	; 18
 bce:	0c 94 b5 06 	jmp	0xd6a	; 0xd6a <__epilogue_restores__>

00000bd2 <strnlen_P>:
 bd2:	fc 01       	movw	r30, r24
 bd4:	05 90       	lpm	r0, Z+
 bd6:	61 50       	subi	r22, 0x01	; 1
 bd8:	70 40       	sbci	r23, 0x00	; 0
 bda:	01 10       	cpse	r0, r1
 bdc:	d8 f7       	brcc	.-10     	; 0xbd4 <strnlen_P+0x2>
 bde:	80 95       	com	r24
 be0:	90 95       	com	r25
 be2:	8e 0f       	add	r24, r30
 be4:	9f 1f       	adc	r25, r31
 be6:	08 95       	ret

00000be8 <strnlen>:
 be8:	fc 01       	movw	r30, r24
 bea:	61 50       	subi	r22, 0x01	; 1
 bec:	70 40       	sbci	r23, 0x00	; 0
 bee:	01 90       	ld	r0, Z+
 bf0:	01 10       	cpse	r0, r1
 bf2:	d8 f7       	brcc	.-10     	; 0xbea <strnlen+0x2>
 bf4:	80 95       	com	r24
 bf6:	90 95       	com	r25
 bf8:	8e 0f       	add	r24, r30
 bfa:	9f 1f       	adc	r25, r31
 bfc:	08 95       	ret

00000bfe <fputc>:
 bfe:	0f 93       	push	r16
 c00:	1f 93       	push	r17
 c02:	cf 93       	push	r28
 c04:	df 93       	push	r29
 c06:	fb 01       	movw	r30, r22
 c08:	23 81       	ldd	r18, Z+3	; 0x03
 c0a:	21 fd       	sbrc	r18, 1
 c0c:	03 c0       	rjmp	.+6      	; 0xc14 <fputc+0x16>
 c0e:	8f ef       	ldi	r24, 0xFF	; 255
 c10:	9f ef       	ldi	r25, 0xFF	; 255
 c12:	2c c0       	rjmp	.+88     	; 0xc6c <fputc+0x6e>
 c14:	22 ff       	sbrs	r18, 2
 c16:	16 c0       	rjmp	.+44     	; 0xc44 <fputc+0x46>
 c18:	46 81       	ldd	r20, Z+6	; 0x06
 c1a:	57 81       	ldd	r21, Z+7	; 0x07
 c1c:	24 81       	ldd	r18, Z+4	; 0x04
 c1e:	35 81       	ldd	r19, Z+5	; 0x05
 c20:	42 17       	cp	r20, r18
 c22:	53 07       	cpc	r21, r19
 c24:	44 f4       	brge	.+16     	; 0xc36 <fputc+0x38>
 c26:	a0 81       	ld	r26, Z
 c28:	b1 81       	ldd	r27, Z+1	; 0x01
 c2a:	9d 01       	movw	r18, r26
 c2c:	2f 5f       	subi	r18, 0xFF	; 255
 c2e:	3f 4f       	sbci	r19, 0xFF	; 255
 c30:	31 83       	std	Z+1, r19	; 0x01
 c32:	20 83       	st	Z, r18
 c34:	8c 93       	st	X, r24
 c36:	26 81       	ldd	r18, Z+6	; 0x06
 c38:	37 81       	ldd	r19, Z+7	; 0x07
 c3a:	2f 5f       	subi	r18, 0xFF	; 255
 c3c:	3f 4f       	sbci	r19, 0xFF	; 255
 c3e:	37 83       	std	Z+7, r19	; 0x07
 c40:	26 83       	std	Z+6, r18	; 0x06
 c42:	14 c0       	rjmp	.+40     	; 0xc6c <fputc+0x6e>
 c44:	8b 01       	movw	r16, r22
 c46:	ec 01       	movw	r28, r24
 c48:	fb 01       	movw	r30, r22
 c4a:	00 84       	ldd	r0, Z+8	; 0x08
 c4c:	f1 85       	ldd	r31, Z+9	; 0x09
 c4e:	e0 2d       	mov	r30, r0
 c50:	09 95       	icall
 c52:	89 2b       	or	r24, r25
 c54:	e1 f6       	brne	.-72     	; 0xc0e <fputc+0x10>
 c56:	d8 01       	movw	r26, r16
 c58:	16 96       	adiw	r26, 0x06	; 6
 c5a:	8d 91       	ld	r24, X+
 c5c:	9c 91       	ld	r25, X
 c5e:	17 97       	sbiw	r26, 0x07	; 7
 c60:	01 96       	adiw	r24, 0x01	; 1
 c62:	17 96       	adiw	r26, 0x07	; 7
 c64:	9c 93       	st	X, r25
 c66:	8e 93       	st	-X, r24
 c68:	16 97       	sbiw	r26, 0x06	; 6
 c6a:	ce 01       	movw	r24, r28
 c6c:	df 91       	pop	r29
 c6e:	cf 91       	pop	r28
 c70:	1f 91       	pop	r17
 c72:	0f 91       	pop	r16
 c74:	08 95       	ret

00000c76 <__ultoa_invert>:
 c76:	fa 01       	movw	r30, r20
 c78:	aa 27       	eor	r26, r26
 c7a:	28 30       	cpi	r18, 0x08	; 8
 c7c:	51 f1       	breq	.+84     	; 0xcd2 <__ultoa_invert+0x5c>
 c7e:	20 31       	cpi	r18, 0x10	; 16
 c80:	81 f1       	breq	.+96     	; 0xce2 <__ultoa_invert+0x6c>
 c82:	e8 94       	clt
 c84:	6f 93       	push	r22
 c86:	6e 7f       	andi	r22, 0xFE	; 254
 c88:	6e 5f       	subi	r22, 0xFE	; 254
 c8a:	7f 4f       	sbci	r23, 0xFF	; 255
 c8c:	8f 4f       	sbci	r24, 0xFF	; 255
 c8e:	9f 4f       	sbci	r25, 0xFF	; 255
 c90:	af 4f       	sbci	r26, 0xFF	; 255
 c92:	b1 e0       	ldi	r27, 0x01	; 1
 c94:	3e d0       	rcall	.+124    	; 0xd12 <__ultoa_invert+0x9c>
 c96:	b4 e0       	ldi	r27, 0x04	; 4
 c98:	3c d0       	rcall	.+120    	; 0xd12 <__ultoa_invert+0x9c>
 c9a:	67 0f       	add	r22, r23
 c9c:	78 1f       	adc	r23, r24
 c9e:	89 1f       	adc	r24, r25
 ca0:	9a 1f       	adc	r25, r26
 ca2:	a1 1d       	adc	r26, r1
 ca4:	68 0f       	add	r22, r24
 ca6:	79 1f       	adc	r23, r25
 ca8:	8a 1f       	adc	r24, r26
 caa:	91 1d       	adc	r25, r1
 cac:	a1 1d       	adc	r26, r1
 cae:	6a 0f       	add	r22, r26
 cb0:	71 1d       	adc	r23, r1
 cb2:	81 1d       	adc	r24, r1
 cb4:	91 1d       	adc	r25, r1
 cb6:	a1 1d       	adc	r26, r1
 cb8:	20 d0       	rcall	.+64     	; 0xcfa <__ultoa_invert+0x84>
 cba:	09 f4       	brne	.+2      	; 0xcbe <__ultoa_invert+0x48>
 cbc:	68 94       	set
 cbe:	3f 91       	pop	r19
 cc0:	2a e0       	ldi	r18, 0x0A	; 10
 cc2:	26 9f       	mul	r18, r22
 cc4:	11 24       	eor	r1, r1
 cc6:	30 19       	sub	r19, r0
 cc8:	30 5d       	subi	r19, 0xD0	; 208
 cca:	31 93       	st	Z+, r19
 ccc:	de f6       	brtc	.-74     	; 0xc84 <__ultoa_invert+0xe>
 cce:	cf 01       	movw	r24, r30
 cd0:	08 95       	ret
 cd2:	46 2f       	mov	r20, r22
 cd4:	47 70       	andi	r20, 0x07	; 7
 cd6:	40 5d       	subi	r20, 0xD0	; 208
 cd8:	41 93       	st	Z+, r20
 cda:	b3 e0       	ldi	r27, 0x03	; 3
 cdc:	0f d0       	rcall	.+30     	; 0xcfc <__ultoa_invert+0x86>
 cde:	c9 f7       	brne	.-14     	; 0xcd2 <__ultoa_invert+0x5c>
 ce0:	f6 cf       	rjmp	.-20     	; 0xcce <__ultoa_invert+0x58>
 ce2:	46 2f       	mov	r20, r22
 ce4:	4f 70       	andi	r20, 0x0F	; 15
 ce6:	40 5d       	subi	r20, 0xD0	; 208
 ce8:	4a 33       	cpi	r20, 0x3A	; 58
 cea:	18 f0       	brcs	.+6      	; 0xcf2 <__ultoa_invert+0x7c>
 cec:	49 5d       	subi	r20, 0xD9	; 217
 cee:	31 fd       	sbrc	r19, 1
 cf0:	40 52       	subi	r20, 0x20	; 32
 cf2:	41 93       	st	Z+, r20
 cf4:	02 d0       	rcall	.+4      	; 0xcfa <__ultoa_invert+0x84>
 cf6:	a9 f7       	brne	.-22     	; 0xce2 <__ultoa_invert+0x6c>
 cf8:	ea cf       	rjmp	.-44     	; 0xcce <__ultoa_invert+0x58>
 cfa:	b4 e0       	ldi	r27, 0x04	; 4
 cfc:	a6 95       	lsr	r26
 cfe:	97 95       	ror	r25
 d00:	87 95       	ror	r24
 d02:	77 95       	ror	r23
 d04:	67 95       	ror	r22
 d06:	ba 95       	dec	r27
 d08:	c9 f7       	brne	.-14     	; 0xcfc <__ultoa_invert+0x86>
 d0a:	00 97       	sbiw	r24, 0x00	; 0
 d0c:	61 05       	cpc	r22, r1
 d0e:	71 05       	cpc	r23, r1
 d10:	08 95       	ret
 d12:	9b 01       	movw	r18, r22
 d14:	ac 01       	movw	r20, r24
 d16:	0a 2e       	mov	r0, r26
 d18:	06 94       	lsr	r0
 d1a:	57 95       	ror	r21
 d1c:	47 95       	ror	r20
 d1e:	37 95       	ror	r19
 d20:	27 95       	ror	r18
 d22:	ba 95       	dec	r27
 d24:	c9 f7       	brne	.-14     	; 0xd18 <__ultoa_invert+0xa2>
 d26:	62 0f       	add	r22, r18
 d28:	73 1f       	adc	r23, r19
 d2a:	84 1f       	adc	r24, r20
 d2c:	95 1f       	adc	r25, r21
 d2e:	a0 1d       	adc	r26, r0
 d30:	08 95       	ret

00000d32 <__prologue_saves__>:
 d32:	2f 92       	push	r2
 d34:	3f 92       	push	r3
 d36:	4f 92       	push	r4
 d38:	5f 92       	push	r5
 d3a:	6f 92       	push	r6
 d3c:	7f 92       	push	r7
 d3e:	8f 92       	push	r8
 d40:	9f 92       	push	r9
 d42:	af 92       	push	r10
 d44:	bf 92       	push	r11
 d46:	cf 92       	push	r12
 d48:	df 92       	push	r13
 d4a:	ef 92       	push	r14
 d4c:	ff 92       	push	r15
 d4e:	0f 93       	push	r16
 d50:	1f 93       	push	r17
 d52:	cf 93       	push	r28
 d54:	df 93       	push	r29
 d56:	cd b7       	in	r28, 0x3d	; 61
 d58:	de b7       	in	r29, 0x3e	; 62
 d5a:	ca 1b       	sub	r28, r26
 d5c:	db 0b       	sbc	r29, r27
 d5e:	0f b6       	in	r0, 0x3f	; 63
 d60:	f8 94       	cli
 d62:	de bf       	out	0x3e, r29	; 62
 d64:	0f be       	out	0x3f, r0	; 63
 d66:	cd bf       	out	0x3d, r28	; 61
 d68:	09 94       	ijmp

00000d6a <__epilogue_restores__>:
 d6a:	2a 88       	ldd	r2, Y+18	; 0x12
 d6c:	39 88       	ldd	r3, Y+17	; 0x11
 d6e:	48 88       	ldd	r4, Y+16	; 0x10
 d70:	5f 84       	ldd	r5, Y+15	; 0x0f
 d72:	6e 84       	ldd	r6, Y+14	; 0x0e
 d74:	7d 84       	ldd	r7, Y+13	; 0x0d
 d76:	8c 84       	ldd	r8, Y+12	; 0x0c
 d78:	9b 84       	ldd	r9, Y+11	; 0x0b
 d7a:	aa 84       	ldd	r10, Y+10	; 0x0a
 d7c:	b9 84       	ldd	r11, Y+9	; 0x09
 d7e:	c8 84       	ldd	r12, Y+8	; 0x08
 d80:	df 80       	ldd	r13, Y+7	; 0x07
 d82:	ee 80       	ldd	r14, Y+6	; 0x06
 d84:	fd 80       	ldd	r15, Y+5	; 0x05
 d86:	0c 81       	ldd	r16, Y+4	; 0x04
 d88:	1b 81       	ldd	r17, Y+3	; 0x03
 d8a:	aa 81       	ldd	r26, Y+2	; 0x02
 d8c:	b9 81       	ldd	r27, Y+1	; 0x01
 d8e:	ce 0f       	add	r28, r30
 d90:	d1 1d       	adc	r29, r1
 d92:	0f b6       	in	r0, 0x3f	; 63
 d94:	f8 94       	cli
 d96:	de bf       	out	0x3e, r29	; 62
 d98:	0f be       	out	0x3f, r0	; 63
 d9a:	cd bf       	out	0x3d, r28	; 61
 d9c:	ed 01       	movw	r28, r26
 d9e:	08 95       	ret

00000da0 <_exit>:
 da0:	f8 94       	cli

00000da2 <__stop_program>:
 da2:	ff cf       	rjmp	.-2      	; 0xda2 <__stop_program>
